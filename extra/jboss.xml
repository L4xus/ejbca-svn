<project name="extrajboss" basedir="." >
	<property environment="env"/>

    <property name="appserver.home" value="${env.APPSRV_HOME}"/>
    <property name="jboss.config" value="default"/>
    <property name="jboss.farm.name" value="deploy"/>
	<property name="jboss.server.home.dir" location="${appserver.home}/server/${jboss.config}"/>
    <property name="jboss.conf.dir" location="${jboss.server.home.dir}/conf"/>
	<property name="jboss.farm.dir" location="${jboss.server.home.dir}/${jboss.farm.name}"/>
	<property name="jboss.deploy.dir" location="${jboss.server.home.dir}/deploy"/>
	<property name="keystore.file" value="conf/keystore/extrakeystore.p12"/>
	<property name="scepkeystore.file" value="conf/keystore/sceprakeystore.p12"/>

    <!-- A little special something to handle backward compatibility with 
         people using JBOSS_HOME. They can switch to APPSRV_HOME now, and both will work. 
    -->        
    <condition property="jboss.home" value="${env.JBOSS_HOME}" >
        <equals arg1="${appserver.home}" arg2="${appserver.home}"/>
    </condition>
    <condition property="appserver.home" value="${env.APPSRV_HOME}" else="${jboss.home}">
        <contains string="${jboss.home}" substring="JBOSS_HOME"/>
    </condition>

	
	<target name="extraj2ee:check">
        <!--
            we could have a dedicated jboss for ejbca, so give users a chance to override
            otherwise, try to pick the one from environment if it exists
            -->
        <fail message="Please set the property 'appserver.home' for this project" unless="appserver.home"/>
		<!-- jboss-j2ee.jar is JBoss 4.2.x, jboss-javaee.jar is JBoss 5.0.x. Available does not touch the property
		     if the file does not exist, which is why this works. -->
        <available file="${appserver.home}/client/jboss-j2ee.jar" property="appserver.home.valid"/>
        <available file="${appserver.home}/client/jboss-javaee.jar" property="appserver.home.valid"/>
        <fail message="'appserver.home' (${appserver.home}) does not seem to be a valid JBoss home directory" unless="appserver.home.valid"/>
        <echo message="Using appserver.home : ${appserver.home}"/>
	</target>

	<!-- Configure the J2EE server with appropriate settings for the RA CA Service-->
	<target name="extraj2ee:configure" depends="extraj2ee:check">
        <available file="./keystore/extrakeystore.p12" property="extraserver.keystore.found"/>
        <fail message="The Ext RA keystore could not be found in 'keystore/extrakeystore.p12'" unless="extraserver.keystore.found"/>
		<copy file="keystore/extrakeystore.p12" tofile="${jboss.server.home.dir}/${keystore.file}"/>
	</target>

	<!-- Deploy the RA CA Service -->
	<target name="extraj2ee:deploy-ra-caservice" depends="extraj2ee:check">
		<copy todir="${jboss.farm.dir}">
          <fileset dir="src/appserver/jboss">
        	<include name="ramessage*-ds.xml"/>
          </fileset>
		</copy>	
	</target>

	<!-- Configure the J2EE server with appropriate settings for the SCEP RA server-->
	<target name="extraj2ee:scepraconfigure" depends="extraj2ee:check">
        <available file="./keystore/sceprakeystore.p12" property="scepraserver.keystore.found"/>
        <fail message="The SCEP RA keystore could not be found in 'keystore/sceprakeystore.p12'" unless="scepraserver.keystore.found"/>
		<copy file="keystore/sceprakeystore.p12" tofile="${jboss.server.home.dir}/${scepkeystore.file}"/>
	</target>

	<!-- Deploy the SCEP ra server war application -->
	<target name="extraj2ee:deployscepraserver" depends="extraj2ee:scepraconfigure">
    	<copy todir="${jboss.farm.dir}" file="${scepraserverwar}"/>  		
		<copy todir="${jboss.farm.dir}">
          <fileset dir="src/appserver/jboss">
        	<include name="ramessage*-ds.xml"/>
          </fileset>
		</copy>	
	</target>
	
	<target name="extraj2ee:assert-run" description="Check that the server is running">
        <echo message="Checking that the J2EE server is up and running..."/>
        <waitfor maxwait="2" maxwaitunit="second" timeoutproperty="j2ee.notrunning">
            <http url="http://localhost:8080/web-console/"/>
        </waitfor>
        <fail message="Please start J2EE server before running this script" if="j2ee.notrunning"/>	
	</target>

    

</project>

