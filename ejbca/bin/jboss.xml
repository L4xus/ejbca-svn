<project name="jboss" basedir=".." default="j2ee:deploy">
	<property environment="env"/>

    <property name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property name="jboss.config" value="default"/>
    <property name="jboss.farm.name" value="deploy"/>
	<property name="jboss.server.home.dir" location="${jboss.home}/server/${jboss.config}"/>
    <property name="jboss.conf.dir" location="${jboss.server.home.dir}/conf"/>
	<property name="jboss.farm.dir" location="${jboss.server.home.dir}/${jboss.farm.name}"/>
	<property name="jboss.deploy.dir" location="${jboss.server.home.dir}/deploy"/>
	<property name="keystore.file" value="conf/keystore/keystore.jks"/>

    <!-- FIXME: It must match the password in cli.xml !! -->
    <property name="httpsserver.password" value="serverpwd"/>
	
	<!--
	 Do not configure the servlet container, deploys blindly ears
	 This is ideally passed by the caller and is just here as a reminder
	  -->
	<!--property name="j2ee.web-noconfigure" value="true"/-->
	
	
	<target name="j2ee:check" description="Check a few configuration settings">
        <!--
            we could have a dedicated jboss for ejbca, so give users a chance to override
            otherwise, try to pick the one from environment if it exists
            -->
        <fail message="Please set the property 'jboss.home' for this project" unless="jboss.home"/>
        <available file="${jboss.home}/client/jboss-j2ee.jar" property="jboss.home.valid"/>
        <fail message="'jboss.home' (${jboss.home}) does not seem to be a valid JBoss home directory" unless="jboss.home.valid"/>
        <echo message="Using jboss.home : ${jboss.home}"/>
	</target>



	<target name="j2ee:configure" depends="j2ee:check, j2ee:web-configure" description="Configure the J2EE server with appropriate settings">
		
	</target>

	<target name="j2ee:web-configure" depends="j2ee:check" unless="j2ee.web-noconfigure" description="Configure the servlet container">
        <echo message="Using JBoss deploy directory ${jboss.farm.dir}"/>

		<!-- copy the keystore file to the server -->
		<available file="p12/tomcat.jks" property="keystore.file.present"/>
		<fail message="Missing JKS keystore file in '${basedir}/p12/tomcat.jks'" unless="keystore.file.present"/>
		<condition property="httpsserver.password.present">
			<isset property="httpsserver.password"/> 
		</condition>
		<fail message="Missing JKS password '${httpsserver.password}'" unless="httpsserver.password.present"/>

		<copy file="p12/tomcat.jks" tofile="${jboss.server.home.dir}/${keystore.file}"/>

		
        <!-- detect jboss web version -->
        <available file="${jboss.deploy.dir}/jbossweb-tomcat41.sar" type="dir" property="jboss.web" value="tomcat41"/>
        <available file="${jboss.deploy.dir}/jbossweb-tomcat50.sar" type="dir" property="jboss.web" value="tomcat50"/>
        <available file="${jboss.deploy.dir}/jbossweb-tomcat55.sar" type="dir" property="jboss.web" value="tomcat55"/>
        <fail message="Could not detect JBoss Servlet container version" unless="jboss.web"/>
		
		<!-- configure the tomcat bundle -->
		<property name="tomcat.dir" location="${jboss.deploy.dir}/jbossweb-${jboss.web}.sar"/>
        <copy todir="${tomcat.dir}" overwrite="true">
			<fileset dir="src/appserver/jboss/${jboss.web}"/>
			<filterchain>
			<tokenfilter>
		    	<replacestring from="@keystore.file@" to="${keystore.file}"/>
		    	<replacestring from="@httpsserver.password@" to="${httpsserver.password}"/>
		    	<replacestring from="@httpserver.pubhttp@" to="${httpserver.pubhttp}"/>
		    	<replacestring from="@httpserver.pubhttps@" to="${httpserver.pubhttps}"/>
		    	<replacestring from="@httpserver.privhttps@" to="${httpserver.privhttps}"/>
		    	<replacestring from="@web.contentencoding@" to="${web.contentencoding}"/>
			</tokenfilter>
			</filterchain>
        </copy>
        
	</target>

	<target name="j2ee:deploy" description="Deploy the application" depends="j2ee:configure">
        <copy todir="${jboss.farm.dir}" overwrite="true">
            <fileset dir="src/appserver/jboss">
            	<include name="ejbca-ds.xml"/>
            	<include name="ejbca-mail-service.xml"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
    	<copy todir="${jboss.farm.dir}">
    		<fileset dir="${dist.dir}" includes="ejbca.ear"/>
    	</copy>
	</target>

	<target name="j2ee:deploywithexternalocsp" description="Deploy the application" depends="j2ee:deploy">
        <copy todir="${jboss.farm.dir}" overwrite="true">
            <fileset dir="src/appserver/jboss">
                <include name="ocsp-ds.xml"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
	</target>

	<target name="j2ee:deployocsp" description="Deploy the standalone OCSP reponder" depends="j2ee:configure">
        <copy todir="${jboss.farm.dir}" overwrite="true">
            <fileset dir="src/appserver/jboss">
            	<include name="ejbca-ds.xml"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
    	<copy todir="${jboss.farm.dir}">
    		<fileset dir="${ocsp-dist.dir}" includes="ejbca.ear"/>
    	</copy>
	</target>



	<target name="j2ee:assert-run" description="Check that the server is running">
        <echo message="Checking that the J2EE server is up and running..."/>
        <waitfor maxwait="2" maxwaitunit="second" timeoutproperty="j2ee.notrunning">
            <http url="http://localhost:8080/web-console/"/>
        </waitfor>
        <fail message="Please start J2EE server before running this script" if="j2ee.notrunning"/>	
	</target>




	<target name="j2ee:run" description="Start the J2EE server">
    	<j2ee-server classname="org.jboss.Main" classpath="${jboss.home}/bin/run.jar">
            <args>
                <jvmarg value="-Djboss.home=${jboss.home}"/>
            </args>
    	</j2ee-server>
    <!--
            jboss.home.dir
            jboss.home.url			${jboss.home.dir}
            jboss.server.name		default
            jboss.server.base.dir	${jboss.home.dir}/server	
            jboss.server.home.dir	${jboss.base.dir}/${jboss.server.name}
            jboss.server.temp.dir	${jboss.server.home.dir}/tmp
            jboss.server.data.dir	${jboss.server.home.dir}/data
            jboss.server.base.url	${jboss.home.url}/server
            jboss.server.home.url	${jboss.base.url}/${jboss.server.name}
            jboss.server.config.url ${jboss.server.home.url}/conf
            jboss.server.lib.url	${jboss.server.home.url}/lib
        -->		
	</target>


    
	<target name="j2ee:debug" description="Start the J2EE server in debug mode">
    	<property name="j2ee.debug.transport" value="dt_socket"/>
    	<property name="j2ee.debug.address" value="5005"/>
    	<property name="j2ee.debug.jvm.opts" value="-Xdebug -Xnoagent -Xrunjdwp:transport=${j2ee.debug.transport},address=${j2ee.debug.address},server=y,suspend=y"/>
		<echo message="Connect your debugger using transport '${j2ee.debug.transport}' and address '${j2ee.debug.address}'"/>
		<antcall target="j2ee:run"/>
	</target>
	
    <macrodef name="j2ee-server">
		<attribute name="classname"/>
		<attribute name="classpath"/>
        <element name="args" optional="yes"/>
        <sequential>
        <property name="j2ee.debug.jvm.opts" value=""/>
		<available file="${java.home}/../lib/tools.jar" property="jdk.present"/>
		<fail message="Missing tools.jar in ${java.home}/lib. Please use a java JDK" unless="jdk.present"/>
		<java classname="@{classname}" fork="true">
	    	<classpath path="@{classpath}:${java.home}/../lib/tools.jar"/>
	    	<jvmarg line="${j2ee.debug.jvm.opts}"/>
	    	<args/>
		</java>
        </sequential>
    </macrodef>

</project>

