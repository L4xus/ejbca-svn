<!DOCTYPE project [
      <!ENTITY propertiesAndPaths SYSTEM "propertiesAndPaths.xmli">
      <!ENTITY compile SYSTEM "compile.xmli">
    ]>  
    
<project name="ejbca" default="build" basedir=".">

	<!-- include the standard properties and paths -->
    &propertiesAndPaths;
	<!-- include the main compile targets -->
	&compile;

	<import file="bin/jboss.xml" />
	<import file="./jaxws.xmli" />
	<import file="./cmptcp.xmli" />
	<import file="./crlservice.xmli" />
	<import file="./test.xmli" />
	<import file="./docs.xmli" />

	
    <!-- =================================================================== -->
    <!-- Build ALL                                                           -->
    <!-- =================================================================== -->
    <target name="build" depends="ca.ear"/>

	<!--
	  EJBCA need to be run before the app.server (or the webapp) is fully ssl configured with the keystore
	  So we are 'bootstrapping' it, the 'j2ee.web-noconfigure' property will skip all the serverside
	  -->
    <target name="bootstrap" description="Bootstrap EJBCA application">
        <ant target="deploy">
        	<property name="j2ee.web-noconfigure" value="true"/>
        </ant>
    </target>

	<!--
	  Installs EJBCA by creating an initial CA, configuring the web container and generating certs for
	  SSL and the super administrator.
	  -->
    <target name="install" description="Install EJBCA application (only once)">
        <ant dir="${ejbca.home}/bin" antfile="cli.xml" target="ejbca:install" />
    </target>
	
    <target name="javatruststore" description="Install RootCA ceritficate in Java trust store">
        <ant dir="${ejbca.home}/bin" antfile="cli.xml" target="ejbca:javatruststore" />
    </target>

    <!-- =================================================================== -->
    <!-- Compile ocsp resonder java sources                                  -->
    <!-- =================================================================== -->
    <target name="ocsp-compile" depends="ocsp-run-xdoc">
        <javac srcdir="${src.java}:${ocsp-src.gen}" destdir="${ocsp-build}" debug="on" includeantruntime="no" encoding="iso8859-1">
            <classpath refid="compile.classpath" />
            <include name="org/ejbca/ui/web/protocol/OCSPServletStandAlone.java" />
            <include name="org/ejbca/core/ejb/protect/TableProtect*.java" />
            <include name="org/ejbca/core/ejb/ca/store/CertificateStoreOnlyDataSessionSession.java" />
            <include name="org/ejbca/core/ejb/ca/store/ICertificateStoreOnlyDataSessionHome.java" />
            <include name="org/ejbca/core/protocol/ocsp/OCSPUnidExtension.java" />
            <include name="org/ejbca/ui/web/pub/HealthCheckServlet.java" />
            <include name="org/ejbca/ui/web/pub/cluster/TextResponse.java" />
            <include name="org/ejbca/ui/web/pub/cluster/ExtOCSPHealthCheck.java" />
        </javac>
    </target>

    <!-- =================================================================== -->
    <!-- Build apply part                                                    -->
    <!-- =================================================================== -->
    <target name="apply.war" depends="compile" description="build the jar file">
        <war destfile="${applywar}" webxml="${apply.src}/WEB-INF/web.xml">
            <fileset dir="${apply.src}" excludes="WEB-INF/web.xml" />
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Build status part                                                                                                                             -->
    <!-- =================================================================== -->
    <target name="status.war" depends="compile">
        <war destfile="${statuswar}" webxml="${src.dd}/status/WEB-INF/web.xml">
            <fileset dir="${status.src}" excludes="WEB-INF/web.xml" />
        </war>
    </target>
	
    <!-- =================================================================== -->
    <!-- Build CMP part                                                                                                                             -->
    <!-- =================================================================== -->
    <target name="cmp.war" depends="compile">
        <war destfile="${cmpwar}" webxml="${src.dd}/cmp/WEB-INF/web.xml">
            <fileset dir="${cmp.src}" excludes="WEB-INF/web.xml" />
        </war>
    </target>
	
    <!-- =================================================================== -->
    <!-- Build health check part                                                                                                                             -->
    <!-- =================================================================== -->
    <target name="healthcheck.war" depends="compile">
        <war destfile="${healthcheckwar}" webxml="${healthcheck.src}/WEB-INF/web.xml">
            <fileset dir="${healthcheck.src}" excludes="WEB-INF/web.xml" />

        </war>
    </target>
		
    <!-- =================================================================== -->
    <!-- Build ocsp health check part                                                                                                                             -->
    <!-- =================================================================== -->
    <target name="ocsphealthcheck.war" depends="ocsp-compile">
        <war destfile="${ocsphealthcheckwar}" webxml="${ocsphealthcheck.src}/WEB-INF/web.xml">
            <fileset dir="${ocsphealthcheck.src}" excludes="WEB-INF/web.xml" />

        </war>
    </target>	

    <!-- =================================================================== -->
    <!-- Build standalone ocsp part                                          -->
    <!-- =================================================================== -->
    <target name="ocsp-war" depends="ocsp-compile">
        <war destfile="${ocspwar}" webxml="${ocsp-src.dd}/status/WEB-INF/web.xml">
            <fileset dir="${status.src}" excludes="WEB-INF/web.xml" />
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Build sampleauth part                                               -->
    <!-- =================================================================== -->
    <target name="sampleauth.war" depends="compile">
        <war destfile="${sampleauthwar}" webxml="${sampleauth.src}/WEB-INF/web.xml">
            <fileset dir="${sampleauth.src}" excludes="WEB-INF/web.xml" />
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Build webdist part                                                  -->
    <!-- =================================================================== -->
    <target name="webdist.war" depends="compile">
        <war destfile="${webdistwar}" webxml="${webdist.src}/WEB-INF/web.xml">
            <fileset dir="${webdist.src}" excludes="WEB-INF/web.xml" />
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Build admin web part                                                -->
    <!-- =================================================================== -->
    <target name="adminweb.war" depends="compile">
        <mkdir dir="${adminweb.build}/WEB-INF/lib"/>
        <copy todir="${adminweb.build}">
            <fileset dir="${adminweb.src}" />
        </copy>
    	<delete file="${adminweb.build}/languages/languagefile.zh.properties"/>
    	<native2ascii encoding="GBK" 
    		src="${adminweb.src}/languages" 
    		dest="${adminweb.build}/languages"
    		includes="languagefile.zh.properties" 
    	/>
        <copy todir="${adminweb.build}/WEB-INF">
            <fileset dir="${src.dd}/WEB-INF" />
        </copy>
        <copy todir="${adminweb.build}/WEB-INF/lib">
            <fileset dir="${lib}/myfaces" >
            	<include name="tomahawk-1.1.3.jar"/>
            </fileset>
        </copy>

    	<jsp-compile uriroot="${adminweb.build}" classpathref="compile.classpath"/> 
        <war destfile="${adminwebwar}" webxml="${src.dd}/WEB-INF/web.xml">
            <manifest>
                <attribute name="Class-Path" value="${jar.extclasspath}" />
            </manifest>
            <fileset dir="${adminweb.build}">
                <exclude name="WEB-INF/*-service.xml" />
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- =================================================================== -->
    <!-- Build public root web part                                              -->
    <!-- =================================================================== -->
    <target name="publicwebroot.war" depends="compile">
        <war destfile="${rootwar}" webxml="${root.warsrc}/WEB-INF/web.xml">
            <fileset dir="${root.warsrc}" excludes="WEB-INF/**" />
        </war>
    </target>   

    <!-- =================================================================== -->
    <!-- Build ca ejb part                                                    -->
    <!-- =================================================================== -->
    <target name="ejbca-ejb.jar" depends="compile">
    <!-- create empty direktory for HW tokens if not existing -->
        <mkdir dir="${hwtoken.class.dir}"/>
        <jar jarfile="${dist.dir}/ejbca-ejb.jar">
            <manifest>
                <!-- todo: autogenerate this from a fileset -->
                <attribute name="Class-Path" value="${jar.extclasspath}" />
            </manifest>
            <fileset dir="${src.dd}">
            	<exclude name="WEB-INF/**"/>
            	<exclude name="status/**"/>
            </fileset>
            <fileset dir="${build}">            	
        	    <exclude name="org/ejbca/core/protocol/ws/**"/>
            </fileset>
            <fileset dir="${src}/log"/>
            <fileset dir="${src}/upgrade"/>
        	<fileset dir="${src}">
        	    <include name="intresources/*.properties"/>
        	</fileset>	
            <fileset dir="${hwtoken.class.dir}"/>
        </jar>
    </target>
	
        <!-- =================================================================== -->
        <!-- Build ejbca util part                                                    -->
        <!-- =================================================================== -->
        <target name="ejbca-util.jar" depends="compile" description="Creates ejbca util classes for use in other projects.jar">
        <!-- create empty direktory for HW tokens if not existing -->
            <jar jarfile="${dist.dir}/ejbca-util.jar">
                <manifest>
                    <!-- todo: autogenerate this from a fileset -->
                    <attribute name="Class-Path" value="" />
                </manifest>
                <fileset dir="${build}">
                	<include name="org/ejbca/util/**"/>
                	<include name="org/ejbca/core/model/**"/>
                	<include name="**/*Exception**"/>
                	<include name="**/SecConst**"/>
                	<include name="**/IAdminCommand**"/>
                	<include name="**/UserDoesntFullfillEndEntityProfile**"/>
                	<include name="**/RevokedCertInfo**"/>
                	<include name="**/ServiceLocator**"/>
                	<include name="**/SernoGenerator.*"/>
                	<include name="**/ISernoGenerator.*"/>
                    <include name="**/BaseEntityBean.*" />
                    <include name="**/BaseSessionBean.*" /> 
                	<include name="**/ServiceLocator.*"/>
                	<include name="**/JNDINames.*"/>
                	<include name="**/HealthCheckServlet.*"/>                	
                    <include name="org/ejbca/ui/web/RequestHelper.*"/>
                	<include name="org/ejbca/ui/web/pub/cluster/**"/>
                    <include name="org/ejbca/ui/web/pub/ServletUtils.*"/>   
                    <include name="org/ejbca/ui/web/admin/configuration/LanguageProperties.*"/>
                </fileset>
                

            </jar>
        </target>    	
	
    
    <!-- =================================================================== -->
    <!-- Build ocsp ejb part                                                    -->
    <!-- =================================================================== -->
    <target name="ocsp-jar" depends="ocsp-compile">
        <mkdir dir="${ocsp.hardToken.classes}"/>
        <jar jarfile="${ocsp-dist.dir}/ejbca-ejb.jar">
            <manifest>
                <!-- todo: autogenerate this from a fileset -->
                <attribute name="Class-Path" value="${jar.extclasspath}" />
            </manifest>
            <fileset dir="${ocsp-src.dd}">
            	<exclude name="WEB-INF/**"/>
            	<exclude name="status/**"/>
            </fileset>
            <fileset dir="${ocsp-build}"/>
            <fileset dir="${src}/log"/>
            <fileset dir="${ocsp.hardToken.classes}"/>
        </jar>
    </target>
    
    <!-- =================================================================== -->
    <!-- Build CA-ear                                                        -->
    <!-- =================================================================== -->
    <target name="ca.ear" depends=" apply.war, status.war, cmp.war, healthcheck.war, webdist.war, adminweb.war, publicwebroot.war, ejbca-ejb.jar, ejbca-util.jar, ejbcaws.war, ejbcaws.client">
        <ear destfile="${caear}" appxml="${eardd.src}/META-INF/application.xml"> 
            <fileset dir="${eardd.src}">
                <exclude name="META-INF/application.xml" />
            </fileset>
            <fileset dir=".">
                <include name="${lib}/bcmail-jdk${java.ver}.jar" />
                <include name="${lib}/bcprov-jdk${java.ver}.jar" />
                <include name="${lib}/log4j-1.2.7.jar" />
                <include name="${lib}/ldap.jar" />
                <include name="${lib}/commons-lang-2.0.jar" />
                <include name="${lib}/commons-collections.jar" />
                <include name="${lib}/commons-fileupload-1.0.jar" />
                <include name="${lib}/batik-xml.jar" />
                <include name="${lib}/batik-dom.jar" />
                <include name="${lib}/batik-svg-dom.jar" />
                <include name="${lib}/batik-ext.jar" />
                <include name="${lib}/batik-parser.jar" />
                <include name="${lib}/batik-svggen.jar" />
                <include name="${lib}/batik-transcoder.jar" />
                <include name="${lib}/batik-util.jar" />
                <include name="${lib}/batik-css.jar" />
                <include name="${lib}/batik-gvt.jar" />
                <include name="${lib}/batik-bridge.jar" />
                <include name="${lib}/batik-awt-util.jar" />
                <include name="${lib}/batik-script.jar" />
                <include name="${lib}/xerces_2_3_0.jar" />
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="*-ejb.jar" />
                <include name="*.war" />
            </fileset>
	</ear>
    </target>

    <!-- =================================================================== -->
    <!-- Build OCSP-ear                                                        -->
    <!-- =================================================================== -->
    <target name="ocsp-ear" depends="ocsp-war, ocsp-jar, ocsphealthcheck.war">
        <ear destfile="${ocspear}" appxml="${ocsp-eardd.src}/META-INF/application.xml"> 
            <fileset dir=".">
                <include name="${lib}/bcmail-jdk${java.ver}.jar" />
                <include name="${lib}/bcprov-jdk${java.ver}.jar" />
                <include name="${lib}/log4j-1.2.7.jar" />
                <include name="${lib}/ldap.jar" />
                <include name="${lib}/commons-lang-2.0.jar" />
                <include name="${lib}/commons-collections.jar" />
                <include name="${lib}/commons-fileupload-1.0.jar" />
            </fileset>
            <fileset dir="${ocsp-dist.dir}">
                <include name="*-ejb.jar" />
                <include name="*.war" />
            </fileset>
	</ear>
    </target>

    <!-- =================================================================== -->
    <!-- Build ocsp client part                                              -->
    <!-- =================================================================== -->
    <target name="ocspclient.jar" depends="init" description="Creates jar for ocspclient">
        <javac destdir="${ocsp-client.build}" srcdir="${mainsrc}/java" debug="on" includeantruntime="no" encoding="iso8859-1">
            <classpath refid="compile.classpath" />
        	<include name="org/ejbca/ui/cli/Ocsp.java"/>
        </javac>
        <jar jarfile="${ocsp-dist.dir}/ocspclient.jar">
        	<manifest>
        	    <attribute name="Built-By" value="${user.name}"/>
        	    <section name="OCSPUnidClient">
        	      <attribute name="Implementation-Title" value="OCSPUnidClient"/>
        	      <attribute name="Implementation-Version" value="${app.version} ${TODAY}"/> 
        	      <attribute name="Implementation-Vendor" value="PrimeKey Solutions."/>
        	    </section>
                <attribute name="Class-Path" value="${jar.ocspclientclasspath}" />
                <attribute name="Main-Class" value="org.ejbca.ui.cli.Ocsp" />
        	  </manifest>
            <fileset dir="${ocsp-client.build}"/>
        </jar>
        <copy todir="${ocsp-dist.dir}">
            <fileset dir="${mainbin}">
            	<include name="log4j.properties"/>
            </fileset>
        </copy>
        <copy todir="${ocsp-dist.dir}/lib">
            <fileset dir="${lib}">
            	<include name="bcprov*.jar"/>
            	<include name="log4j*.jar" />
            </fileset>
        </copy>
    	<zip destfile="${ocsp-dist.dir}/ocspclient.zip">
            <fileset dir="${ocsp-dist.dir}">
            	<include name="lib/*.jar"/>
            	<include name="log4j.properties" />
            	<include name="ocspclient.jar" />
            </fileset>
            <fileset dir="${mainbin}">
            	<include name="ocsp.sh"/>
            </fileset>
    	</zip>
    </target>
	
    <!-- =================================================================== -->
    <!-- Build Javadoc part                                                  -->
    <!-- =================================================================== -->
    <target name="javadoc" depends="">
        <mkdir dir="${apidoc}" />
        <javadoc packagenames="org.ejbca.*" maxmemory="256m" sourcepath="${src.java}" destdir="${apidoc}" extdirs="${lib}" author="true" version="true" use="true" windowtitle="EJBCA API" bottom="Copyright &#169; PrimeKey Solutions AB.">
        </javadoc>
    </target>

    <!-- ========================================================================== -->
    <!-- Upgrades the database for a new version of ejbca                           -->
    <!-- ========================================================================== -->
    <target name="upgrade">
        <!-- Get input -->
        <!-- <input message="Type of system:" validargs="unix,windows" addproperty="ejbca.OS" />
        <input message="Hostname for adminweb (default 127.0.0.1):" addproperty="ejbca.URL" defaultvalue="127.0.0.1" /> -->
        <input message="Type of database:" validargs="mysql,oracle,mssql2000,postgres,sapdb,sybase,hsqldb" addproperty="ejbca.DB" /> 
        <!-- validargs="hsql,oracle,mssql2000,mysql,postgres,sapdb,sybase" -->
        <!-- <input message="Data source (default java:/EjbcaDS):" addproperty="ejbca.DS" defaultvalue="java:/EjbcaDS" /> -->
        <java classname="org.ejbca.ui.cli.Upgrade" fork="true">
            <!-- <sysproperty key="ejbcaDS" value="${ejbca.DS}" /> -->
            <sysproperty key="ejbcaDB" value="${ejbca.DB}" />
            <classpath>
                <pathelement location="./bin" />
                <pathelement location="${build}" />
                <fileset dir="${jboss.home}/client" includes="**/*.jar" />
                <fileset dir="${lib}" includes="**/*.jar" />
            </classpath>
        </java>
    </target>

    <!-- =================================================================== -->
    <!-- Build Signing log4j log appended for JBoss                          -->
    <!-- =================================================================== -->
    <target name="jbosslogsigning" depends="compile">
        <path id="jbosslogsigning.classpath">
        </path>
        <javac srcdir="${src.java}" extdirs="${lib}" destdir="${build}" debug="on" encoding="iso8859-1">
            <exclude name="**/CVS/**" />
            <include name="**/appserver/jboss/SigningDailyRollingFileAppender*" />
            <include name="**/appserver/jboss/ScriptrunningDailyRollingFileAppender*" />
            <include name="**/appserver/jboss/RollingCalendar*" />
            <include name="**/appserver/jboss/SignerThread*" />
            <include name="**/appserver/jboss/ScriptThread*" />
            <!-- appserver specific files are built separtely-->
            <classpath refid="jbosslogsigning.classpath" />
            <classpath refid="compile.classpath" />
        </javac>

        <mkdir dir="${logsigning.build}" />
        <copy todir="${logsigning.build}">
            <fileset dir="${build}">
                <include name="org/ejbca/appserver/jboss/SigningDailyRollingFileAppender*.class" />
                <include name="org/ejbca/appserver/jboss/ScriptrunningDailyRollingFileAppender*.class" />
                <include name="org/ejbca/appserver/jboss/RollingCalendar.class" />   
                <include name="org/ejbca/appserver/jboss/SignerThread.class" />   
                <include name="org/ejbca/appserver/jboss/ScriptThread.class" />   
                <include name="org/ejbca/util/CertTools*.class" />
                <include name="org/ejbca/util/FileTools*.class" />
                <exclude name="se/anatom/ejbca/**/*Test*" />
            </fileset>
        </copy>
        <jar basedir="${logsigning.build}" jarfile="${logsigningjar}">
            <manifest>
                <!-- <attribute name="Class-Path" value="${jar.extclasspath}" /> -->
            </manifest>
        </jar>
    </target>

    <!-- ======================================================================= -->
    <!-- Deploy EJBCA ear to JBoss                                               -->
    <!-- ======================================================================= -->
    <target name="deploy" depends="build, buildwithcmptcpservice, buildwithcreatecrlservice">
        <antcall target="j2ee:deploy" />
    </target>
    <target name="ocsp-deploy" depends="ocsp-ear">
        <antcall target="j2ee:deployocsp" />
    </target>

    <macrodef name="jsp-compile">
        <attribute name="uriroot"/>
        <attribute name="todir" default="@{uriroot}"/>
        <attribute name="classpathref"/>
        <sequential>
        <path id="jasper.classpath">
            <fileset dir="lib/jasper" includes="*.jar"/>
            <path refid="@{classpathref}"/>
            <path location="${build}"/>
        </path>
        <taskdef name="jasper2" classname="org.apache.jasper.JspC" classpathref="jasper.classpath"/>
        <mkdir dir="@{todir}/WEB-INF/jspc"/>
        
        <property name="jasper.classpath" refid="jasper.classpath"/>
        <!--echo message="jasper.classpath = ${jasper.classpath}"/-->
		<jasper2 uriroot="@{uriroot}"
			package="org.apache.jasper.jspc"
			outputdir="@{todir}/WEB-INF/jspc"
			validatexml="false"
			webXmlFragment="@{todir}/WEB-INF/generated_web.xml"
			addWebXmlMappings="true"
            verbose="0"
            classpath="${jasper.classpath}"/>
		<!--
		  Compile them cleanly, jasper is not nice for this so use javac directly
		  Note that precompilation may not work with weblogic (see weblogic docs)
		  -->
		<mkdir dir="@{todir}/WEB-INF/classes"/>
		<depend srcdir="@{todir}/WEB-INF/jspc" destdir="@{todir}/WEB-INF/classes">
			<classpath path="${jasper.classpath}"/>
		</depend>
		<javac srcdir="@{todir}/WEB-INF/jspc" destdir="@{todir}/WEB-INF/classes" debug="on"
            includeantruntime="no" encoding="iso8859-1">
            <classpath path="${jasper.classpath}"/>
        </javac>
        </sequential>
    </macrodef>    
	
	<target name="ziprelease" description="Make a zip file for EJBCA release">
		<antcall target="clean" />
        <input message="Version tag for zipfile (ex 3_2_1):" addproperty="ejbca.zipversion" /> 
		<zip destfile="../ejbca_${ejbca.zipversion}.zip">
		    <zipfileset dir="." prefix="ejbca" filemode="600" dirmode="700"> 
		    	<include name="**/**" />
		    	<exclude name="**/CVS/**" />
		    	<exclude name="tmp/**" />
		    	<exclude name="dist/**" />
		    	<exclude name="ocsp-dist/**" />
		    	<exclude name="out/**" />
		    	<exclude name="p12/**" />
		    	<exclude name="hwtoken/**" />
		    	<exclude name="**/*.class" />
		    	<exclude name=".classpath" />
		    	<exclude name=".project" />
		    	<exclude name="**/.cvsignore" />
		    	<exclude name="**/ejbca.properties" />
		    	<exclude name="conf/*.properties" />
		    	<exclude name="**/*.sh" />
		    </zipfileset>
		    <zipfileset dir="." prefix="ejbca" filemode="700" dirmode="700"> 
		    	<include name="**/*.sh" />
		    </zipfileset>
		</zip>
        <checksum file="../ejbca_${ejbca.zipversion}.zip" algorithm="SHA1" forceOverwrite="yes"/>      
        <checksum file="../ejbca_${ejbca.zipversion}.zip" algorithm="SHA1" property="ejbcaSHA1"/>      
        <echo message="SHA1 checksum: ${ejbcaSHA1}" />     
	</target>
		
	<!--
        Target that finds duplicated code. 
        You must install jar files from pmd.sourceforge.net in ANT_HOME/lib so the taskdef finds the class
	-->
	<!--
	<target name="cpd">
	    <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" />
	    <cpd minimumTokenCount="100" outputFile="${src}/cpd.txt">
	        <fileset dir="${src.java}/se/anatom">
	            <include name="**/*.java"/>
	        </fileset>
	    </cpd>
	</target>
	-->

	<!-- Target that runs the Lint code check from http://www.jutils.com/.
         You must install lint4j.jar in ANT_HOME/lib so the taskdef finds the class
	-->
	<!--
	<target name="lint" description="Perform checks on EJBCA source code">
		<taskdef name="lint4j" classname="com.jutils.lint4j.ant.Lint4jAntTask" />
	  <lint4j packages="org.ejbca.*" level="3">
	    <sourcepath>
		  <dirset dir="${src}">
			<include name="**/java" />
		  </dirset>
		</sourcepath>
		<classpath>
		  <fileset dir="${lib}">
			<include name="**/*.jar" />
		  </fileset>
		  <dirset dir="${tmp}">
			<include name="bin/classes" />
		  </dirset>
          <path refid="j2ee.classpath" />
		</classpath>
	    <formatters>
	      <formatter type="text" />
	      <formatter type="text" toFile="ejbca-lint.out"/>
	    </formatters>
	  </lint4j>
	</target>
    -->
	
</project>
