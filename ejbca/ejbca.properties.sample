#
# $Id: ejbca.properties.sample,v 1.48 2006-03-05 08:14:00 anatom Exp $
#
# This is a sample file to override properties used
# during development (or deployment) of EJBCA
# 
# You should copy and rename this file to ejbca.properties
# and customize at will.
#

# JBoss used during development
# Default: $JBOSS_HOME
#jboss.home=${basedir}/../../jboss-4.0.1
jboss.home=${env.JBOSS_HOME}

# which compiler to use
# default: javac
#build.compiler=jikes

# which java version to use 14 for 1.4 and 15 for 1.5
# default: 14
java.ver=14

# ------------ Basic CA configuration ---------------------
# When upgrading, the important options are:
# - ca.keystorepass
# - ca.ocspkeystorepass

# This installation will create a first administrative CA. This CA will be used to create the first
# superadministrator and for the SSL server certificate of administrative web server.
# When the administrative web server have been setup you can create other CA:s and administrators.
# This is only used for administrative purposes,
# Enter a short name for the CA.
ca.name=AdminCA1

# The Distinguished Name of the CA. 
# This is used in the CA certificate to distinguish the CA.
ca.dn=CN=AdminCA1,O=EJBCA Sample,C=SE

# The keysize in bits of the CA, only digits.
ca.keysize=2048

# The validity in days for the CA, only digits.
ca.validity=3650

# The policy id of the CA. Policy id determines which PKI policy the CA uses.
# Type your policy id or use '2.5.29.32.0' for 'any policy' (rfc3280) or 'null' for no policy at all.
ca.policy=null

# This password is used internally to protect CA keystores in database (i.e. the CAs private key).
# foo123 is to keep compatibility with default installations of EJBCA 3.0, please change this if possible
# If upgrading from EJBCA 3.0.x, you should take this value from src/ca/ca/META-INF/ejb-jar.xml -> keyStorePass. 
# The default value is the same for convenience.
ca.keystorepass=foo123
#ca.keystorepass=!secret!

# Password user to protect OCSP keystores in the database (CAs OCSP signer certificate).
# If upgrading from EJBCA 3.0.x, you should take this value from src/ca/ca/META-INF/ejb-jar.xml -> OCSPKeyStorePass. 
# The default value is the same for convenience.
ca.ocspkeystorepass=foo123
#ca.ocspkeystorepass=ocsp!secret!


# ------------ Web GUI configuration ---------------------
# When upgrading, the important options are:
# - httpsserver.password

# Password for java trust keystore (JAVA_HOME/jre/lib/security/cacerts), default is changeit.
java.trustpassword=changeit

# The password used to protect the generated super administrator P12 keystore (to be imported in browser).
# Choose a good password here.
superadmin.password=ejbca

# The password used to protect the web servers SSL keystore.
# Choose a good password here.
# If upgrading from EJBCA 3.1, enter here the password found in 
#   $JBOSS_HOME/server/default/deploy/jbossweb-tomcat55.sar/server.xml
#   under the section about 'HTTPS Connector...', the password is in attribute 'keystorePass=...'.
httpsserver.password=serverpwd

# The CA servers DNS host name, must exist on client using the admin GUI.
httpsserver.hostname=localhost

# The Distinguished Name of the SSL server certificate used by the administrative web gui.
# The CN part  should match your hosts DNS name to avoid browser warnings.
httpsserver.dn=CN=localhost,O=EJBCA Sample,C=SE

# The public port JBoss will listen to http on
# Default 8080
#httpserver.pubhttp=8080

# The public port JBoss will listen to https on, no client cert required
# Default 8442
#httpserver.pubhttps=8442

# The private port JBoss will listen to https on, client cert required
# Default 8443
#httpserver.privhttps=8443

# Defines the available languages by languagecodes separated with a comma (example EN,ZH).
# If you are not sure that you know how to add a new language (languagefile.XX.properties etc), 
# we suggest you stick with the default the first time you install if you wan't to add your own language.
# Otherwise you may not be able to log in to the admin-GUI.
# Default: EN,FR,IT,ES,SE,ZH
#web.availablelanguages=EN,FR,IT,ES,SE,ZH

# Default content encoding used to display JSP pages, for example ISO-8859-1, UTF-8 or GBK.
# Default: ISO-8859-1
#web.contentencoding=ISO-8859-1

# ------------- Database configuration ------------------------

# jndi name of the datasource to use in deployment descriptors of ejbs.
# default: EjbcaDS
#datasource.jndi-name=EjbcaDS

# Prefix for the jndi name of the datasource to use in deployment descriptors of ejbs. 
# JBoss requires 'java:/' as prefix, while weblogic does not want anything ('')
# default: java:/
#datasource.jndi-name-prefix=java:/
#datasource.jndi-name-prefix=

# Weblogic in combination with Oracle requires special handling of LONG/BLOB columns
# If, and only if, you are using Weblogic and Oracle, uncomment the row below.
# default: 
#weblogic-oracle-columntype=@weblogic.dbms-column-type OracleBlob

# The database name selected for deployment, used to copy XDoclet merge files.
# All supported databases are defined below, others can easily be added
# See the document doc/howto/HOWTO-database.txt for database specifics and tips and tricks.
# Default: hsqldb
#database.name=mysql
#database.name=postgres
#database.name=mssql2000
#database.name=oracle
#database.name=sapdb
#database.name=sybase
#database.name=informix

# The datasource mapping selected for deployment.
# The J2EE server needs to be configured with the appropriate datasource mapping. 
# For JBoss this maps to a setting in standardjbosscmp-jdbc.xml and must match the database chosen above.
# All supported mappings are defined below, others can easily be added
# Default: Hypersonic SQL
#datasource.mapping=mySQL
#datasource.mapping=PostgreSQL 7.2
#datasource.mapping=PostgreSQL 8.0
#datasource.mapping=MS SQLSERVER2000
#datasource.mapping=Oracle8
#datasource.mapping=Oracle9i
#datasource.mapping=SapDB
#datasource.mapping=Sybase
#datasource.mapping=Informix92
#datasource.mapping=InformixDB

# Database connection url.
# This is the URL used to connect to the database, used to configure a new datasource in JBoss.
# Default: jdbc:hsqldb:${jboss.server.data.dir}${/}hypersonic${/}localDB
#database.url=jdbc:mysql://127.0.0.1:3306/ejbca
#database.url=jdbc:postgresql://127.0.0.1/ejbca
#database.url=jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=ejbca
#database.url=jdbc:oracle:thin:@127.0.0.1:1521:ejbca
#database.url=jdbc:datadirect:oracle://127.0.0.1:1521;SID=ejbca
#database.url=jdbc:informix-sqli://127.0.0.1:1525/ejbca:informixserver=mydbservername;DBDATE=DMY4/;

# JDBC driver classname.
# The J2EE server needs to be configured with the appropriate JDBC driver for the selected database
# Default: org.hsqldb.jdbcDriver
#database.driver=com.mysql.jdbc.Driver
#database.driver=org.postgresql.Driver
#database.driver=com.microsoft.jdbc.sqlserver.SQLServerDriver
#database.driver=oracle.jdbc.driver.OracleDriver
#database.driver=com.ddtek.jdbc.oracle.OracleDriver
#database.driver=com.informix.jdbc.IfxDriver

# Database username.
# Default: sa (works with hsqldb)
#database.username=ejbca
#database.username=postgres

# Database password.
# Default: (blank works with hsqldb)
#database.password=ejbca
#database.password=postgres

# ------------ OCSP configuration ---------------------

# Specifies the subject of a certificate which is used to identifiy the 
# responder which will generate responses when no real CA can be found from the request. 
# This is used to generate 'unknown' responses when a request is received for a certificate 
# that is not signed by any CA on this server. Recommended to use same as ca.dn.
ocsp.defaultresponder=CN=AdminCA1,O=EJBCA Sample,C=SE

# If set to true the OCSP reponses will be signed directly by the CAs certificate instead 
# of the CAs OCSP responder. Default true.
ocsp.usecasigningcert=true

# Specifies OCSP extension oids that will result in a call to an extension class, 
# separate multiple entries with ;"
# Leave out if you do not know what this is.
# Example value: 2.16.578.1.16.3.2
# Default: nothing 
#ocsp.extensionoid=

# Specifies classes implementing OCSP extensions matching oids above, 
# separate multiple entries with ;"
# Leave out if you do not know what this is.
# Example value: org.ejbca.core.protocol.ocsp.OCSPUnidExtension
# Default: nothing
#ocsp.extensionclass=

# Datasource for Unid-Fnr mapping OCSP extension. 
# Leave out if you do not know what this is.
# No default value, must be set if the extension is used
#ocsp.uniddatsource=

# Directory containing certificates of trusted entities allowed to query for Fnrs. 
# Leave out if you do not know what this is.
# No default value, must be set if the extension is used
#ocsp.unidtrustdir=

# File containing the CA-certificate, in PEM format, that signed the trusted clients. 
# Leave out if you do not know what this is.
# No default value, must be set if the extension is used
#ocsp.unidcacert=

# The ocsp.softKeys.* preferences has a meaning only to the External OCSP responder.
# Please read the doc/howto/HOWTO-OCSP-RESPONDER.txt for inforamtion.

# Directory containing soft keys for the container.
# Default: ./softKeys
#ocsp.softKeys.dir=./softKeys

# The password for the all the soft keys of the OCSP responder. All keys must have the same password.
# Default: foo123
#ocsp.softKeys.keyPassword=foo123

# The password to all soft keystores. If the keystore is created by EJBCA then this password is equal to 
# the key password above. If it is equal you may leave it empty but you can not remove it.
# Default: empty
#ocsp.softKeys.storePassword=

# ------------ Mail configuration ---------------------

# Used to send notification email from the RA.
# See ${ejbca.home}/src/appserver/ejbca-mail-service.xml
# It will be copied in ${jboss.server.dir}/deploy/ejbca-mail-service.xml

# The JNDI-name used to send email notifications from EJBCA.
# Default: java:/EjbcaMail
#mail.jndi-name=java:/EjbcaMail

# user/password to connect to server for sending email notifications from EJBCA.
# Default: ejbca_user, primekey
#mail.user=ejbca_user
#mail.password=primekey

# SMTP server for sending mail.
# Default: localhost
#mail.smtp.host=localhost

# Use SMTP authentication if you smtp host requires it
# Default: false
#mail.smtp.auth=false

# Email address used to send emails.
# Default: ejbca-donotreply@domain.com
#mail.from=ejbca-donotreply@domain.com

# JavaMail debug info.
# Default: false
#mail.debug=false

# Default subject of notification messages sent from EJBCA.
# Default: 'Retrieve your certificate'
#mail.subject=Retrieve your certificate

# Defines the default message of the notification. 
# Use the values ${USERNAME}, ${PASSWORD}, ${CN}, ${O}, ${OU}, ${C}, ${DATE} to indicate which texts 
# that should be replaced (Case sensitive), ${NL} stands for newline.
# Default: below
#mail.message=Hello ${CN}${NL}${NL} This is a notification. ${NL}${NL} Your username: ${USERNAME}${NL} password: ${PASSWORD}${NL}${NL} Your are NOT supposed to go and fetch your certificate, this is only a test.

# ----------------- cluster configuration ----------------
# The configuration. Use "all" when clustering.
# Default: default
#jboss.config=all

# Name of the farm directory. Use "farm" when clustering.
# Default: deploy
#jboss.farm.name=farm

#------------------- HW token ------------------------------
# The directory of the HW token classes. If this is an emty directory no HW token will be used.
# If the directory is not existing an empty directory will be created.
# Default: ./hwtoken
#hwtoken_classes=../primeCard/caTokenClasses-1.5-3.2

#------------------- OCSP publisher db configuration------------------------------
# All these "ocsp-database.*" properties is used to configure the connection to the database that the
# ExternalOCSPPublisher will publish to. Please read the doc/howto/HOWTO-OCSP-RESPONDER.txt for inforamtion.
# If no ExternalOCSPPublisher will be used these properties should not be configured.
# Note that the External OCSP responder itself uses the configuration options database.*.

# jndi name of the datasource to use in deployment descriptors of ejbs.
#ocsp-datasource.jndi-name=OcspDS

# Database connection url.
# This is the URL used to connect to the database, used to configure a new datasource in JBoss.
#ocsp-database.url=jdbc:mysql://127.0.0.1:3306/ejbca
#ocsp-database.url=jdbc:postgresql://127.0.0.1/ejbca
#ocsp-database.url=jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=ejbca
#ocsp-database.url=jdbc:oracle:thin:@127.0.0.1:1521:ejbca
#ocsp-database.url=jdbc:datadirect:oracle://127.0.0.1:1521;SID=ejbca

# JDBC driver classname.
# The J2EE server needs to be configured with the appropriate JDBC driver for the selected database
#ocsp-database.driver=com.mysql.jdbc.Driver
#ocsp-database.driver=org.postgresql.Driver
#ocsp-database.driver=com.microsoft.jdbc.sqlserver.SQLServerDriver
#ocsp-database.driver=oracle.jdbc.driver.OracleDriver
#ocsp-database.driver=com.ddtek.jdbc.oracle.OracleDriver

# Database username.
#ocsp-database.username=ocsp

# Database password.
#ocsp-database.password=ocsp
