<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
  <properties>
    <title>Complimentary software</title>
  </properties>

  <body>
<section name="Complimentary software">
<p>
To build a succesfull PKI you can benefit from a lot of tools available. Here are listed some tools and packages that 
can be used together with PKI to even further improve your PKI experience.
</p>

<subsection name="Signserver">
    <p>
    <a href="http://www.signserver.org/">Signserver</a>
    </p>
    <p>
    The SignServer is an application for automatic signatures called by other systems not able to connect 
    to crytographic hardware. 
    It is a framework that can be customized to specific needs using simple plug-in modules. 
    The SignServer have a ready to use TimeStamp Authority (RFC 3161 compliant) and a MRTD Signer. 
    Another usage is to provide a simplified method to provide signatures in different application 
    managed from one location in the company.
    <br/>
    The SignServer have been designed for high-availability and can be clustered for maximum reliability.
    </p>
</subsection>

<subsection name="Hard Token Management Framework">
    <p>
    <a href="http://www.hardtokenmgmt.org/">Hard Token Management Framework</a>
    </p>
	<p>
	The hard token management framework is a framework for creating applications to manage to complete life cycle of
	issuing hard tokens (smart cards, USB PKI dongles, etc) to end users.
	<br/>
	The framework is an API that you build a GUI on top of.
	</p>
</subsection>

<subsection name="CSRTool">
    <p>
    <a href="http://www.strongauth.com/index.php?option=com_content&amp;task=view&amp;id=32&amp;Itemid=32">CSRTool website</a>
    <br/>
    or<br/>
    <a href="http://sourceforge.net/projects/csrtool">CSRTool at sourceforge</a>
    </p>
    <p>
    A graphical tool for generating RSA and ECDSA cryptographic key-pairs, creating Certificate Signing Requests (CSRs) from them, 
    and combining the key-pair with an issued digital certificate to create a secure portable container (PKCS12, JKS, JCEKS, etc.)    
    </p><p>
    Some features:
    <ul>
    <li>Generates RSA public and private key-pairs in sizes ranging from 1024 to 8192 bits.</li>
    <li>Generates Elliptic Curve DSA public and private key-pairs using either the ANSI X9.62 named curves, or custom parameters for your own curve if so inclined.</li>
    <li>Saves the private-key in a PKCS8 file with Password-Based-Encryption using the SHA1withTripleDES algorithm.</li>
    <li>Generates a PEM-encoded CSR that can be submitted to a CA either through a web-form or e-mail.</li>
    <li>Generates keyUsage and/or the subjectAltName extensions (optionally) in the RSA-based CSR.</li>
    <li>Combines the private-key from the previously-stored PKCS8 file and the newly returned digital certificate, into a PKCS12 file that can be used for importation into desired applications.</li>
    </ul>
    </p>
</subsection>

<subsection name="Bouncycastle">
    <p>
    <a href="http://www.bouncycastle.org/">Bouncycastle website</a>
    </p>
    <p>
    Using Bouncycastle you can create your own tools and applications, or PKI enable your existing java applications.
    </p>
    <p>
    Bouncycastle also have a section with complimentary packages (under resources) that you should look at.
    </p>
</subsection>

</section>

  </body>
</document>
