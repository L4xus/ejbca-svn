<?xml version="1.0"?>
<document>

  <properties>
    <title>FAQ</title>
  </properties>

  <faqsection title="About this FAQ">
    <faq>
      <question>
      I get strange errors during 'ant bootstrap' or 'ant install'.
      </question>
      <answer>
      <p>
      This is most usually due to a database configuration error. In the server log (JBOSS_HOME/server/default/log/server.log)
      you will probably see some SQLException errors. You should:
      </p>
      <ul>
      <li>Make sure the settings in ejbca.properties is correct</li>
      <li>Stop JBoss</li>
      <li>Drop the old database and create a new one</li>
      <li>Do 'ant clean' and 'ant bootstrap' again</li>
      <li>Start JBoss</li>
      </ul>
      <p>
      Follow the configuration and troubleshooting section in doc/howto/HOWTO-database.txt.
      </p>
      </answer>
    </faq>
    
    <faq>
      <question>During the build process I get errors like:
      BUILD FAILED
      /usr/ejbca/build.xml:789: java.lang.ExceptionInInitializerError
      </question>
      <answer>
      <p>
      You probably have ant pre-installed as a package from Fedora or Suse. Those pre-installations does not contain all default ant 
      modules. You need the "optional tasks" included in the official ant distribution. 
      Either add modules to the installed ant, or download the latest ant from http://ant.apache.org/.
      </p>
      <p>
      A simple fix is to change the /etc/ant.conf to point to your user installed ant (in /your/ant/home). Change from:
      </p>
      <pre>
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
  no_config=true
fi

# Setup ant configuration
if $no_config ; then
  # Disable RPM layout
  rpm_mode=false
else
  # Use RPM layout
  rpm_mode=true

  # ANT_HOME for rpm layout
  ANT_HOME=/usr/share/ant
fi
      </pre>
      <p>
      to this
      </p>
      <pre>
#
# ant.conf (Ant 1.6.x)
# JPackage Project (http://www.jpackage.org/)
#

# Validate --noconfig setting in case being invoked
# from pre Ant 1.6.x environment
if [ -z "$no_config" ] ; then
  no_config=true
fi

# Setup ant configuration
if $no_config ; then
  # Disable RPM layout
  rpm_mode=false
else
  # Use RPM layout
  rpm_mode=false

  # ANT_HOME for rpm layout
  ANT_HOME=/your/ant/home
fi      
      </pre>
      </answer>
    </faq>
    <faq>
      <question>How can I run JBoss as a service in Windows?</question>
      <answer>
	      <p>There is documentation over at JBoss for several different options:
	      <br></br>
	      <a href="http://wiki.jboss.org/wiki/Wiki.jsp?page=RunJBossAsAServiceOnWindows">http://wiki.jboss.org/wiki/Wiki.jsp?page=RunJBossAsAServiceOnWindows</a>
	      </p>
	      <p>In short summary there are a couple of tools: <br></br>
	      <a href="http://javaservice.objectweb.org/">JavaService</a>
	      <br></br>       
	      <a href="http://wrapper.tanukisoftware.org/doc/english/integrate-simple-win.html">Java Service Wrapper</a>
	      </p>
      </answer>
    </faq>
    <faq>
      <question>Enroll manually for a server - why are my PKCS10  DN fields Ignored?</question>
      <answer>
        <p>
		EJBCA does not trust the DN parts the user enters when he creates the
		PKCS10 request.
		The only way to match the certificate with what you enter in the
		pkcs10 is to enter the same thing in the end entity in ejbca.
		</p><p>
		PKCS#10 is the standard format for sending the public key (self signed
		to provide proof-of-possession) to a CA.
        </p>
      </answer>
    </faq>
    <faq>
      <question>Where is the log file stored for tracking errors and debug information?</question>
      <answer>
        <p>
        JBOSS_HOME/server/default/log/server.log.
        </p>
      </answer>
    </faq>
    <faq>
      <question>I want to add my own static pages under http://hostname:8080/ejbca/ ?</question>
      <answer>
        <p>
        Put your files (static html is easy) under publicweb/root, do a full build and re-deploy.
        The indexfile under publicweb/root is the one show on http://hostname:8080/ejbca, so
        you can add a subdir under there.
        </p>
      </answer>
    </faq>
    <faq>
      <question>I get an error message when accessing the admin-GUI, "Could not establish an encrypted connection because your certificate was rejected ... Error code: -12224"?</question>
      <answer>
        <p>
        <b>1)</b> Make sure you have imported to correct superadmin.p12 in your browser.
        </p><p>
        <b>2)</b> You may have to delete and import the ca certificate in your java trust-store:
        </p>
<source>
bin/ejbca.sh ca getrootcert caname rootca.der -der
</source>
<source>
keytool -alias EJBCA-CA -delete -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit
</source>
<source>
keytool -alias EJBCA-CA -import -trustcacerts -file rootca.der -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit
</source>
	<p>
	Make sure you restart JBoss after making changes to the java trust store.
	</p>
	<p>
	<b>3)</b> Perhaps the JBoss/Tomcat configuration was not done automatically because you are running another configuration than 'default'
	in JBoss. the file '$JBOSS_HOME/server/default/deploy/jbossweb-tomcat55.sar/server.xml' holds the Tomcat configuration.
	The configuration should be like the following, where 'serverpwd' is the 'httpsserver.password' as configured in ejbca.properties.
	</p>
<source>
&lt;!-- HTTPS Connector requiring client cert on port 8443 --&gt;
&lt;Connector port="8443" address="${jboss.bind.address}"
    maxThreads="100" strategy="ms" maxHttpHeaderSize="8192"
    emptySessionPath="true"
    scheme="https" secure="true" clientAuth="true"
    keystoreFile="${jboss.server.home.dir}/conf/keystore/keystore.jks"
    keystorePass="serverpwd" sslProtocol = "TLS" /&gt;
</source>
	<p>
	Also the file '$EJBCA_HOME/p12/tomcat.jks' must be copied to '$JBOSS_HOME/server/default/conf/keystore/keystore.jks', where 'default' should
	be replaced with the JBoss configuration you are using.
	</p>
      </answer>
    </faq>
    <faq>
      <question>I get a blank page on the admiweb after start?</question>
      <answer>
        <p>
		Either you entered a hostname (in httpsserver.hostname in ejbca.properties) that does not resolve to the 
		machine where EJBCA is running during setup, or you changed the port that JBoss listens to.
		Make sure the hostname resolves to the machine ejbca is running on.
		If you need the change to url, use the command 'bin/ejbca.sh setup setbaseurl'.
        </p>
      </answer>
    </faq>
    <faq>
      <question>After upgrading the version of Java, the Admin GUI no longer works.
      Or, the installation seems to work fine, superadmin.p12 is created but ssl connections
      are refused without error messages in JBoss..</question>
      <answer>
        <p>
Tomcat needs the CA-certificate relating to the server certificate in 
javas trust-store. This is imported when running 'ant install' and when
you upgraded java, you have a new, empty truststore.
Import the CA-certificate in JAVA_HOME/jre/lib/security/cacerts again, 
or copy the old truststore from the earlier JAVA_HOME.
You can manually import it by exporting the ca-certificate:
</p>
<source>
bin/ejbca.sh ca getrootcert caname root.der -der
</source>
<p>
and importing it in cacerts:
</p><source>
keytool -import -trustcacerts -file root.der -keystore $JAVA_HOME/jre/lib/security/cacerts
</source>
      </answer>
    </faq>
    <faq>
      <question>When running 'ant install' or creating JKS or PKCS12 files you can't use longer 
password than 7 characters. Anything longer gives an error?</question>
      <answer>
        <p>
		If you want to use strong crypto and/or password longer than 7 characters 
		in keystores you must install the 'Unlimited Strength Jurisdiction Policy Files' for JDK.
		The policy files can be found at the same place as the JDK download. 
		Further information on this can be found in the Sun documentation on the JCE.
        </p>
      </answer>
    </faq>
    <faq>
      <question>Installation hangs and the https server will not work.</question>
      <answer>
        <p>
		Perhaps JBOSS_HOME/server/default/conf/keystore/tomcat.jks must be executable. All scripts in 
EJBCA_HOME/bin directory must be executable, run 'chmod u+x *.sh'. Make sure you run the 
installation of ejbca as a user with enough privileges to write in JBOSS_HOME, and to 
JAVA_HOME/jre/lib/security/cacerts. Preferably the same user as is used to run the JBoss server.
        </p>
      </answer>
    </faq>
    <faq>
      <question>How do I connect to, and alter data in the built-in 'Hypersonic SQL' database.</question>
      <answer>
        <p>
A : Shut down JBoss.
Alternative 1:
If you want to simply drop a table, go into the file JBOSS_HOME\server\default\db\hypersonic\default.script and delete the lines that creates the table, for instance to delete the table GLOBALCONFIGURATIONDATA, delete the lines :
</p><source>
CREATE TABLE GLOBALCONFIGURATIONDATA(CONFIGURATIONID VARCHAR NOT NULL,DATA VARBINARY,UNIQUE(CONFIGURATIONID))
CREATE UNIQUE INDEX PK_GLOBALCONFIGURATIONDATA ON GLOBALCONFIGURATIONDATA(CONFIGURATIONID)
</source>
<p>
Just for fun you can also delete all lines beginning with: INSERT GLOBALCONFIGURATIONDATA...
</p><p>
Alternative 2:
Download HsqlDb fom http://hsqldb.sourceforge.net/. Unpack and in the 'bin'-subdirectory run 'runUtil DatabaseManager'.
In the window that opens connect to 'HSQL Engine Database In-Memory', select URL 'jdbc:hsqldb:$jboss.home\server\default\db\hypersonic\default'
where the path-to-jboss is for example 'C:\jboss\jboss-3.0.6_tomcat-4.1.18'.
Now you can enter you SQL-commands, for example 'drop table globalconfigurationdata'
and press 'Execute'. Unforturnately you must now go into the file
JBOSS_HOME\server\default\db\hypersonic\default.properties and set the version to the correct old one, edit
 the lines with 'version' to read 1.6 (for JBoss 3.0) instead of whatever is there.
 </p>
 </answer>
 </faq>
    <faq>
      <question>When enrolling for certificates with IE, the enrollment controll (clsid) is incorrect.</question>
	  <answer><p>Microsoft changed the enrollment controll due to secrity issues. Look in 'src/publicweb/apply/apply_exp.jsp' for more information.</p></answer>
	</faq>
    <faq>
      <question>I get the error "Object Class Violation : (65)" when publishing certificates in LDAP</question>
	  <answer><p>You LDAP object class may require some fields in the DN that you have not entered. Some schemas require the DN-attribute SN for instance.</p></answer>
	</faq>
    <faq>
      <question>What applications servers do EJBCA run on ?</question>
	  <answer><p>Official application server used for development is JBoss. Contributors have 
	  ensured that ejbca works on other applications servers as well. 
	  </p><p>
	  Version 3.x of EJBCA has been known to run on JBoss, Jonas and Weblogic.
	  </p><p>
	  EJBCA tries to stay as close to the spec as possible and should run on any EJB2
	  capable application server. Differences are present anyhow so you have to try.
	  </p></answer>
	</faq>
    <faq>
      <question>What databases do EJBCA support?</question>
	  <answer><p>EJBCA supports in theory any database that works with the application
	  server. The database must have support for long fields, a CRL can in theory
	  become very large.
	  EJBCA has been known to work with MySQL, PostgreSQL 7 and 8, Oracle 8 and 9, Sybase,
	  HypersonicSQL, SAPDB and MSSQL 2000.
	  Other databases should work with some simple configuration of xml-files.
	  </p></answer>
	</faq>
    <faq>
      <question>Why do I get the exception/error: User foo has status '40', NEW, FAILED or INPROCESS required.; nested exception is: javax.ejb.EJBException:null</question>
	  <answer><p>When using the LocalAuthenticationSession (default) all users have a STATUS. The status lifecycle
	  beginns with NEW and ends with REVOKED. Only when the status is NEW, FAILED or INPROCESS is it possible
	  to issue a certificate to a user. After a certificate has been issued, the status is set to GENERATED. This works like a
	one-time-password scheme. To issue a new certificate to the user his/her status must be reset to NEW, FAILED or INPROCESS.
	This can be done with the admin-GUI or:
	<source>
	bin/ejbca.sh ra setuserstatus username status
	</source>
	Status '10' is NEW. Just enter 'bin/ejbca.sh ra setuserstatus' to see a list of all status codes.
	</p>
	</answer>
	</faq>
    <faq>
      <question>How do I manipulate EJBCA-keystores using Suns 'keytool'?</question>
	  <answer><p>EJBCA use PKCS12 format for the keystore because it is a standard, and I like standards.
	  Normally keytool (e.g. sun) can read PKCS12 file but not write, so the BouncyCastle JCE is needed to handle PKCS12 keystores.
	  Put the BouncyCastle provider 'jce-jdk14-version.jar' in 'jre/lib/ext', the default classpath for extensions in java.
	  Now it should be possible to run:
	  </p>
	  <source>
keytool -list -alias privateKey -keystore server.p12 -storetype PKCS12 -storepass foo123 -provider org.bouncycastle.jce.provider.BouncyCastleProvider
	  </source>
	  <p>
	  It should be possible to import etc as well using keytool.
	  </p></answer>
	</faq>
    <faq>
      <question>How do I make a keystore using keytool with a real certificate from EJBCA?</question>
	  <answer>
<source>
# First generate a new keystore and a keypair:
keytool -genkey -alias mykey -keystore myks.jks -keyalg RSA -dname c=SE,O=AnaTom,CN=Test -keypass foo123 -storepass foo123
# You SUN keystore is now in the file 'myks.jks'. 
# Next generate a certification request (PKCS10):
keytool -certreq -alias mykey -sigalg SHA1WithRSA -file myreq.p10 -keypass foo123 -keystore myks.jks -storepass foo123
</source>
<p>
You now hav the certification request in the file 'myreq.p10'.

Open up EJBCA request page in your favorite browser, 'http://127.0.0.1:8080/apply/index.html', and select the link for NOT having a browser, 'http://127.0.0.1:8080/apply/apply_man.jsp'

Download the Root CA certificate by clicking on the link. Save the certificate as 'ca.pem'.

Enter the username and password of a valid user with status NEW, see question 'Why do I get the exception/error:' above. Copy and paste the contents of the certification request, 'myreq.p10' into the text field.
Save the returned certificate as 'cert.pem'.
</p>
<source>
# Import the Root CA certificate into the keystore 'myks.jks':
keytool -import -alias cacert -file ca.pem -keystore myks.jks -storepass foo123
# Import the certificate reply into the keystore:
keytool -import -alias mykey -file cert.pem -keystore myks.jks -storepass foo123 -keypass foo123
# Now you can take a look at your SUN keystore with:
keytool -list -keystore myks.jks
</source>
<p>
In theory, you can use the same method with a BouncyCastle PKCS12 keystore by adding the following
arguments to every command above:
</p>
<source>
-provider org.bouncycastle.jce.provider.BouncyCastleProvider/ -storetype PKCS12
</source>
<p>
unforturnately a bug in keytool prevents this from functioning properly at the moment, therefore I
recommend using the 'bin/ejbca.sh ca' to create PKCS12 keystores. It can be used to create keystores generally,
not just for CAs.
</p>	  
	  </answer>
	</faq>
    <faq>
      <question>What aliases do a EJBCA keystore contain?</question>
	  <answer><p>The keystore EJBCA uses is a PKCS12 keystore. The CAs private key and certificate is contained in the alias 'privateKey'.'.

If the CA is not a Root CA, i.e. the certificate in alias 'privateKey' is signed by another certificate, that CA certificate (Root certificate) is contained in the alias with the same name as the CN part of the Root CAs DN, i.e. the CN part of the issuer DN from the certificate in 'privateKey'.
</p></answer>
	</faq>
    <faq>
      <question>Why does the first function in 'dist.html', fetching a users certificate return an error 404?</question>
	  <answer><p>You have specified a subject DN to which no certificates have been issued.</p></answer>
	</faq>
    <faq>
      <question>Is EJBCA compatible with another JCE apart from BouncyCastle (for example Cryptix)?</question>
	  <answer><p>No, this is beacaues only BouncyCastle contains classes to actually generate certificates and CRLs. Normal JCE only allows usage, not creation.</p></answer>
	</faq>

  </faqsection>

</document>
