<?xml version="1.0"?>
<document>

  <properties>
    <title>CVC CAs</title>
  </properties>

<body>
  <section name="Features">
    <p>
    Using EJBCA you can set up a complete infrastructure for CVC CAs with:
    <ul>
      <li>Country CVCCA</li>
      <li>Domestic DVs (document verifier)</li>
      <li>Foreign DVs</li>
      <li>Inspection systems (IS)</li>
    </ul> 
    </p>
    You can also set up a Country Signing CA, which is a regular X.509 CA. 
    <p>
    Using the complimentary project <a href="http://www.signserver.org/">SignServer</a> you can set up a clustered Document Signer.
    </p> 
    <p>
    Currently EJBCA supports RSA keys in CV certificates with the follwing algorithms:
    <ul>
      <li>SHA1WithRSA - id-TA-RSA-v1-5-SHA-1</li>
      <li>SHA256WithRSA - id-TA-RSA-v1-5-SHA-256</li>
      <li>SHA256WithRSAAndMGF1 - id-TA-RSA-PSS-SHA-256</li>
    </ul>
    </p>
  </section>
  
  <section name="Creating CVC CAs and DVs">
  <p>When creating a CVC CA there are three CA Reference fields in the standard. In EJBCA these are mapped to a DN structure to
  have common handling in EJBCA. The mapping is:
  <ul>
    <li>Country = C</li>
    <li>Mnemonic = CN</li>
  </ul>
  For example when creating a country CVCA you select type CVC in the create CA page and enter a 'Subject DN' like: C=SE,CN=TESTCVCA.
  For the CVCA you select 'Signed by=Self Signed' and 'Certificate Profile=ROOTCA'.
  </p>
  <p>To create a DV you select 'Signed by=Name of CVCCA' and 'Certificate Profile=SUBCA'.</p>
  </section>

  <section name="CVC Sequence">
  <p>The sequence in the holder reference of EAC CVC certificates should identify a public key. For CAs created and managed by EJBCA this sequence is
  an automatic property in the CA token. It starts with 00001 and is increased when new keys are generated (renew CA with checkbox to renew keys checked).
  </p>
  <p>For entity (IS and DV) requests that are received, the sequence in the issued certificates are taken from the request. The entity knows best 
  how to index it's keys.
  </p>
  </section>
  
  <section name="EAC roles">
  <p>
  <ul>
  <li>When issuing a CV certificate using a Root CA profile the EAC role will be CVCA.</li>
  <li>When issuing a CV certificate using a Sub CA profile the EAC role will be DV-D if the country is the same as the country of the CVCA and DV-f if the country is not the same as the CVCA.</li>
  <li>When issuing a CV certificate using an End Entity profile the EAC role will be IS.</li>
  </ul>
  </p>
  </section>
  
  <section name="EAC access rights">
  <p>
  The EAC access rights for all issued CV certificates will be read access DG3 and DG4.
  </p>
  </section>
  
  <section name="Document verifiers (DV)">
  <p>
  You create domestic DVs as simply as creating a SubCA to your CVCA, using a SubCA certificate profile.
  </p>
  <p>
  You can sign foreign DVs by receiving and processing a CV certificate request. In the 'Edit Certificate Authorities' page enter a name for the 
  foreign DV and click 'Process Certificate Request'.
  <br/>
  You can also treat your DVs as regular End Entities by simply creating and choosing a SubCA certificate profiles when adding the End Entities.
  A benefit of handling foreign DVs as end entities is that you can process and renew them using the same WS-API as you can use for inspection systems. 
  </p>
  <p>You can create a DV to be signed by a foreign CVCA by creating a new CA and selecting 'Signed By=External CA'.
  You need the CVCA certificate of the foreign CVCA to create the request to be sent.
  When creating this CA a self-signed CV certificate request is created.
  </p>
  <p>You can sign CV certificate requests by your CVCA by going to 'Edit Certificate Authorities', typing the name of your CVCA in the
  test field (same name as appears in the list above the text field) and then clicking on 'Sign Certificate Request'. You will be a chance to upload the
  CV certificate request to the CVCA, and you will get an Authenticated request back.
  This is required when sending certificate requests from your DVs to other member states.
  </p>
  <p>You can at any time create a CV certificate request from a DV by going into 'Edit Certificate Authorities' and click 'Make Certificate Request'. 
  This generates a CSR created by the CAs keystore. When receiving the signed certificate back, you can feed that to your IS-system. There is no need (or way)
  to import it into EJBCA.
  </p>
  <p>
  You can renew a DV by going into 'Edit Certificate Authorities' and click 'Renew CA'. By uploading the CA certificate supposed to sign the 
  certificate, you can get a new CSR created. You can import the received certificate by clicking 'Renew CA' again and choosing the function to 
  'Receive Certificate Response' instead of 'Make Certificate Request'. 
  You only have to (or can) import one issued certificate to make your DV operational.
  <br/>
  By filling in the CA tokens password and checking the box 'Renew Keys' the DV will generate new keys.
  This is only working for soft keystores currently. The renewal CRS is not signed with the old keys. 
  </p>
  <p>DVs have short validity periods, and it may be good to have them automatically renewed. There is a service 'Renew CA Service' to 
  automatically renew CAs. Thhe User's Guide form more information about this service.
  </p>
  </section>
  
  <section name="Inspection Systems">
  <p>
  The best interface for enrolling IS's is the Web service API. There is a method cvcRequest that implements initial issuance and automatic renewal 
  of IS cvc requests.
  </p>
  <p>
  Enrollment processing logic using WS API is:
  <ul>
    <li>A new IS with no old certificate issued must be pre-registered, be in status NEW and use a password.</li>
    <li>An IS with status REVOKED or HISTORICAL can not be enrolled.</li>
    <li>If the request is an authenticated request and the IS have an old valid (in time) certificate (in the EJBCA database) that can verify the outer signature, a new IS certificate is automatically allowed to be enrolled.</li>
    <li>If the authenticated request can not be verified using an old valid certificate (in the EJBCA database) the user must be in status NEW and use a password.</li>
  </ul>
  The complete certificate chain is always returned, with the IS certificate in the first position, DV certificate in the second and CVCA certificate last.
  </p>
  <p>
  Revocation of an IS prohibits further issuance of certificates to that IS using the WS API.
  </p>
  <p>
  There is a simple command line client for testing which is under dist/ejbcawscli/cvcwscli.sh. This can be used to make requests and to parse, print and verify requests and certificates.
  </p>
  </section>

  <section name="Web Service API">
  <p>In the regular EJBCA WS-API there is a method for enrolling and renewing DVs and ISs.
  </p>
  <source>
  	/** Generate a CV certificate for a user, uses the same authorizations as editUser and pkcs10Request
	 * responseType is always CertificateHelper.RESPONSETYPE_CERTIFICATE.
	 * 
	 * @see #editUser
	 * @see #pkcs10Request
	 * @param userdata the user data for editing/adding a user
	 * @param cvcreq Base64 encoded CVC request message
	 * @return the full certificate chain for the IS, with IS certificate in pos 0, DV in 1, CVCA in 2.
	 */
	public List&lt;Certificate&gt; cvcRequest(String username, String password, String cvcreq)
	throws AuthorizationDeniedException, UserDoesntFullfillEndEntityProfile, NotFoundException,
	EjbcaException, ApprovalException, WaitingForApprovalException;
  </source> 
  </section>

  <section name="Command line client">
  <p>there is a command line client using the WS-API. You can use this for reference and sample how to use the WS-API.
  </p>
  <p>The command line client have two functions:
  <ul>
  <li>cvcrequest - adds a new user and requests a CV Certificate.</li>
  <li>cvcprint - used to parse and print CV Certificate and requests.</li>
  </ul>
  Type the command on the command line to get usage information. 
  </p>
  <source>
  ejbca> cd dist/ejbcawscli
  ejbca/dist/ejbcawscli> ./cvcwscli.sh
  Usage: cvcrequest cvcprint
  
  ejbca/dist/ejbcawscli> ./cvcwscli.sh cvcrequest
  Usage : cvcrequest &lt;username&gt; &lt;password&gt; &lt;subjectdn&gt; &lt;sequence&gt; &lt;caname&gt; &lt;signatureAlg&gt; ...
  ...
  
  ejbca/dist/ejbcawscli> ./cvcwscli.sh cvcprint
  Usage : cvcprint &lt;filename&gt; [verifycert]
  ...
  </source> 
  </section>
    
  <section name="Importing CAs">
  <p>For test purposes you may receive a private key and a CV certificate for the CVCA trust point used by the passport manufacturer when creating 
  specimen passports. To test your process and inspection systems you can import a CVCA (with soft keystore) in EJBCA if you have a PKCS#8 private key and a CV certificate iwth the public key.
  </p>
  <p>bin/ejbca.sh ca importcvca
  </p>
  <p>
  Example import command using the given CV Certificate:
  </p>
  <source>
bin/ejbca.sh ca importcvca importcvca1 GO_CVCA_RSA2008.pkcs8 GO_CVCA_RSA2008.cvcert C=SE,CN=IMPCA1
  </source>
  <p>
  Example import command using the same private/public keys but generating a new certificate:
  </p>
  <source>
bin/ejbca.sh ca importcvca importcvca1 GO_CVCA_RSA2008.pkcs8 GO_CVCA_RSA2008.cvcert C=SE,CN=IMPCA1 SHA1WithRSA 365
  </source>
  </section>
  
</body>
</document>

