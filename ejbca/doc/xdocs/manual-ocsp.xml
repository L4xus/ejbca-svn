<?xml version="1.0"?>
<document>

  <properties>
    <title>OCSP User Guide</title>
  </properties>

<body>

<section name="Control tool">
<p>
All control of a running responder is done with the EJBCA client toolbox.
See <a href="manual.html#EJBCA%20client%20toolbox">EJBCA client toolbox</a> for instructions how to build and use the client toolbox.
</p><p>
To get all available OCSP commands please type:
<source>
$TOOLBOX_HOME/ejbcaClientToolBox.sh OCSP
</source>
</p>
</section>
<section name="Activation">
<p>
If passwords are not configured for the tokens of the keys then you got to activate your responder.
When activating you are prompted for a password. This password will then be used for all token password not configured.
</p><p>
Activate like this:
</p>
<source>
$TOOLBOX_HOME/ejbcaClientToolBox.sh OCSPActivate
</source>
</section>
<section name="OCSP client">
<p>
This section describes how to build and use the stand alone OCSP and Lookup server client.
</p>
<subsection name="Using the API">
<p>
The best way to learn the API is by looking at the source code, since it is included. The client API is in the class 
org.ejbca.core.protocol.ocsp.OCSPUnidClient.
The <a href="manual.html#EJBCA%20client%20toolbox">EJBCA client toolbox</a> can serve as a good sample for using the API and it is in the class
org.ejbca.ui.cli.Ocsp.
</p>
</subsection>
<subsection name="Fnr-Unid mapping">
<p>
For the Unid Lookup part, you must use https with a client certificate with the ocsp client. If you use http with a client certificate
and the OCSP responder is set up to answer Lookup requests, the OCSP client will returns the Fnr. The Fnr will be returned if the certificate 
contains a Unid in the SN component of the SubjectDN, and the Unid has a valid mapping to an Fnr in the OCSP responders Fnr-Unid mapping database.
</p><p>
If the Fnr returned is null, there are several possible errors:
<ol>
<li>The client was not authorized to request an Fnr.</li>
<li>There was no Unid Fnr mapping available.</li>
<li>There was no Unid in the certificate (serialNumber DN component).</li>
</ol>
    </p>
</subsection>
  </section>

  <section name="OCSP stress testing">
  <p>
    Using the <a href="manual.html#EJBCA%20client%20toolbox">EJBCA client toolbox</a> you can easily stress test your CAs and OCSP responders.
  </p>
  <p>To stress test you can first issue a large number of certificates from the CA using the webservice stress test, and after this
  stress test the OCSP responder with a random selection of all the certificates issued.
  </p>
  <source>
$TOOLBOX_HOME/ejbcaClientToolBox.sh EjbcaWsRaCli stress ...
$TOOLBOX_HOME/ejbcaClientToolBox.sh OCSP stress ...
  </source>
  </section>

  <section name="Monitoring OCSP databases">
  <p>
<a href="manual.html#EJBCA%20client%20toolbox">EJBCA ClientToolBox</a> contains a tool for monitoring
OCSP databases. This tool is stand-alone and based on Java SE JPA that can be configured in
  </p>
<source>clientToolBox-dist/properties/META-INF/persistence.xml.</source>
  <p>
Log4J is used for reporting an can be configured in
  </p>
<source>clientToolBox-dist/properties/log4j.xml.</source>
  <p>
The tool operates using Certificate Profile IDs that are the internal representations of different Certificate
Profiles in EJBCA. When you run the tool it will output all the existing IDs in each OCSP. These IDs is also
shown in the Admin GUI for each CertificateProfile.
  </p>
  <p>
Inconsistencies that will be detected are:
<ol>
<li>Missing info about certificates in the OCSP database. (ERROR)</li>
<li>Additional info about certificates in the OCSP database. (ERROR)</li>
<li>Info about certificates in the OCSP database that has been tampered with. (ERROR)</li>
<li>If there are any extra certificates profiles in use on the OCSP besides those that we are trying to check. (WARN)</li>
</ol>
Every detected inconsistency will also be reported in a summarizing final ERROR-message. If there are two many errors,
this final message will be truncated. 
  </p>
  <p>
Since going through every single CertificateData row in a database is heavy work, it's highly recommended to
use indexes such as
  </p>
<source>create index certificatedata_idx7 on CertificateData(certificateProfileId);</source>
  <p>
for your both the CA database and each OCSP responder.
  </p>
  </section>
</body>
</document>

