
LDAP Naming
===========

The dc component support is mandated by all of the X.509 RFCs now.
For example, if I have this directory:

dc=bigcorp,dc=com
	|
	+-dc=fi
	|
	|
	+-dc=se
		|
		+-ou=users
			|
			+-cn=Mike Jackson

The most understandable method is taking the subject name in
forward order, like:
cn=Mike Jackson,ou=users,dc=se,dc=bigcorp,dc=com

If the DN is ordered like this it should be published to the correct object in the tree. 

If the DN os ordered reverse, like:
dc=bigcorp,dc=com,dc=se,ou=users,cn=Mike Jackson
EJBCA will reorder it incorrectly to forward order, so the publishing will be wrong.

Therefore...
USER FORWARD ORDER LIKE THIS:
cn=Mike Jackson,ou=users,dc=se,dc=bigcorp,dc=com

CONFIGURING LDAP PUBLISHERS
===========================

Note: Slighly old documentation, consider also checking INSTALL-guide.txt in the source package.

A good free LDAP server can be found at http://www.openldap.org/

A Publisher is a session bean that implements the IPublishSession interface and
is used to store certificates and CRLs for entities.
EJBCA have support for endless number of publishers. Simply by deploying session
beans (PublisherSession1, PublisherSession2, ...) on the application server. The
user of EJBCA can implement own publishers, but EJBCA already comes with  a
publisher for LDAP.

Configuring EJBCA
-----------------
To configure the publisher for LDAP:
By default the LDAP publisher is not enabled. To deploy the LDAP Publisher
session bean, uncomment the section for the session bean 'PublisherSession1' in
'ca/META-INF/ejb-jar.xml'.
 
      <!-- Uncomment to use LDAP Publisher -->
      <!-- <session>
        <ejb-name>PublisherSession1</ejb-name>
        <home>se.anatom.ejbca.ca.store.IPublisherSessionHome</home>
        <remote>se.anatom.ejbca.ca.store.IPublisherSessionRemote</remote>
        <ejb-class>se.anatom.ejbca.ca.store.LDAPPublisherSessionBean</ejb-class>
        <session-type>Stateless</session-type>
        <transaction-type>Container</transaction-type>

        <env-entry>
     	   <description>LDAP host</description>
     	   <env-entry-name>ldapHost</env-entry-name>
     	   <env-entry-type>java.lang.String</env-entry-type>
     	   <env-entry-value>localhost</env-entry-value>
        </env-entry>
     ...snip! removed text...
     </session> -->
     <!-- END LDAP Publisher section -->

Also uncomment the section for method permissions for the
same session bean.

     <!-- Uncomment for LDAP Publisher -->
     <!-- <method>
         <ejb-name>PublisherSession1</ejb-name>
         <method-name>*</method-name>
     </method> -->
     <!-- END LDAP Publisher section -->

Do the same in 'ra/META-INF/ejb-jar.xml'.

This will configure an LDAPPublisherSession so be deployed as
'PublisherSession1', which will be found by the CA.

'PublisherSession1' must be configured to match your LDAP server.

Parameters to LDAP Publisher (in ca/ca/META-INF/ejb-jar.xml):

- ldapHost is the host where the LDAP server is located.

- ldapPort is the port on which the LDAP server listens (SSL is not yet
supported).

- loginDN is the DN of a user on the LDAP server with permissions to add and
update enties.

- loginPassword is the password for the user above.

- userObjectClass is the objectclass for the LDAP entries for users, where user
certificates are published. The entry is hierarchical separated by ';' to build 
a structure like:
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
This objectclass must allow the attribute 'userCertificate;binary'. 
Default 'top;person;organizationalPerson;inetOrgPerson'

- cAObjectClass is the objectclass for the LDAP entries for CAs, where CA
certificates and CRLs are published. The entry is hierarchical separated by ';' 
to build a structure. This objectclass must allow the attributes
'cACertificate;binary', 'certificateRevocationList;binary' and 'authorityRevocationList;binary'.
Default 'top;applicationProcess;certificationAuthority'

- userCertAttribute is the attribute name, in the userObjectClass, for the users 
certificate. Default 'userCertificate;binary'

- cACertAttribute is the attribute name, in the cAObjectClass, for the CAs 
certificate. Default 'cACertificate;binary'

- cRLAttribute is the attribute name, in the cAObjectClass, for CRLs (user CRLs) 
publisher by the CA. Default 'certificateRevocationList;binary'

- aRLAttribute is the attribute name, in the cAObjectClass, for ARLs (CA CRLs) 
publisher by the CA. Default 'authorityRevocationList;binary'

Setting up certificate profiles
-------------------------------
To publish in LDAP you must create a Certificate profile in EJBCA that publishes 
to LDAP. If the above is configured, the will be a section for 'Publishers' available
when creating/editing a certificate profile. Choose this, and then when adding 
end-entities, make sure they use the new certificate profile and voila, the certs will 
be published.

Configure OpenLDAP
------------------
The objectclass 'inetOrgPerson' is used by default to store certificates.

Example:

dn: cn=Mike Jackson,ou=people,dc=company,dc=com
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Mike Jackson
sn: Jackson
userCertificate;binary::

CAs are published in the form:

dn: cn=ejbca,dc=jackson,dc=net
objectClass: top
objectClass: applicationProcess
objectClass: certificationAuthority
cn: ejbca
cACertificate;binary:
certificateRevocationList;binary:
authorityRevocationList;binary: 

To configure OpenLDAP (version 2.2.5) to include the 'inetOrgPerson' you must 
add the following lines to slapd.conf:

include         /usr/local/etc/openldap/schema/cosine.schema
include         /usr/local/etc/openldap/schema/inetorgperson.schema

Don't forget to add the top object by creating an LDIF file (org.ldif):
---
dn: o=AnaTom,c=SE
objectclass: dcObject
objectclass: organization
o: AnaTom
dc: AnaTom

dn: cn=Admin,o=AnaTom,c=SE
objectclass: organizationalRole
cn: Admin
---

And using the command:
ldapadd -x -D "cn=Admin,o=AnaTom,c=SE" -W -f org.ldif


