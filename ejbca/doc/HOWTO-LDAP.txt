
LDAP Naming
===========

The dc component support is mandated by all of the X.509 RFCs now.
For example, if I have this directory:

dc=bigcorp,dc=com
    |
    +-dc=fi
    |
    |
    +-dc=se
        |
        +-cn=Mike Jackson

The most understandable method is taking the subject name in
forward order, like:
cn=Mike Jackson,dc=se,dc=bigcorp,dc=com

If the DN is ordered like this it should be published to the correct object in the tree. 

If the DN is ordered reverse, like:
dc=bigcorp,dc=com,dc=se,cn=Mike Jackson
EJBCA will reorder it incorrectly to forward order, so the publishing will be wrong.

Therefore...
USER FORWARD ORDER LIKE THIS:
'cn=Mike Jackson,dc=se,dc=bigcorp,dc=com' if using the dc model
or
'cn=Mike Jackson,o=bigcorp,c=se' if using the o,c model.

Attributes like uid, l, serialNumber etc will not work to publish to LDAP at the moment,
there will be a 'naming vialoation'.
To publish in LDAP, keep to simple DNs like the one above, only cn and the baseDN.

CONFIGURE LDAP PUBLISHERS
=========================

Note: Slighly old documentation, consider also checking INSTALL-guide.txt in the source package.

A good free LDAP server can be found at http://www.openldap.org/

A Publisher is a session bean that implements the IPublishSession interface and
is used to store certificates and CRLs for entities.
EJBCA have support for endless number of publishers simply by defining publishers 
in the admin-GUI.. The user of EJBCA can implement own publishers, but EJBCA 
already comes with a publisher for LDAP.

Configuring EJBCA
-----------------
To configure the publisher for LDAP:
Choose 'Edit Publishers' in the admin-GUI.
Add a new publisher with a name you define yourself. Edit the publisher and fill 
in all the neccesary fields.

Parameters to LDAP Publisher:

- 'Hostname' is the host where the LDAP server is located.

- 'Port' is the port on which the LDAP server listens, default non-SSL is 389.

- 'Login DN' is the DN of a user on the LDAP server with permissions to add and
update enties.

- 'Login Password' is the password for the user above.

- 'User Object Class' is the objectclass for the LDAP entries for users, where user
certificates are published. The entry is hierarchical separated by ';' to build 
a structure like:
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
This objectclass must allow the attribute 'userCertificate;binary'. 
Default 'top;person;organizationalPerson;inetOrgPerson'

- 'CA Object Class' is the objectclass for the LDAP entries for CAs, where CA
certificates and CRLs are published. The entry is hierarchical separated by ';' 
to build a structure. This objectclass must allow the attributes
'cACertificate;binary', 'certificateRevocationList;binary' and 'authorityRevocationList;binary'.
Default 'top;applicationProcess;certificationAuthority'

- 'User Certificate Attribute' is the attribute name, in the userObjectClass, for the users 
certificate. Default 'userCertificate;binary'

- 'CA Certificate Attribute' is the attribute name, in the cAObjectClass, for the CAs 
certificate. Default 'cACertificate;binary'

- 'CRL Attribute' is the attribute name, in the cAObjectClass, for CRLs (user CRLs) 
publisher by the CA. Default 'certificateRevocationList;binary'

- 'ARL Attribute' is the attribute name, in the cAObjectClass, for ARLs (CA CRLs) 
publisher by the CA. Default 'authorityRevocationList;binary' 
(note that pure ARLs are not implemented yet in EJBCA)

Setting up certificate profiles
-------------------------------
To publish in LDAP you must create a Certificate profile in EJBCA that publishes 
to LDAP. If the above is configured, there will be a section for 'Publishers' available
when creating/editing a certificate profile (with 'Edit Certificate Profiles'. 
Choose this, and then when adding end-entities, make sure they use the new certificate 
profile and voila, the certs will be published.

CONFIGURE OpenLDAP
==================
The objectclass 'inetOrgPerson' is used by default to store certificates.

Example:

dn: cn=Mike Jackson,ou=people,dc=company,dc=com
objectclass: top
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
cn: Mike Jackson
sn: Jackson
userCertificate;binary::

CAs are published in the form:

dn: cn=ejbca,dc=jackson,dc=net
objectClass: top
objectClass: applicationProcess
objectClass: certificationAuthority
cn: ejbca
cACertificate;binary:
certificateRevocationList;binary:
authorityRevocationList;binary: 

To configure OpenLDAP (version 2.2.5) to include the 'inetOrgPerson' you must 
add the following lines to slapd.conf:

include         /usr/local/etc/openldap/schema/cosine.schema
include         /usr/local/etc/openldap/schema/inetorgperson.schema

Don't forget to add the top object by creating an LDIF file (org.ldif):
---
dn: o=AnaTom,c=SE
objectclass: dcObject
objectclass: organization
o: AnaTom
dc: AnaTom

dn: cn=Admin,o=AnaTom,c=SE
objectclass: organizationalRole
cn: Admin
---
And using the command:
ldapadd -x -D "cn=Admin,o=AnaTom,c=SE" -W -f org.ldif

Check what you have in the LDAP by:
/usr/local/bin/ldapsearch -x -b 'o=AnaTom,c=SE' '(objectclass=*)'

Configure SSL
-------------
TODO

