This file describes how to configure ant start the OCSP responder.


Building and configuring EJBCA.
-------------------------------
EJBCA should be configured as for any other installation but you must also set all preferences
(ocsp-database.*) of the responder data base. The responder database is the master database of all
the responders. Then EJBCA is built with the command: ant deploywithexternalocsp

When EJBCA has been started you have to add a new publisher. As a superuser you add this publisher
on the "Edit Publishers" page in the admin GUI. Use publisher type "Custom Publisher". And these
configurations (if ocsp-datasource.jndi-name=OcspDS):
Class Path:                             org.ejbca.core.model.ca.publisher.ExternalOCSPPublisher
Properties of Custom Publisher:         dataSource java:/OcspDS

All certificate profiles to certificates that should be available to the OCSP responder should
have a reference to this publisher. To configure this you must be a super user.

When all settings above have been done then all created certificates belonging to a certificate
profile that has a the ExternalOCSPPublisher as publisher should be published in the responder
database as well as in the EJBCA database. When a certificate is revoked it will be revoked in
the responder database as well.
If the publishing is not working then an error starting with these words is written to the
application server log of EJBCA: OCSP publishing is not working. The log must be monitored to
discover such a fault and if such a fault is discovered an alarm should notify the operator that he
has to fix whatever is wrong and then synchronise the OCSP database with the EJBCA database (see
Synchronise the db of the responder section).


Building and configuring the Responder.
---------------------------------------
The responder is configured as EJBCA is configured. Only the preferences ocsp.* and httpsserver.*
and datasource.* and database.* are relevant to the responder but you may keep ejbca.properties
from the EJBCA setup since definitions of other properties does no harm. But the ocsp.softKeys.*
prefernces that has no meaning for EJBCA has also to be configured, please read description of
these properties in ejbca.properties.samples.

Keys has to be generated for OCSP signing. One key for each CA. These keys can be generated by EJBCA.
Define a certificate profile that suits your clients needs and create a user for each CA using this
profile. Use the token type "p12" or "jks". When the key has been created it should be stored in the
directory defined by the ocsp.softKeys.dir property of ejbca.properties. The password for each key
must be the same and should be equal to the ocsp.softKeys.keyPassword property of ejbca.properties.

The responder is then built and deployed with "ant ocsp-deploy". When the application server is then
started it should just work.


Synchronise the db of the responder
-----------------------------------
At the beginning and after failure in publishing to the responder the master database of the
publishers must be synchronised with the CertificateData table of the database of EJBCA.
The following procedure may be used to synchronise the database of EJBCA with the database of the
responder:

1. Prevent any further issuing of new certificates and revocation of old certificates until the
synchronisation is finished. This might be done by simply blocking the port to the adminweb.

2. On the host of ejbca the following commands can be used to make the synchronisation:

mysqladmin -h 'ocspResponder' drop ejbca_db;
mysqladmin -h 'ocspResponder' create ejbca_db;
mysqldump --compress ejbca_db CertificateData | mysql -h 'ocspResponder' ejbca_db;

3. Check that the publishing is working before allowing issuing and revoking.


Running several responders.
--------------------------
In many case it is desirable to have several responders on different computers . This is easily
achieved if it is an mysql database that EJBCA is publishing to (see section "Building and
configuring EJBCA"). All you have to do is to set up the publishing database as a master. Then one
slave data base is created on each computer that should host a responder.
How to do it is described in the mysql documentation. Depending on which which version you are using
please read one of the followings:
http://dev.mysql.com/doc/refman/4.1/en/replication-howto.html
http://dev.mysql.com/doc/refman/5.0/en/replication-howto.html
http://dev.mysql.com/doc/refman/5.1/en/replication-howto.html
