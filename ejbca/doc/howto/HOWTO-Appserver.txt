
CONFIGURING Weblogic
====================

Note: EJBCA should work fine with Weblogic 8.x/9.x

1. Set the environment variable WEBLOGIC_HOME pointing to for example /bea/weblogic81 
(weblogic.jar is located under WEBLOGIC_HOME/server/lib).

2. Unforturnately you must also point JBOSS_HOME to where JBoss is located in order for the build 
script to work, at least until someone provides a weblogic.xml corresponding to bin/jboss.xml.

3. Edit 'jndi.properties' in the directories 'ejbca/bin' and 'ejbca/src/java' to
call Weblogic instead of JBoss, modify the principal and credentials according to you weblogic 
domain's setting (same as the user name/password to login weblogic console).

4. Edit bin/cli.xml and remove the comments for the two weblogic lines. Remove the lines for jboss.home instead.

5. Edit conf/ejbca.properties, it's important to at least set up the database parameters.
Make special note to:
datasource.jndi-name-prefix - which is specific for Weblogic.
weblogic-oracle-columntype - which is specific for Weblogic.
httpserver.privhttps=7002 - default SSL port of Weblogic is 7002, default of EJBCA on JBoss is 8443.

Edit conf/web.properties and set 'web.jsfimpl=nojsf', this must be done until we have fixed JSF configuration for weblogic.

If you had issued an 'ant' command before, it is now important to do 'ant clean' before building again.

Build ejbca.ear (ejbca/dist/ejbca.ear) with 'ant'.

5.5 If you are using Weblogic 9.x. Replace the generated file tmp/bin/dd/META_INF/weblogic-cmp-rdbms-jar.xml with the file 
    with the same name located in src/deploy/weblogic.
    Run 'ant' again to build an ejbca.ear using the new file.
    
6. Create EJBCA domain with weblogic configuration wizard, select Basic weblogic server domain, Express,
   Development mode, sun's JDK at bea's home directory, and remember the admin username/password.
   - Wls 9.2 will create a default 'mydomain' for you the first time it is started.
   - Access the Weblogic management console at: http://127.0.0.1:7001/console/
   - You can set WLS_USER and WLS_PW environment variables so you don't have to enter username/pwd when starting Weblogic.
   
7. Create EjbcaPool and EjbcaDS in Weblogic, the JNDI name should be the one specified in ejbca.properties.
Create tables in the database configured for EjbcaPool and EjbcaDS in Weblogic.
- You can do an 'ant bootstrap' to JBoss if you want JBoss to create the tables for you.
- On oracle XE you can run for example: sqlplus oracle@XE @create-tables-ejbca3-oracle.sql
  select table_name from user_tables;
- In Weblogic9, you only create a 'Data Source', no Pools exists any longer.
- Don't forget to apply a Target for your DataSource.

See the file create-tables-ejbca3.sql for table definitions, or just run /doc/howto/create-tables-ejbca3-oracle.sql for Oracle.

8.Create a new java mail session for user notification in UserAdminSessionBean. In Weblogic, the JNDI name should be "EjbcaMail".
  key in the properties:
  mail.store.protocol=pop3
  mail.transport.protocol=smtp
  mail.user=icejean
  mail.pop3.host=pop.21cn.com
  mail.smtp.host=smtp.21cn.com
  mail.smtp.auth=false
  mail.from=icejean@21cn.com
  mail.debug=false
  
9. Deploy the ejbca.ear file in weblogic, it should deploy straight away without errors.

10. Unset JBOSS_HOME. If you want to use the CLI (command line interface) bin/ejbca.sh, you must have WEBLOGIC_HOME set, 
    but you can not have JBOSS_HOME set.
    With JBOSS_HOME set EJBCA will think that you will be connecting to a JBoss server, but
    we want to connect to a Weblogic server, which is pointed to by WEBLOGIC_HOME.
   
11. Run 'ant install' to do the installation. Everything should work here with no errors. 
If you get errors these must be resolved before we can move on.

12. Configure SSL in Weblogic:
a) Copy %JAVA_HOME%/jre/lib/security/cacerts to %BEA_HOME%/jre/lib/security, so that Weblogic can trust the initial CA installed 
when doing 'ant install', you can get the cert with 'bin/ejbca.sh ca getrootcert cert.pem'.
b) Configure weblogic server for SSL.
   server->configuration->keystore&ssl, click "Change", select "Custom Identity and Java Standard Trust"
     Custom Identity Keystore: path to tomcat.jks generated while "ant isntall",
     Private Key Alias: localhost
     Passphrase: serverpwd, specified in ejbca.properties.
 
   server->configuration->keystore&ssl->advanced options->Server Attributes->Two Way Client Cert Behavior:
     Client Certs Requested And Enforced

   server->configuration->general, check "SSL Listen Port Enabled", note that the port should be same as httpserver.privhttps in ejbca.properties.

13.Copy %EJBCA_HOME%/src/adminweb/languages/*.* to /tmp/languages/*.* , where /tmp should be at the same disk with weblogic,
   d:\ for example, as org.ejbca.ui.web.admin.configuration.WebLanguages.init() has a bug of reading those property files
   within the servlet context on weblogic. Need to be addressed in the future.
   
This should make the admin-GUI work, note to install the  Unlimited Strength Jurisdiction Policy Files from java.sun.com 
for both sun's JDK and BEA's JDK first before installation.
If installing with Oracle, perhaps you need to replace jdbc driver at weblogic_home\server\lib, weblogic_home\server\ext\jdbc\oracle\920, 10g 
all to 10.1.0.2, in my case which is Oracle 9.2.0.


TransactionTimeoutException in Weblogic
---------------------------------------
If you are running on a not-so-fast machine, you may experience TransationTimeoutException during 'ant install'.
This is due to that it takes a long time for RSA key generation.

To configure the transaction timeout to a larger value in weblogic:
1. logon to Weblogic Console with IE, for example, http://localhost:7001/console
2. click "Services" at the left "Domain Structure" navigation frame to expand the service list.
3. click "JTA" to display the JTA property setting page at right content frame.
4. update the first property "Timeout Seconds" to a ratinal value that is enough to execute EJBCA installation
   (about 100s to finish the whole installation).


JBOSS
=====

JBoss commonly have problems with class loading if several applications are run in one instance of JBoss.
This will typically manifest itself as ClassCast-, IllegalAccess- or VerifyError Exceptions. 
The reason is usually that mora than one application is using an external jar file, for example commons-fileupload.jar
or ldap.jar, possibly using different versions as well.

These links describe how to configure jboss-app.xml, etc and also describe how
JBoss classloading works.

http://wiki.jboss.org/wiki/Wiki.jsp?page=ClassLoadingConfiguration
http://wiki.jboss.org/wiki/Wiki.jsp?page=JBossClassLoadingUseCases


Glassfish
=========

This is only starter instruction to help you get started as a developer, EJBCA does not work on Glassfish yet.

Currently EJBCA support the MySQL database on Glassfish.

- Set the envorinment variable APPSRV_HOME to the directory where Glassfish is installed. For example APPSRV_HOME=/home/sun/glassfish.
  The variable must be available when working with EJBCA.
  
- Create a database and a database user with privileges.

- Create the database tables using one of the scripts in doc/howto/create-tables-xxx. Choose the correct file for your database.
    Example for MySQL:
    mysql -u ejbca -p ejbca
    \. create-tables-ejbca3-mysql.sql
  
- Start the application server: asadmin start-domain

- Create a datasource called EjbcaDS, in the admin console this is done in Resources->JDBC->JDBC Resources.
    Use the pool DerbyPool, or connect to another database pool you have created.

    When adding for example a MySQL Pool use values: Name=MysqlPool, Type=javax.sql.DataSource, Vendor=mysql. 
    It seems almost random which properties are pre-created on the next page...

- Start the database (if using Derby): asadmin start-database

- Configure ejbca: 
    in conf/ejbca.properties you should at least set appserver.type, appserver.home and logging.log4j.config
    in conf/database.properties you should at least set datasource.jndi-name-prefix, and the database settings for your chosen database.
    in conf/web.properties you should set 'web.jsfimpl=nojsf'
    
- Build ejbca:
    ant
    
- Deploy ejbca.ear using: 
    ./asadmin deploy --dbvendorname=mysql ../../ejbca/dist/ejbca.ear
    Mysql is changed for the database you are using, see glassfish documentation.
    The relative path to ejbca.ear depends on where you installed ejbca and glassfish.
    
- Install ejbca:
    ant install

Creating deployment descriptors for Glassfish:
----------------------------------------------
Whan a new release of EJBCA should be running on glassfish, the deployment descriptors may have to be updated.
Uncomment the section in compile.xmli to generate sun ejb deployment descriptors. 
Compare the generated one with src/appserver/sun/deploy/sun-ejb-jar.xml, and merge if needed.

* sun-web.xml files must be updated with any new references that exist in the web.xml files.

Of particular interest on Glassfish is that in order for web-apps to call EJBs, the webapp must define a datasource ref,
both in web.xml and sun-web.xml.
web.xml
<resource-ref >
   <res-ref-name>jdbc/EjbcaDS</res-ref-name>
   <res-type>javax.sql.DataSource</res-type>
   <res-auth>Container</res-auth>
</resource-ref>

sun-web.xml
<resource-ref>
    <res-ref-name>jdbc/EjbcaDS</res-ref-name>
    <jndi-name>jdbc/EjbcaDS</jndi-name>
</resource-ref>

* sun-ejb-jar.xml must be updated with new beans.

* sun-cmp-mapping.xml must be updated with database changes.

* database schema must be updated.
Example for postgres:
CLASSPATH=../lib/postgresql-8.1-407.jdbc3.jar:$CLASSPATH 
./capture-schema -username ejbca -password ejbca -dburl jdbc:postgresql://127.0.0.1/ejbca -driver org.postgresql.Driver -out ejbca-ejb

Copy the generated ejbca-ejb.bcschema file to src/deploy/sun/schema/<database>

