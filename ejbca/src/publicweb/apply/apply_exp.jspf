<HEAD>
<TITLE>@EJBCA@ IE Certificate Enroll</TITLE>
<link rel="stylesheet" href="../indexmall.css" type="text/css">

<script type="text/javascript">
<!--
	function showCSPActiveX() {
		if (navigator.appName.indexOf("Explorer") != -1) {
		    if ( navigator.userAgent.indexOf("Windows NT 6") != -1 ) {
				document.writeln("<object classid=\"clsid:884e2049-217d-11da-b2a4-000e7bbb2b09\" id=\"g_objClassFactory\" height=\"0\" width=\"0\" ></object>");
			} else {
				document.writeln("<object classid=\"clsid:127698e4-e730-4e5c-a2b1-21490a70c8a1\" id=\"newencoder\" codebase=\"/CertControl/xenroll.cab#Version=5,131,3659,0\" height=\"0\" width=\"0\" ></object>");
				document.writeln("<object classid=\"clsid:43F8F289-7A20-11D0-8F06-00C04FC295E1\" id=\"oldencoder\" height=\"0\" width=\"0\" ></object>");
			}
		}
	}
	showCSPActiveX();
-->
</script>
<!--
<object
   classid="clsid:127698e4-e730-4e5c-a2b1-21490a70c8a1"
   CODEBASE="/CertControl/xenroll.cab#Version=5,131,3659,0"
   id="newencoder">
 </object>
<object
   classid="clsid:43F8F289-7A20-11D0-8F06-00C04FC295E1"
   id="oldencoder">
 </object>
-->
<!-- New updated enrollment activeX-control 2002-09-02 (Q323172)
New Xenroll.dll information:
Class ID: {127698e4-e730-4e5c-a2b1-21490a70c8a1}
sXEnrollVersion="5,131,3659,0" 

New Scrdenrl.dll information:
Class ID: {c2bbea20-1f2b-492f-8a06-b1c5ffeace3b}
sScrdEnrlVersion="5,131,3642,0" 
-->
<!-- Old Xenroll.dll information: 
Class ID: {43F8F289-7A20-11D0-8F06-00C04FC295E1} 

Old Scrdenrl.dll information:
Class ID: {80CB7887-20DE-11D2-8D5C-00C04FC29D45} 
-->

<SCRIPT LANGUAGE=VBSCRIPT>
<!--
	Dim g_objEnroll, g_objPrivateKey, g_objRequest, g_objRequestCMC, g_objCSPInformations, g_certEnrollLoadError
	' Used by apply_exp.jspf
	Function InitVistaCSP()
		On Error resume next
		Set g_objEnroll				= g_objClassFactory.CreateObject("X509Enrollment.CX509Enrollment")
		Set g_objPrivateKey			= g_objClassFactory.CreateObject("X509Enrollment.CX509PrivateKey")
		Set g_objRequest			= g_objClassFactory.CreateObject("X509Enrollment.CX509CertificateRequestPkcs10")
		Set g_objCSPInformations	= g_objClassFactory.CreateObject("X509Enrollment.CCspInformations")                 
		If 0<>Err.Number Then
			g_certEnrollLoadError = Err.Number
		Else
			g_certEnrollLoadError = 0
			g_objCSPInformations.AddAvailableCsps  
		End If
		On Error Goto 0
	End Function	'InitVistaCSP

	Function GetCertEnrollCSPList()
	    On Error Resume Next
	    Dim nDefaultCSP, nCSPIndex, CspInformations, CspInformation, oOption
		Set CspInformations = g_objCSPInformations
	    nDefaultCSP = -1
	    ' Add error message if no CSPs are found
	    If CspInformations.Count = 0 Then
		    Set oOption=document.createElement("Option")
		    oOption.text="N/A"
			document.CertReqForm.CspProvider.add(oOption)
        Else 
        	'Loop through all CspInformation objects
        	For nCSPIndex = 0 To CspInformations.Count-1
				Set CspInformation = CspInformations.ItemByIndex(nCSPIndex)
				If True = CspInformation.LegacyCsp Then	'Make sure that it's a Next Generation (CNG) provider
					Set oOption = document.createElement("Option")
					oOption.text = CspInformation.Name
					oOption.Value = CspInformation.Type
					document.CertReqForm.CspProvider.add(oOption)
					If InStr(CspInformation.Name, "Microsoft Enhanced Cryptographic Provider") <> 0 Then
						oOption.selected = True
						nDefaultCSP = nCSPIndex
					End If
					If InStr(CspInformation.Name, "Microsoft Base Cryptographic Provider") <> 0 Then
						If nDefaultCSP = -1 Then nDefaultCSP = nCSPIndex
					End If
       			End If
	        Next
	    End If ' if 0 == CspInformations.Count
	    If nDefaultCSP <> -1 Then
		    Document.CertReqForm.CspProvider.selectedIndex = nDefaultCSP
		Else
		    Document.CertReqForm.CspProvider.selectedIndex = 0	'Select first or N/A
	    End If
    End Function	'GetCertEnrollCSPList

	Function GetCSR()
		GetCSR = ""
		' Get provider name and type
		Dim ProviderName, ProviderType
		ProviderName = document.all.CspProvider.options(document.all.CspProvider.options.selectedIndex).text
		ProviderType = document.all.CspProvider.options(document.all.CspProvider.options.selectedIndex).value
		g_objPrivateKey.ProviderName = ProviderName
		g_objPrivateKey.ProviderType = ProviderType
		g_objPrivateKey.Length = document.CertReqForm.keysize.value
		If ProviderType < 2 Then
			g_objPrivateKey.KeySpec = 1	'AT_KEYEXCHANGE
		Else
			g_objPrivateKey.KeySpec = 2	'AT_SIGNATURE
		End If
		g_objPrivateKey.MachineContext = false
		g_objPrivateKey.KeyProtection = 1	' (XCN_NCRYPT_UI_PROTECT_KEY_FLAG = 1)
		g_objPrivateKey.ExportPolicy = 1	' (XCN_NCRYPT_ALLOW_EXPORT_FLAG = 1)
	    If Document.CertReqForm.enchancedeid.checked then
	    	If Document.CertReqForm.containername = "" Then
				g_objPrivateKey.ContainerName = "\Prime EID IP1 (basic PIN)\E"
			Else
				g_objPrivateKey.ContainerName = Document.CertReqForm.containername.value
			End If
			g_objPrivateKey.Existing = True
		Else
			g_objPrivateKey.Existing = False
		End if
		' Initialize
		Call g_objRequest.InitializeFromPrivateKey(1, g_objPrivateKey, "")	'X509CertificateEnrollmentContext.ContextUser
		Dim X500DistinguishedName
		Set X500DistinguishedName = g_objClassFactory.CreateObject("X509Enrollment.CX500DistinguishedName")
		Call X500DistinguishedName.Encode("CN=6AEK347fw8vWE424", 0)	'XCN_CERT_NAME_STR_NONE
		g_objRequest.Subject = X500DistinguishedName
		' Set hash algo
		Dim CspInformation, CspAlgorithms, CspAlgorithm, nBestIndex, nAlgIndex
		Set CspInformation = g_objCSPInformations.ItemByName(ProviderName)
		Set CspAlgorithms = CspInformation.CspAlgorithms
		nBestIndex = 0
		For nAlgIndex=0 To CspAlgorithms.Count-1
			If CspAlgorithms.ItemByIndex(nAlgIndex).Name = "sha1" Then
				nBestIndex = nAlgIndex
			End If
			If CspAlgorithms.ItemByIndex(nAlgIndex).Name = "md5" AND CspAlgorithms.ItemByIndex(nBestIndex).Name <> "sha1" Then
				nBestIndex = nAlgIndex
			End If
		Next
		Set CspAlgorithm = CspAlgorithms.ItemByIndex(nBestIndex)
		If CspAlgorithm.Type = 2 Then	'XCN_CRYPT_HASH_INTERFACE
			g_objRequest.HashAlgorithm = CspAlgorithm.GetAlgorithmOid(0, 0)	', AlgorithmFlagsNone
		End if
		' Try to create request
		g_objEnroll.InitializeFromRequest(g_objRequest)
		GetCSR = g_objEnroll.CreateRequest(3)	'CRYPT_STRING_BASE64REQUESTHEADER
		if len(GetCSR)<>0 then Exit Function
	End Function	'GetCSR

	Function IsCSPInstalled(sCSPName)
		on error resume next
		Dim objCSPInformations
		Set objCSPInformations	= g_objClassFactory.CreateObject("X509Enrollment.CCspInformations")                 
		If Err.Number=0 Then
			objCSPInformations.AddAvailableCsps  
		End If
		IsCSPInstalled = IsObject(objCSPInformations.ItemByName(sCSPName))
	End Function	'IsCSPInstalled

	Function ControlExists(objectID)
		On Error Resume Next
		ControlExists = IsObject(CreateObject(objectID))
	End Function

	Dim useold
	useold=false   
	Function GetProviderList()
	   Dim CspList, cspIndex, ProviderName
	   On Error Resume Next
	   count = 0
	   base = -1
	   enhanced = 0
	   CspList = ""
	   ProviderName = ""
	
	   For ProvType = 0 to 13
	      cspIndex = 0
	      newencoder.ProviderType = ProvType
	      ProviderName = newencoder.enumProviders(cspIndex,0)
	
	      while ProviderName <> ""
	         Set oOption = document.createElement("OPTION")
	         oOption.text = ProviderName
	         oOption.value = ProvType
	         Document.CertReqForm.CspProvider.add(oOption)
	         if ProviderName = "Microsoft Base Cryptographic Provider v1.0" Then
	            base = count
	         end if
	         if ProviderName = "Microsoft Enhanced Cryptographic Provider v1.0" Then
	            enhanced = count
	         end if
	         cspIndex = cspIndex +1
	         ProviderName = ""
	         ProviderName = newencoder.enumProviders(cspIndex,0)
	         count = count + 1
	      wend
	   Next
	   If base = -1 Then
	     useold=true
	     Document.CertReqForm.classid.value="clsid:43F8F289-7A20-11D0-8F06-00C04FC295E1"
	     count = 0
	     enhanced = 0
	     basename = ""
	     enhancedname = ""
	     CspList = ""
	     ProviderName = ""
	
	     For ProvType = 0 to 13
	         cspIndex = 0
	         oldencoder.ProviderType = ProvType
	         ProviderName = oldencoder.enumProviders(cspIndex,0)
	
	        while ProviderName <> ""
	           Set oOption = document.createElement("OPTION")
	           oOption.text = ProviderName
	           oOption.value = ProvType
	           Document.CertReqForm.CspProvider.add(oOption)
	           if ProviderName = "Microsoft Base Cryptographic Provider v1.0" Then
	            base = count
	           end if
	           if ProviderName = "Microsoft Enhanced Cryptographic Provider v1.0" Then
	            enhanced = count
	           end if
	           cspIndex = cspIndex +1
	           ProviderName = ""
	           ProviderName = oldencoder.enumProviders(cspIndex,0)
	           count = count + 1
	        wend
	     Next
	   End If 
	   Document.CertReqForm.CspProvider.selectedIndex = base
	   if enhanced then
	      Document.CertReqForm.CspProvider.selectedIndex = enhanced
	   end if
   End Function

   Function NewCSR(keyflags)
      NewCSR = ""
      szName          = "CN=6AEK347fw8vWE424"
       newencoder.reset  
       newencoder.HashAlgorithm = "MD5"
       err.clear
       On Error Resume Next
       set options = document.all.CspProvider.options
       index = options.selectedIndex
       newencoder.providerName = options(index).text
       tmpProviderType = options(index).value
       newencoder.providerType = tmpProviderType
       if Document.CertReqForm.enchancedeid.checked then      
         newencoder.ContainerName = "\Prime EID IP1 (basic PIN)\E"
       end if
       newencoder.KeySpec = 2
       if tmpProviderType < 2 Then
          newencoder.KeySpec = 1
       end if
       
       keysize = document.CertReqForm.keysize.value
       keymask = keysize * 65536
       
       newencoder.GenKeyFlags = (keymask + 1) OR keyflags
 
       NewCSR = newencoder.createPKCS10(szName, "")
       if len(NewCSR)<>0 then Exit Function
       newencoder.GenKeyFlags = keymask OR keyflags
       NewCSR = newencoder.createPKCS10(szName, "")
       if len(NewCSR)<>0 then Exit Function
       if newencoder.providerName = "Microsoft Enhanced Cryptographic Provider v1.0" Then
          if MsgBox("1024-bit key generation failed. Would you like to try 512 instead?", vbOkCancel)=vbOk Then
             newencoder.providerName = "Microsoft Base Cryptographic Provider v1.0"
          else
             Exit Function
          end if
       end if
       newencoder.GenKeyFlags = 1 OR keyflags
       NewCSR = newencoder.createPKCS10(szName, "")
       if len(NewCSR)<>0 then Exit Function
       newencoder.GenKeyFlags = keyflags
       NewCSR = newencoder.createPKCS10(szName, "")
       if len(NewCSR)<>0 then Exit Function
       newencoder.GenKeyFlags = 0
       NewCSR = newencoder.createPKCS10(szName, "")
    End Function

   Function OldCSR(keyflags)
      OldCSR = ""
      szName          = "CN=6AEK347fw8vWE424"
       oldencoder.reset
       oldencoder.HashAlgorithm = "MD5"
       err.clear
       On Error Resume Next
       set options = document.all.CspProvider.options
       index = options.selectedIndex
       oldencoder.providerName = options(index).text
       tmpProviderType = options(index).value
       oldencoder.providerType = tmpProviderType
       if Document.CertReqForm.enchancedeid.checked then         
         oldencoder.ContainerName = "\Prime EID IP1 (basic PIN)\E"
       end if
       oldencoder.KeySpec = 2
       if tmpProviderType < 2 Then
          oldencoder.KeySpec = 1
       end if
       keysize = document.CertReqForm.keysize.value
       keymask = keysize * 65536
       oldencoder.GenKeyFlags = (keymask + 1) OR keyflags
       OldCSR = oldencoder.createPKCS10(szName, "")
       if len(OldCSR)<>0 then Exit Function
       oldencoder.GenKeyFlags = keymask OR keyflags
       OldCSR = oldencoder.createPKCS10(szName, "")
       if len(OldCSR)<>0 then Exit Function
       if oldencoder.providerName = "Microsoft Enhanced Cryptographic Provider v1.0" Then
          if MsgBox("1024-bit key generation failed. Would you like to try 512 instead?", vbOkCancel)=vbOk Then
             oldencoder.providerName = "Microsoft Base Cryptographic Provider v1.0"
          else
             Exit Function
          end if
       end if
       oldencoder.GenKeyFlags = 1 OR keyflags
       OldCSR = oldencoder.createPKCS10(szName, "")
       if len(OldCSR)<>0 then Exit Function
       oldencoder.GenKeyFlags = keyflags
       OldCSR = oldencoder.createPKCS10(szName, "")
       if len(OldCSR)<>0 then Exit Function
       oldencoder.GenKeyFlags = 0
       OldCSR = oldencoder.createPKCS10(szName, "")
    End Function

	' Used by both post and pre Vista code	
	Sub GenReq_OnClick
		Dim TheForm, result
		Set TheForm = Document.CertReqForm
		err.clear
		If InStr(Navigator.UserAgent, "Windows NT 6") <> 0 Then
			If g_certEnrollLoadError <> 0 Then
				Call MsgBox("Could not load CertEnroll.", 0, "Alert")
				Exit Sub
			End if
			result = GetCSR()
		Else
			If useold Then
				result = OldCSR(2)
			Else
				result = NewCSR(2)
			End If
		End If
		if len(result)=0 Then
			result = MsgBox("Unable to generate PKCS#10 certificate request.", 0, "Alert")
			Exit Sub
		End If
		TheForm.pkcs10.Value = result
		TheForm.Submit
		Exit Sub
	End Sub	'GenReq_OnClick
-->      
</SCRIPT>

<script type="text/javascript">
<!--
	var plugin;
    function selectKey() {
       if ( plugin ) {
          var doTryNext = true;
          for ( i=0; doTryNext; i++ ) {
             sKey = document.iID.EnumProperty('Key',i);
             doTryNext = sKey!="";
             if ( doTryNext ) {
                aKey = sKey.split(";");
            if ( parseInt(aKey[2],16)<0x47 )
                   document.writeln("<option value=\""+sKey+"\">Slot: "+aKey[0]+". Key label: "+aKey[3]+". Key type: "+aKey[4]+". Key size: "+aKey[6]+".</option>");
             }
          }
       }
    }

    function generate_pkcs10() {
       if ( plugin ) {
          document.iID.SetProperty('Base64', 'true');
          document.iID.SetProperty('URLEncode', 'false');
          document.iID.SetProperty('Subject', "2.5.4.5=197205250777");
          aKey = document.netIdForm.tokenKey.value.split(";");
          document.iID.SetProperty('KeyId', aKey[2]); 
          document.iID.SetProperty('ActiveSlot', aKey[0]); 
          rv = document.iID.Invoke('CreateRequest');
          if (rv == 0) {
             document.netIdForm.iidPkcs10.value = document.iID.GetProperty("Request");
             document.netIdForm.submit();
          } else
             alert("Error when fetching certificate request from NetID: "+rv+". Slot: "+aKey[0]+". KeyId: "+aKey[2]+".");
       }
    }

	function show_NetID_form(username, password) {
        if (plugin) {
            document.writeln("<p>Since you have NetID installed you may download a certificate for a ");
            document.writeln("key on your smart card.</p>");
            document.writeln("<form name=\"netIdForm\" action=\"certreq\" enctype=\"x-www-form-encoded\" method=\"post\">");
            document.writeln("  <fieldset>");
            document.writeln("    <legend>Key length</legend>");
            document.writeln("    <input name=\"user\" type=\"hidden\" value=\""+username+"\" />");
            document.writeln("    <input name=\"password\" type=\"hidden\" value=\""+password+"\" />");
            document.writeln("    <input name=\"iidPkcs10\" type=\"hidden\" />");
            if (navigator.appName.indexOf("Explorer") != -1 && navigator.userAgent.indexOf("Windows NT 6") != -1 ) {
				document.writeln("    <input name=\"classid\" type=\"hidden\" value=\"clsid:884e2049-217d-11da-b2a4-000e7bbb2b09\" />");
			}
            document.writeln("    <label for=\"tokenkey\">Please select key:</label> ");
            document.writeln("    <select name=\"tokenKey\" accesskey=\"p\">");
            selectKey();
            document.writeln("    </select>");
            document.writeln("    <label for=\"dummy\"></label>");
            document.writeln("    <input type=\"button\" value=\"Fetch Certificate\" onclick=\"generate_pkcs10()\" />");
            document.writeln("  </fieldset>");
            document.writeln("</form>");
        } else {
            document.writeln("<p>NetID not installed.</p>");
        }
    }

	function useNetiD() {
		if ( navigator.userAgent.indexOf("Windows NT 6") == -1 ) {
			plugin = ControlExists("IID.iIDCtl");
		} else {
			plugin = IsCSPInstalled("Net iD - CSP");
		}
		if (plugin) {
			document.writeln("<object name=\"iID\" classid=\"CLSID:5BF56AD2-E297-416E-BC49-00B327C4426E\" width=\"0\" height=\"0\"></object>");
		} else {
			document.writeln("The CryptoAPI component is not installed.");
		}
	}
	
	useNetiD();
-->
</script>

</HEAD>
<BODY bgcolor="#ffffff" link="black" vlink="black" alink="black">
<center>
  <strong class="titel"><span class="E">E</span><span class="J">J</span><span class="B">B</span><span class="C">C</span><span class="A">A</span> 
  IE Certificate Enrollment </strong> 
</center>

<HR>
Welcome to certificate enrollment. <BR>
<p>
	<script type="text/javascript">
	<!--
	    if ( navigator.userAgent.indexOf("Windows NT 6") == -1 ) {
			document.writeln(	"If you want to, you can manually install the CA certificate(s) in your browser. "+
								"Otherwise, this will be done automatically when your certificate is retrieved.");
		}
	-->
	</script>
</p>
<P>Install CA certificates:

<%
try  {
    InitialContext ctx = new InitialContext();
    ISignSessionHome home = home = (ISignSessionHome) PortableRemoteObject.narrow(
            ctx.lookup("RSASignSession"), ISignSessionHome.class );
    ISignSessionRemote ss = home.create();
    Collection chain = ss.getCertificateChain(new Admin(Admin.TYPE_PUBLIC_WEB_USER, request.getRemoteAddr()), caid);
    if (chain.size() == 0) {
        out.println("No CA certificates exist");
    } else {
		out.println("<li><a href=\"../certdist?cmd=iecacert&level="+(chain.size()-1)+"&caid="+caid+"\">Root CA</a></li>");
		if (chain.size() > 1) {
			for (int i=chain.size()-2;i>=0;i--) {
                out.println("<li><a href=\"../webdist/certdist?cmd=iecacert&level="+i+"&caid="+caid+"\">CA</a></li>");
            }
        }
    }
} catch(Exception ex) {
    ex.printStackTrace();
}                                             
%>
<HR>
<script type="text/javascript">
<!--
	show_NetID_form("<%=username %>", "<%=password %>");
-->
</script>
<hr />

<%/* Is this code still in use? */%>
<FORM NAME="patched" ACTION="<%=THIS_FILENAME%>"  METHOD=POST>
        <INPUT NAME='<%= ACTION %>' TYPE="hidden" VALUE='<%=ACTION_GENERATETOKEN %>'> 
        <INPUT NAME="<%=HIDDEN_BROWSER%>" TYPE="hidden" VALUE="<%= browser %>">
	<INPUT NAME="<%=TEXTFIELD_USERNAME %>"  TYPE="hidden" VALUE="<%=username%>">
	<INPUT NAME="<%=TEXTFIELD_PASSWORD %>" TYPE="hidden"  VALUE="<%=password%>">
</FORM>


<FORM NAME="CertReqForm" ACTION="certreq" ENCTYPE=x-www-form-encoded METHOD=POST>
 
 <b>NOTE!</b>
 	<script type="text/javascript">
	<!--
	    if ( navigator.userAgent.indexOf("Windows NT 6") != -1 ) {
			document.writeln(	"If not instructed otherwise by your local administrator:<br />"+
								"<li>Install &quot;Root CA&quot; certificate in &quot;Trusted Root Certificate Authorities&quot;-storage.</li>"+
								"<li>Make sure IE is allowed to run the CertEnroll addon.</li>"+
								"<li>Add this site to the list of Trusted Sites.</li>"+
								"<li>Set &quot;Initialize and script ActiveX controls not marked as safe for scripting&quot; to &quot;Prompt&quot;.</li>");
		} else {
			document.writeln(	"If you do not get a list of CSPs in the list below, you may have to upgrade Internet Explorer <br />"+
								"with the new certificate enrollment control (see Microsoft support issue Q323172). Try performing  <br />"+
								"a &quot;Windows Update&quot;. <br />");
		}
	-->
	</script>
<hr>
<!-- Please give your username and password, then click OK to fetch your certificate.<BR>-->

	<INPUT NAME=user TYPE="hidden" VALUE="<%=username%>">
	<INPUT NAME=password TYPE="hidden"  VALUE="<%=password%>">
	<INPUT NAME=classid TYPE="hidden"  VALUE="">

    <P>Please choose the CSP you wish to use from the list below (the default is probably good):</P>
    <SELECT NAME="CspProvider">
    </SELECT></P>

    <P>Select your prefered keysize:
    <select name=keysize>
      <option value="512">512</option>
      <option value="1024" SELECTED>1024</option>
      <option value="2048">2048</option>
    </select>
    </P>   

    <P>Check if you are adding a certificate to an Enhanced eID card: 
       <INPUT TYPE="checkbox" NAME="enchancedeid" VALUE="true"> 
    </P> 
    <INPUT TYPE="hidden" NAME="pkcs10" VALUE="">
    <input name="containername" type="hidden" value="" />

<INPUT type="button" value="OK" name="GenReq">

</FORM>

<script type="text/vbscript" defer="true">
<!--
	If InStr(Navigator.UserAgent, "Windows NT 6") <> 0 Then
		Call InitVistaCSP()
		Call GetCertEnrollCSPList()
		Document.CertReqForm.classid.value = "clsid:884e2049-217d-11da-b2a4-000e7bbb2b09"
	Else
		GetProviderList()
	End If
-->
</script>

</BODY>
</HTML>

