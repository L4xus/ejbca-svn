<?xml version = '1.0' encoding = 'ISO-8859-1'?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app>
    <display-name>CA status information</display-name>
    <servlet>
        <servlet-name>OCSPServlet</servlet-name>
        <display-name>OCSPServlet</display-name>
        <servlet-class>se.anatom.ejbca.protocol.OCSPServlet</servlet-class>
        <init-param>
            <param-name>SignatureAlgorithm</param-name>
            <param-value>SHA1WithRSA</param-value>
            <description>Algorithm used by server to generate signature on OCSP responses</description>
        </init-param>
        <init-param>
            <param-name>enforceRequestSigning</param-name>
            <param-value>false</param-value>
            <description>
                If set to true the servlet will enforce OCSP request signing.
            </description>
        </init-param>
        <init-param>
            <param-name>useCASigningCert</param-name>
            <param-value>true</param-value>
            <description>
                If set to true the OCSP reponses will be signed directly by the CAs certificate
                instead of the CAs OCSP responder.
            </description>
        </init-param>
        <init-param>
            <param-name>includeCertChain</param-name>
            <param-value>true</param-value>
            <description>
                If set to true the certificate chain will be returned with the OCSP response.
            </description>
        </init-param>
        <init-param>
            <param-name>defaultResponderID</param-name>
            <param-value>CN=TestCA,O=AnaTom,C=SE</param-value>
            <description>
                Specifies the subject of a certificate which is used to
                identifiy the responder which will generate responses when no
                real CA can be found from the request. This is used to generate 
                'unknown' responses when a request is received for a certificate 
                that is not signed by any CA on this server.
            </description>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>OCSPServlet</servlet-name>
        <url-pattern>/ocsp</url-pattern>
    </servlet-mapping>

  <ejb-local-ref>
    <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
    <ejb-ref-type>Session</ejb-ref-type>
    <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
    <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
    <ejb-link>CertificateStoreSession</ejb-link>
  </ejb-local-ref>
  <ejb-local-ref>
    <ejb-ref-name>ejb/CAAdminSessionLocal</ejb-ref-name>
    <ejb-ref-type>Session</ejb-ref-type>
    <local-home>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocalHome</local-home>
    <local>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocalHome</local>
    <ejb-link>CAAdminSession</ejb-link>
  </ejb-local-ref>
  <ejb-local-ref>
    <ejb-ref-name>ejb/SignSessionLocal</ejb-ref-name>
    <ejb-ref-type>Session</ejb-ref-type>
    <local-home>se.anatom.ejbca.ca.sign.ISignSessionLocalHome</local-home>
    <local>se.anatom.ejbca.ca.sign.ISignSessionLocal</local>
    <ejb-link>RSASignSession</ejb-link>
  </ejb-local-ref>
    
</web-app>