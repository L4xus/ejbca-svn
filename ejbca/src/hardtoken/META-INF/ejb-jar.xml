<?xml version="1.0"?>
<!DOCTYPE ejb-jar PUBLIC
	"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
	"http://java.sun.com/dtd/ejb-jar_2_0.dtd">
<ejb-jar>

 <description></description>
 <display-name>Hard Token Component</display-name>

 <enterprise-beans>
    <session>
     <description>
         Session bean handling hard token data, both about hard tokens and hard token issuers.
     </description>
     <ejb-name>HardTokenSession</ejb-name>
     <home>se.anatom.ejbca.hardtoken.IHardTokenSessionHome</home>
     <remote>se.anatom.ejbca.hardtoken.IHardTokenSessionRemote</remote>
     <local-home>se.anatom.ejbca.hardtoken.IHardTokenSessionLocalHome</local-home>
     <local>se.anatom.ejbca.hardtoken.IHardTokenSessionLocal</local>     
     <ejb-class>se.anatom.ejbca.hardtoken.LocalHardTokenSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>

     <!-- Env-entries for defining to the system available hard tokens. -->
     <env-entry>
        <description>String representing the names of the available hard tokens. The different names should be separated with semicolons (;).</description>
        <env-entry-name>hardTokenNames</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>EID Card</env-entry-value>
     </env-entry>
     <env-entry>
        <description>String representing the ids of the available hard tokens. The different ids should be separated with semicolons (;).</description>
        <env-entry-name>hardTokenIds</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>102</env-entry-value>
     </env-entry>          
     <env-entry>
        <description>String representing the classes of the available hard tokens. The different classes should be separated with semicolons (;).</description>
        <env-entry-name>hardTokenClasses</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>se.anatom.ejbca.hardtoken.hardtokenstypes.EIDHardToken</env-entry-value>
     </env-entry>

     <ejb-local-ref>
        <description>The hard token issuers data entity bean</description>
        <ejb-ref-name>ejb/HardTokenIssuerData</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.hardtoken.HardTokenIssuerDataLocalHome</local-home>
        <local>se.anatom.ejbca.hardtoken.HardTokenIssuerDataLocal</local>
        <ejb-link>HardTokenIssuerData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The hard token data entity bean</description>
        <ejb-ref-name>ejb/HardTokenData</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.hardtoken.HardTokenDataLocalHome</local-home>
        <local>se.anatom.ejbca.hardtoken.HardTokenDataLocal</local>
        <ejb-link>HardTokenData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The hard token to certificate map data entity bean</description>
        <ejb-ref-name>ejb/HardTokenCertificateMap</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.hardtoken.HardTokenCertificateMapLocalHome</local-home>
        <local>se.anatom.ejbca.hardtoken.HardTokenCertificateMapLocal</local>
        <ejb-link>HardTokenCertificateMap</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Authorization session bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref> 
     <ejb-local-ref>
        <description>The Certificate Store session bean</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>                    
     <ejb-local-ref>
        <description>The log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>    

   </session> 
   
   <session>
     <description>
         Session bean handling userdata queue for hard token issuers.
     </description>
     <ejb-name>HardTokenBatchJobSession</ejb-name>
     <home>se.anatom.ejbca.hardtoken.IHardTokenBatchJobSessionHome</home>
     <remote>se.anatom.ejbca.hardtoken.IHardTokenBatchJobSessionRemote</remote>
     <local-home>se.anatom.ejbca.hardtoken.IHardTokenBatchJobSessionLocalHome</local-home>
     <local>se.anatom.ejbca.hardtoken.IHardTokenBatchJobSessionLocal</local>     
     <ejb-class>se.anatom.ejbca.hardtoken.LocalEjbcaHardTokenBatchJobSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     <ejb-local-ref>
        <description>The User entity bean</description>
        <ejb-ref-name>ejb/UserDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.UserDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.UserDataLocal</local>
        <ejb-link>UserData</ejb-link>
     </ejb-local-ref>       
   <!--  <ejb-local-ref>
        <description>The hard token session bean</description>
        <ejb-ref-name>ejb/HardTokenSession</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.hardtoken.IHardTokenSessionLocalHome</local-home>
        <local>se.anatom.ejbca.hardtoken.IHardTokenSessionLocal</local>
        <ejb-link>HardTokenSession</ejb-link>
     </ejb-local-ref>   -->        

     <ejb-local-ref>
        <description>The log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>  
   </session>   

   <entity>
      <description>
            This enterprise bean entity represents a hard token issuer with accompanying data.
      </description>
      <ejb-name>HardTokenIssuerData</ejb-name>
      <local-home>se.anatom.ejbca.hardtoken.HardTokenIssuerDataLocalHome</local-home>
      <local>se.anatom.ejbca.hardtoken.HardTokenIssuerDataLocal</local>
      <ejb-class>se.anatom.ejbca.hardtoken.HardTokenIssuerDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>HardTokenIssuerDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>
      <cmp-field><field-name>alias</field-name></cmp-field>
      <cmp-field><field-name>certificateSN</field-name></cmp-field>
      <cmp-field><field-name>certIssuerDN</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>id</primkey-field>
      
      <query>
      	<query-method>
      	  <method-name>findByAlias</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from HardTokenIssuerDataBean a WHERE a.alias=?1]]>
	</ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findByCertificateSN</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	    <method-param>java.lang.String</method-param>            
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from HardTokenIssuerDataBean a WHERE a.certificateSN=?1 AND a.certIssuerDN=?2]]>
	</ejb-ql>
      </query>    
   </entity>

   <entity>
      <description>
            This enterprise bean entity represents a hard token with accompanying data.
      </description>
      <ejb-name>HardTokenData</ejb-name>
      <local-home>se.anatom.ejbca.hardtoken.HardTokenDataLocalHome</local-home>
      <local>se.anatom.ejbca.hardtoken.HardTokenDataLocal</local>
      <ejb-class>se.anatom.ejbca.hardtoken.HardTokenDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>HardTokenDataBean</abstract-schema-name>
      <cmp-field><field-name>tokenSN</field-name></cmp-field>
      <cmp-field><field-name>username</field-name></cmp-field>
      <cmp-field><field-name>cTime</field-name></cmp-field>
      <cmp-field><field-name>mTime</field-name></cmp-field>
      <cmp-field><field-name>tokenType</field-name></cmp-field>      
      <cmp-field><field-name>significantIssuerDN</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>tokenSN</primkey-field>
      
      <query>
      	<query-method>
      	  <method-name>findByUsername</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from HardTokenDataBean a WHERE a.username=?1]]>
	</ejb-ql>
      </query>
   </entity> 
   
   <entity>
      <description>
            This enterprise bean entity represents a hard token to certificate mappings.
      </description>
      <ejb-name>HardTokenCertificateMap</ejb-name>
      <local-home>se.anatom.ejbca.hardtoken.HardTokenCertificateMapLocalHome</local-home>
      <local>se.anatom.ejbca.hardtoken.HardTokenCertificateMapLocal</local>
      <ejb-class>se.anatom.ejbca.hardtoken.HardTokenCertificateMapBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>HardTokenCertificateMapBean</abstract-schema-name>
      <cmp-field><field-name>certificateFingerprint</field-name></cmp-field>
      <cmp-field><field-name>tokenSN</field-name></cmp-field>      
      <primkey-field>certificateFingerprint</primkey-field>
      
      <query>
      	<query-method>
      	  <method-name>findByTokenSN</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from HardTokenCertificateMapBean a WHERE a.tokenSN=?1]]>
	</ejb-ql>
      </query>
   </entity>     
  </enterprise-beans>


  <assembly-descriptor>
   <security-role>
      <description>
         This role represents everyone
      </description>
     <role-name>everyone</role-name>
   </security-role>
   <security-role>
      <description>
         This role represents an internal process
      </description>
      <role-name>InternalUser</role-name>
    </security-role>

   <!--
       Method permissions define who can access a given method on a bean.
       Role name internalUser means that the bean methods should NOT be
       accessible from the outside.
       Role name everyone means that the bean methods can be accessible from
       the outside.
       NOTE! Security must be enabled in the container for these settings
       to have any real meaning.
   -->
   <method-permission>
     <role-name>InternalUser</role-name>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>*</method-name>
     </method> 
     <method>
         <ejb-name>HardTokenBatchJobSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>HardTokenIssuerData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>HardTokenData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>HardTokenCertificateMap</ejb-name>
         <method-name>*</method-name>
     </method>          
   </method-permission>

   <!--
       Transaction settings. Default setting i for *, which is overridden
       for methods with special transactional needs.
       Required is used for mission critical methods, which cannot collide.
       Supports is used for methods which only read data.
   -->
    <container-transaction>
    <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>*</method-name>
     </method>  
     <method>
         <ejb-name>HardTokenBatchJobSession</ejb-name>
         <method-name>*</method-name>
     </method>

     <trans-attribute>Supports</trans-attribute>
   </container-transaction>

   <container-transaction>
      <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>addHardTokenIssuer</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>changeHardTokenIssuer</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>cloneHardTokenIssuer</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>removeHardTokenIssuer</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>renameHardTokenIssuer</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>addHardToken</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>changeHardToken</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>removeHardToken</method-name>
     </method>
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>addHardTokenCertificateMapping</method-name>
     </method> 
     <method>
         <ejb-name>HardTokenSession</ejb-name>
         <method-name>removeHardTokenCertificateMapping</method-name>
     </method>                                        

     <trans-attribute>Required</trans-attribute>
   </container-transaction>

 </assembly-descriptor>
</ejb-jar>

