package org.ejbca.core.model.log;

import java.io.Serializable;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.ejbca.core.model.InternalResources;
import org.ejbca.core.model.services.ActionException;
import org.ejbca.core.model.services.actions.MailAction;
import org.ejbca.core.model.services.actions.MailActionInfo;

/**
 * Send an email based on configuration.
 */
public class ProtectedLogMailAction implements IProtectedLogAction, Serializable {

	private static final long serialVersionUID = -7056505975194222539L;

	/** Internal localization of logs and errors */
    private static final InternalResources intres = InternalResources.getInstance();
    
    private static final Logger log = Logger.getLogger(ProtectedLogScriptAction.class);

	private static final String MAILACTION_ERROR_FAILED				= "protectedlog.mafailed";
	private static final String MAILACTION_ERROR_CAUSE				= "protectedlog.macause";

	public static final String CONF_EMAILADDRESSES	= "mailAction.emailAddresses";
	public static final String CONF_EMAILSUBJECT			= "mailAction.subject";
	public static final String CONF_EMAILBODY				= "mailAction.body";
	public static final String CONF_EMAILSENDER			= "mailAction.senderAddress";
	
	private String[] emailAddresses = null;
	private String emailSubject = null;
	private String emailBody = null;
	private MailAction mailAction = null;
	
	public ProtectedLogMailAction(Properties properties) {
		String emailAddressesString = properties.getProperty(CONF_EMAILADDRESSES);
		if (emailAddressesString != null && !emailAddressesString.equals("")) {
			emailAddresses = emailAddressesString.split(";");
		} else {
			emailAddresses = new String[0];
		}
		emailSubject = properties.getProperty(CONF_EMAILSUBJECT, "Possible log tampering detected");
		emailBody = properties.getProperty(CONF_EMAILBODY, "This mail was auto-generated by EJBCA.");
		mailAction = new MailAction();
		Properties mailActionProperties = new Properties();
		mailActionProperties.setProperty(MailAction.PROP_SENDERADDRESS, properties.getProperty(CONF_EMAILSENDER, "no-reply@company.com"));
		mailAction.init(mailActionProperties, null);
	}

	/**
	 * @see org.ejbca.core.model.log.IProtectedLogAction
	 */
	public void action(String causeIdentifier) {
		log.debug(">action " + causeIdentifier + " " + emailAddresses.length);
		String emailMessage = emailBody + "\n\n" + intres.getLocalizedMessage(MAILACTION_ERROR_CAUSE, causeIdentifier) + " " + intres.getLocalizedMessage(causeIdentifier);
		for (int i=0; i<emailAddresses.length; i++) {
			try {
				MailActionInfo mailActionInfo = new MailActionInfo(emailAddresses[i], emailSubject, emailMessage);
				mailActionInfo.setLoggingEnabled(false);	// Required to avoid transaction deadlock
				mailAction.performAction(mailActionInfo);
			} catch (ActionException e) {
				log.error(intres.getLocalizedMessage(MAILACTION_ERROR_FAILED));
			}
		}
	}
}
