/*
 * Generated by XDoclet - Do not edit!
 */
package se.anatom.ejbca.ca.auth;

/**
 * Local interface for AuthenticationSession.
 */
public interface IAuthenticationSessionLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Authenticates a user to the user database and returns the user DN.
    * @param username unique username within the instance
    * @param password password for the user
    * @return UserAuthData, never returns null
    * @throws ObjectNotFoundException if the user does not exist.
    * @throws AuthStatusException If the users status is incorrect.
    * @throws AuthLoginException If the password is incorrect.
    */
   public se.anatom.ejbca.ca.auth.UserAuthData authenticateUser( se.anatom.ejbca.log.Admin admin,java.lang.String username,java.lang.String password ) throws javax.ejb.ObjectNotFoundException, se.anatom.ejbca.ca.exception.AuthStatusException, se.anatom.ejbca.ca.exception.AuthLoginException;

   /**
    * Set the status of a user to finished, called when a user has been successfully processed. If possible sets users status to UserData.STATUS_GENERATED, which means that the user cannot be authenticated anymore. NOTE: May not have any effect of user database is remote.
    * @param username unique username within the instance
    * @param password password for the user
    * @throws ObjectNotFoundException if the user does not exist.
    */
   public void finishUser( se.anatom.ejbca.log.Admin admin,java.lang.String username,java.lang.String password ) throws javax.ejb.ObjectNotFoundException;

}
