/*
 * Generated by XDoclet - Do not edit!
 */
package se.anatom.ejbca.ca.caadmin;

/**
 * Local interface for CAAdminSession.
 */
public interface ICAAdminSessionLocal
   extends javax.ejb.EJBLocalObject
{

   public void createCA( se.anatom.ejbca.log.Admin admin,se.anatom.ejbca.ca.caadmin.CAInfo cainfo ) throws se.anatom.ejbca.ca.exception.CAExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException, se.anatom.ejbca.ca.exception.CATokenOfflineException, se.anatom.ejbca.ca.exception.CATokenAuthenticationFailedException;

   public void editCA( se.anatom.ejbca.log.Admin admin,se.anatom.ejbca.ca.caadmin.CAInfo cainfo ) throws se.anatom.ejbca.authorization.AuthorizationDeniedException;

   public void removeCA( se.anatom.ejbca.log.Admin admin,int caid ) throws se.anatom.ejbca.authorization.AuthorizationDeniedException;

   public void renameCA( se.anatom.ejbca.log.Admin admin,java.lang.String oldname,java.lang.String newname ) throws se.anatom.ejbca.ca.exception.CAExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException;

   public se.anatom.ejbca.ca.caadmin.CAInfo getCAInfo( se.anatom.ejbca.log.Admin admin,java.lang.String name ) ;

   public se.anatom.ejbca.ca.caadmin.CAInfo getCAInfo( se.anatom.ejbca.log.Admin admin,int caid ) ;

   public java.util.HashMap getCAIdToNameMap( se.anatom.ejbca.log.Admin admin ) ;

   /**
    * Method returning id's of all CA's avaible to the system. i.e. not have status "external" or "waiting for certificate response"
    * @return a Collection (Integer) of available CA id's
    */
   public java.util.Collection getAvailableCAs( se.anatom.ejbca.log.Admin admin ) ;

   public se.anatom.ejbca.protocol.IRequestMessage makeRequest( se.anatom.ejbca.log.Admin admin,int caid,java.util.Collection cachain,boolean setstatustowaiting ) throws se.anatom.ejbca.ca.exception.CADoesntExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException, java.security.cert.CertPathValidatorException, se.anatom.ejbca.ca.exception.CATokenOfflineException;

   public void receiveResponse( se.anatom.ejbca.log.Admin admin,int caid,se.anatom.ejbca.protocol.IResponseMessage responsemessage ) throws se.anatom.ejbca.ca.exception.CADoesntExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException, java.security.cert.CertPathValidatorException, se.anatom.ejbca.ca.exception.CATokenOfflineException;

   public se.anatom.ejbca.protocol.IResponseMessage processRequest( se.anatom.ejbca.log.Admin admin,se.anatom.ejbca.ca.caadmin.CAInfo cainfo,se.anatom.ejbca.protocol.IRequestMessage requestmessage ) throws se.anatom.ejbca.ca.exception.CAExistsException, se.anatom.ejbca.ca.exception.CADoesntExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException, se.anatom.ejbca.ca.exception.CATokenOfflineException;

   public void renewCA( se.anatom.ejbca.log.Admin admin,int caid,se.anatom.ejbca.protocol.IResponseMessage responsemessage ) throws se.anatom.ejbca.ca.exception.CADoesntExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException, java.security.cert.CertPathValidatorException, se.anatom.ejbca.ca.exception.CATokenOfflineException;

   public void revokeCA( se.anatom.ejbca.log.Admin admin,int caid,int reason ) throws se.anatom.ejbca.ca.exception.CADoesntExistsException, se.anatom.ejbca.authorization.AuthorizationDeniedException;

   public void upgradeFromOldCAKeyStore( se.anatom.ejbca.log.Admin admin,java.lang.String caname,byte[] p12file,char[] keystorepass,char[] privkeypass,java.lang.String privatekeyalias ) ;

   public java.util.Collection getAllCACertificates( se.anatom.ejbca.log.Admin admin ) ;

   public void activateCAToken( se.anatom.ejbca.log.Admin admin,int caid,java.lang.String authorizationcode ) throws se.anatom.ejbca.authorization.AuthorizationDeniedException, se.anatom.ejbca.ca.exception.CATokenAuthenticationFailedException, se.anatom.ejbca.ca.exception.CATokenOfflineException;

   public void deactivateCAToken( se.anatom.ejbca.log.Admin admin,int caid ) throws se.anatom.ejbca.authorization.AuthorizationDeniedException, se.anatom.ejbca.exception.EjbcaException;

   public boolean exitsCertificateProfileInCAs( se.anatom.ejbca.log.Admin admin,int certificateprofileid ) ;

   public boolean exitsPublisherInCAs( se.anatom.ejbca.log.Admin admin,int publisherid ) ;

}
