/*
 * Generated by XDoclet - Do not edit!
 */
package se.anatom.ejbca.log;

/**
 * Remote interface for LogSession.
 */
public interface ILogSessionRemote
   extends javax.ejb.EJBObject
{
   /**
    * Session beans main function. Takes care of the logging functionality.
    * @param admin the administrator performing the event.
    * @param time the time the event occured.
    * @param username the name of the user involved or null if no user is involved.
    * @param certificate the certificate involved in the event or null if no certificate is involved.
    * @param event id of the event, should be one of the se.anatom.ejbca.log.LogEntry.EVENT_ constants.
    * @param comment comment of the event.
    */
   public void log( se.anatom.ejbca.log.Admin admin,int caid,int module,java.util.Date time,java.lang.String username,java.security.cert.X509Certificate certificate,int event,java.lang.String comment )
      throws java.rmi.RemoteException;

   /**
    * Same as above but with the difference of CAid which is taken from the issuerdn of given certificate.
    */
   public void log( se.anatom.ejbca.log.Admin admin,java.security.cert.X509Certificate caid,int module,java.util.Date time,java.lang.String username,java.security.cert.X509Certificate certificate,int event,java.lang.String comment )
      throws java.rmi.RemoteException;

   /**
    * Overloaded function that also logs an exception See function above for more documentation.
    * @param exception the exception that has occured
    */
   public void log( se.anatom.ejbca.log.Admin admin,int caid,int module,java.util.Date time,java.lang.String username,java.security.cert.X509Certificate certificate,int event,java.lang.String comment,java.lang.Exception exception )
      throws java.rmi.RemoteException;

   /**
    * Same as above but with the difference of CAid which is taken from the issuerdn of given certificate.
    */
   public void log( se.anatom.ejbca.log.Admin admin,java.security.cert.X509Certificate caid,int module,java.util.Date time,java.lang.String username,java.security.cert.X509Certificate certificate,int event,java.lang.String comment,java.lang.Exception exception )
      throws java.rmi.RemoteException;

   /**
    * Method to execute a customized query on the log db data. The parameter query should be a legal Query object.
    * @param query a number of statments compiled by query class to a SQL 'WHERE'-clause statment.
    * @param viewlogprivileges is a sql query string returned by a LogAuthorization object.
    * @return a collection of LogEntry. Maximum size of Collection is defined i ILogSessionRemote.MAXIMUM_QUERY_ROWCOUNT
    * @throws IllegalQueryException when query parameters internal rules isn't fullfilled.
    * @see se.anatom.ejbca.util.query.Query
    */
   public java.util.Collection query( se.anatom.ejbca.util.query.Query query,java.lang.String viewlogprivileges,java.lang.String capriviledges )
      throws se.anatom.ejbca.util.query.IllegalQueryException, java.rmi.RemoteException;

   /**
    * Loads the log configuration from the database.
    * @return the logconfiguration
    */
   public se.anatom.ejbca.log.LogConfiguration loadLogConfiguration( int caid )
      throws java.rmi.RemoteException;

   /**
    * Saves the log configuration to the database.
    * @param logconfiguration the logconfiguration to save.
    */
   public void saveLogConfiguration( se.anatom.ejbca.log.Admin admin,int caid,se.anatom.ejbca.log.LogConfiguration logconfiguration )
      throws java.rmi.RemoteException;

}
