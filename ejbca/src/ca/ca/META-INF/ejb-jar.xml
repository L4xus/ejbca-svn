<?xml version="1.0"?>

<!DOCTYPE ejb-jar PUBLIC
	"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
	"http://java.sun.com/dtd/ejb-jar_2_0.dtd">

<ejb-jar>

 <description></description>
 <display-name>CA component</display-name>

 <enterprise-beans>

   <session>
     <description>
         Session bean handling core CA function,signing certificates.
     </description>
     <ejb-name>RSASignSession</ejb-name>
     <home>se.anatom.ejbca.ca.sign.ISignSessionHome</home>
     <remote>se.anatom.ejbca.ca.sign.ISignSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.sign.ISignSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.sign.ISignSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.sign.RSASignSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>     
     <env-entry>
        <description>Name of PRNG algorithm used for random source - refer to Appendix A in the Java Cryptography Architecture API Specification And Reference for information about standard PRNG algorithm names.</description>
        <env-entry-name>randomAlgorithm</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>SHA1PRNG</env-entry-value>
     </env-entry>     
     <ejb-local-ref>
        <description>The CA entity bean.</description>
        <ejb-ref-name>ejb/CADataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.caadmin.ICADataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.caadmin.ICADataLocal</local>
        <ejb-link>CAData</ejb-link>
     </ejb-local-ref>          
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Certificate store used to store and fetch certificates</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
             The Authentication session used to authenticate users when issuing certificates.
             Alter this to enable a custom made authentication session implementing the
             IAuthenticationSessionLocal interface.
        </description>
        <ejb-ref-name>ejb/AuthenticationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocal</local>
        <ejb-link>AuthenticationSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
                Publishers are configured to store certificates and CRLs in additional places
                from the main database. Publishers runs as local beans.
        </description>
        <ejb-ref-name>ejb/PublisherSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.publisher.IPublisherSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.publisher.IPublisherSessionLocal</local>
        <ejb-link>PublisherSession</ejb-link>
     </ejb-local-ref> 
    <security-identity>
        <description></description>
        <run-as>
            <description></description>
            <role-name>InternalUser</role-name>
        </run-as>
    </security-identity>
   </session>

   <session>
     <description>Authenticates against the local database</description>
     <ejb-name>AuthenticationSession</ejb-name>
     <home>se.anatom.ejbca.ca.auth.IAuthenticationSessionHome</home>
     <remote>se.anatom.ejbca.ca.auth.IAuthenticationSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.auth.LocalAuthenticationSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <ejb-local-ref>
        <description>The User entity bean</description>
        <ejb-ref-name>ejb/UserDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.UserDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.UserDataLocal</local>
        <ejb-link>UserData</ejb-link>
     </ejb-local-ref>

     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>

     <security-identity>
        <description></description>
        <run-as>
            <description></description>
            <role-name>InternalUser</role-name>
        </run-as>
     </security-identity>
   </session>

<!-- Commented out, use LocalAuthenticationSession, enable this and change reference
      from RSASignSession (ejb/AuthenticationSessionLocal)
   <session>
     <description>RemoteAuthentication session authenticates against a remote server</description>
     <ejb-name>RemoteAuthenticationSession</ejb-name>
     <home>se.anatom.ejbca.ca.auth.IAuthenticationSessionHome</home>
     <remote>se.anatom.ejbca.ca.auth.IAuthenticationSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.auth.RemoteAuthenticationSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <env-entry>
        <description>URL to remote authentication server</description>
        <env-entry-name>AuthURL</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>http://127.0.0.1:8080/sampleauth/verify</env-entry-value>
     </env-entry>

    <security-identity>
        <description></description>
        <run-as>
            <description></description>
            <role-name>InternalUser</role-name>
        </run-as>
    </security-identity>
   </session>
-->

   <session>
     <description>
         Session bean manging CAs
     </description>
     <ejb-name>CAAdminSession</ejb-name>
     <home>se.anatom.ejbca.ca.caadmin.ICAAdminSessionHome</home>
     <remote>se.anatom.ejbca.ca.caadmin.ICAAdminSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.caadmin.CAAdminSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>Password for server keystore, comment out to prompt for pwd.</description>
        <env-entry-name>keyStorePass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>foo123</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Password for CA private key, only used for JKS-keystore. Leave as null for PKCS12-keystore, comment out to prompt</description>
        <env-entry-name>privateKeyPass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>null</env-entry-value>
     </env-entry>     
     <env-entry>
        <description>Password for OCSP keystores.</description>
        <env-entry-name>OCSPKeyStorePass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>foo123</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Password for OCSP keystores private key protection.</description>
        <env-entry-name>privateOCSPKeyPass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>foo123</env-entry-value>
     </env-entry>
     <ejb-local-ref> 
        <description>The CA entity bean.</description>
        <ejb-ref-name>ejb/CADataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.caadmin.ICADataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.caadmin.ICADataLocal</local>
        <ejb-link>CAData</ejb-link>
     </ejb-local-ref>     
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Authorization Session Bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Certificate Store Session Bean</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>  
     <ejb-local-ref>
        <description>The Sign Session Bean</description>
        <ejb-ref-name>ejb/SignSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.sign.ISignSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ISignSessionLocal</local>
        <ejb-link>RSASignSession</ejb-link>
     </ejb-local-ref>  
     <ejb-local-ref>
        <description>The CRL Create bean</description>
        <ejb-ref-name>ejb/CreateCRLSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.crl.ICreateCRLSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.crl.ICreateCRLSessionLocal</local>
        <ejb-link>CreateCRLSession</ejb-link>
     </ejb-local-ref>  
     
    <security-identity>
        <description></description>
        <run-as>
            <description></description>
            <role-name>InternalUser</role-name>
        </run-as>
    </security-identity>
   </session>

   <session>
     <ejb-name>CertificateStoreSession</ejb-name>
     <home>se.anatom.ejbca.ca.store.ICertificateStoreSessionHome</home>
     <remote>se.anatom.ejbca.ca.store.ICertificateStoreSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.store.LocalCertificateStoreSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     <ejb-local-ref>
        <description>The Certificate entity bean used to store and fetch certificates</description>
        <ejb-ref-name>ejb/CertificateDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CertificateDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CertificateDataLocal</local>
        <ejb-link>CertificateData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The CRL entity bean used to store and fetch CRLs</description>
        <ejb-ref-name>ejb/CRLDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CRLDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CRLDataLocal</local>
        <ejb-link>CRLData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The CertificateProfileData Entity bean
        </description>
        <ejb-ref-name>ejb/CertificateProfileDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CertificateProfileDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CertificateProfileDataLocal</local>
        <ejb-link>CertificateProfileData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Authorization session bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
                Publishers are configured to store certificates and CRLs in additional places
                from the main database. Publishers runs as local beans.
        </description>
        <ejb-ref-name>ejb/PublisherSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.publisher.IPublisherSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.publisher.IPublisherSessionLocal</local>
        <ejb-link>PublisherSession</ejb-link>
     </ejb-local-ref> 

    <security-identity>
        <description></description>
        <run-as>
            <description></description>
            <role-name>InternalUser</role-name>
        </run-as>
    </security-identity>

   </session>

   <session>
     <ejb-name>CreateCRLSession</ejb-name>
     <home>se.anatom.ejbca.ca.crl.ICreateCRLSessionHome</home>
     <remote>se.anatom.ejbca.ca.crl.ICreateCRLSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.crl.ICreateCRLSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.crl.ICreateCRLSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.crl.CreateCRLSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocalRemote</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Certificate entity bean used manipulate certificates</description>
        <ejb-ref-name>ejb/CertificateDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CertificateDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CertificateDataLocal</local>
        <ejb-link>CertificateData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The CA Admin Session</description>
        <ejb-ref-name>ejb/CAAdminSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocal</local>
        <ejb-link>CAAdminSession</ejb-link>
     </ejb-local-ref>     
     <ejb-local-ref>
        <description>The Certificate store used to store and fetch certificates</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The signing session used to create CRL</description>
        <ejb-ref-name>ejb/SignSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.sign.ISignSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.sign.ISignSessionLocal</local>
        <ejb-link>RSASignSession</ejb-link>
     </ejb-local-ref>

   </session>


   <session>
     <ejb-name>PublisherSession</ejb-name>
     <home>se.anatom.ejbca.ca.publisher.IPublisherSessionHome</home>
     <remote>se.anatom.ejbca.ca.publisher.IPublisherSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.publisher.IPublisherSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.publisher.IPublisherSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.publisher.LocalPublisherSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     <ejb-local-ref>
        <description>The publisher data entity bean</description>
        <ejb-ref-name>ejb/PublisherDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.publisher.PublisherDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.publisher.PublisherDataLocal</local>
        <ejb-link>PublisherData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Authorization Session Bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The CAAdmin Session Bean</description>
        <ejb-ref-name>ejb/CAAdminSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocal</local>
        <ejb-link>CAAdminSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
   </session> 

   <!--session>
     <description>Upgrades the database for a new version of ejbca</description>
     <ejb-name>UpgradeSession</ejb-name>
     <home>se.anatom.ejbca.upgrade.IUpgradeSessionHome</home>
     <remote>se.anatom.ejbca.upgrade.IUpgradeSessionRemote</remote>
     <local-home>se.anatom.ejbca.upgrade.IUpgradeSessionLocalHome</local-home>
     <local>se.anatom.ejbca.upgrade.IUpgradeSessionLocal</local>
     <ejb-class>se.anatom.ejbca.upgrade.UpgradeSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The CA Admin Session</description>
        <ejb-ref-name>ejb/CAAdminSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.caadmin.ICAAdminSessionLocal</local>
        <ejb-link>CAAdminSession</ejb-link>
     </ejb-local-ref>     
     <ejb-local-ref>
        <description>The Authorization Session Bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The RAAdmin Session Bean</description>
        <ejb-ref-name>ejb/RaAdminSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.IRaAdminSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.IRaAdminSessionLocal</local>
        <ejb-link>RaAdminSession</ejb-link>
     </ejb-local-ref>     
   </session-->

   <entity>
      <description>
            This enterprise bean entity represents a certificate with accompanying data.
      </description>
      <ejb-name>CertificateData</ejb-name>
      <local-home>se.anatom.ejbca.ca.store.CertificateDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.store.CertificateDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.store.CertificateDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ca.store.CertificateDataPK</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CertificateDataBean</abstract-schema-name>

      <cmp-field><field-name>base64Cert</field-name></cmp-field>
      <cmp-field><field-name>fingerprint</field-name></cmp-field>
      <cmp-field><field-name>subjectDN</field-name></cmp-field>
      <cmp-field><field-name>issuerDN</field-name></cmp-field>
      <cmp-field><field-name>cAFingerprint</field-name></cmp-field>
      <cmp-field><field-name>serialNumber</field-name></cmp-field>
      <cmp-field><field-name>status</field-name></cmp-field>
      <cmp-field><field-name>type</field-name></cmp-field>
      <cmp-field><field-name>username</field-name></cmp-field>
      <cmp-field><field-name>expireDate</field-name></cmp-field>
      <cmp-field><field-name>revocationDate</field-name></cmp-field>
      <cmp-field><field-name>revocationReason</field-name></cmp-field>

      <query>
      	<query-method>
      	  <method-name>findByExpireDate</method-name>
      	  <method-params>
      	    <method-param>long</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.expireDate<?1]]>
        </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findBySubjectDNAndIssuerDN</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.subjectDN=?1 AND a.issuerDN=?2]]>
        </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findBySubjectDN</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.subjectDN=?1]]>
        </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findBySerialNumber</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.serialNumber=?1]]>
	    </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findByIssuerDNSerialNumber</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.issuerDN=?1 AND a.serialNumber=?2]]>
        </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findByUsername</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE  a.username=?1]]>
        </ejb-ql>
      </query>
   </entity>

   <entity>
      <description>
            This enterprise bean entity represents a CRL with accompanying data.
      </description>
      <ejb-name>CRLData</ejb-name>
      <local-home>se.anatom.ejbca.ca.store.CRLDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.store.CRLDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.store.CRLDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ca.store.CRLDataPK</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CRLDataBean</abstract-schema-name>

      <cmp-field><field-name>cRLNumber</field-name></cmp-field>
      <cmp-field><field-name>issuerDN</field-name></cmp-field>
      <cmp-field><field-name>fingerprint</field-name></cmp-field>
      <cmp-field><field-name>cAFingerprint</field-name></cmp-field>
      <cmp-field><field-name>thisUpdate</field-name></cmp-field>
      <cmp-field><field-name>nextUpdate</field-name></cmp-field>
      <cmp-field><field-name>base64Crl</field-name></cmp-field>

      <query>
      	<query-method>
      	  <method-name>findByIssuerDNAndCRLNumber</method-name>
      	  <method-params>
            <method-param>java.lang.String</method-param>
      	    <method-param>int</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CRLDataBean a WHERE a.issuerDN=?1 AND a.cRLNumber=?2]]>
	</ejb-ql>
      </query>
   </entity>
   <entity>
      <description>
            This enterprise bean entity represents a certificate type.
      </description>
      <ejb-name>CertificateProfileData</ejb-name>
      <local-home>se.anatom.ejbca.ca.store.CertificateProfileDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.store.CertificateProfileDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.store.CertificateProfileDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CertificateProfileDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>
      <cmp-field><field-name>certificateProfileName</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>id</primkey-field>

      <query>
      	<query-method>
      	  <method-name>findByCertificateProfileName</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateProfileDataBean a WHERE a.certificateProfileName=?1]]>
        </ejb-ql>
       </query>
       <query>
         <query-method>
           <method-name>findAll</method-name>
           <method-params/>
         </query-method>
         <ejb-ql>
           <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateProfileDataBean AS a]]>
         </ejb-ql>
       </query>
   </entity>
   <entity>
      <description>
            This enterprise bean entity represents a publisher.
      </description>
      <ejb-name>PublisherData</ejb-name>
      <local-home>se.anatom.ejbca.ca.publisher.PublisherDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.publisher.PublisherDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.publisher.PublisherDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>PublisherDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>
      <cmp-field><field-name>name</field-name></cmp-field>
      <cmp-field><field-name>updateCounter</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>id</primkey-field>

      <query>
      	<query-method>
      	  <method-name>findByName</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	    <ejb-ql>
	      <![CDATA[SELECT DISTINCT OBJECT(a) from PublisherDataBean a WHERE a.name=?1]]>
	    </ejb-ql>
       </query>
   </entity>    
   <entity>
      <description>
            Entity Bean containing CA data
      </description>
      <ejb-name>CAData</ejb-name>
      <local-home>se.anatom.ejbca.ca.caadmin.CADataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.caadmin.CADataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.caadmin.CADataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CADataBean</abstract-schema-name>
      <cmp-field><field-name>cAId</field-name></cmp-field>
      <cmp-field><field-name>name</field-name></cmp-field>
      <cmp-field><field-name>subjectDN</field-name></cmp-field>
      <cmp-field><field-name>status</field-name></cmp-field>
      <cmp-field><field-name>expireTime</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>cAId</primkey-field>          
      <query>
      	<query-method>
      	  <method-name>findByName</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from CADataBean a WHERE a.name=?1]]>
        </ejb-ql>
       </query>
       <query>
         <query-method>
           <method-name>findAll</method-name>
           <method-params/>
         </query-method>
         <ejb-ql>
           <![CDATA[SELECT DISTINCT OBJECT(a) from CADataBean AS a]]>
         </ejb-ql>
       </query>
   </entity>   
   
  </enterprise-beans>

 <assembly-descriptor>

   <security-role>
      <description>
         This role represents everyone
      </description>
     <role-name>everyone</role-name>
   </security-role>
   <security-role>
      <description>
         This role represents an internal process
      </description>
      <role-name>InternalUser</role-name>
   </security-role>

   <!--
       Method permissions define who can access a given method on a bean.
       Role name internalUser means that the bean methods should NOT be
       accessible from the outside.
       Role name everyone means that the bean methods can be accessible from
       the outside.
       NOTE! Security must be enabled in the container for these settings
       to have any real meaning.
   -->

   <method-permission>
     <role-name>InternalUser</role-name>
     <method>
         <ejb-name>AuthenticationSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CreateCRLSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CertificateData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CRLData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>*</method-name>
     </method>
   </method-permission>

   <method-permission>
     <role-name>everyone</role-name>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>getCertificateChain</method-name>
     </method>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>createCertificate</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>listAllCertificates</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>findCertificatesBySubject</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>findCertificateByIssuerAndSerno</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>isRevoked</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>listRevokedCertificates</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>getLastCRL</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>getLastCRLNumber</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getCAInfo</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getCAIdToNameMap</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getAvailableCAs</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getAllCACertificates</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>exitsCertificateProfileInCAs</method-name>
     </method>
   </method-permission>

   <!--
       Transaction settings. Default setting i for *, which is overridden
       for methods with special transactional needs.
       Required is used for mission critical methods, which cannot collide.
       Supports is used for methods which only read data.
   -->
   <container-transaction>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>AuthenticationSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CreateCRLSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>storeCertificate</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>storeCRL</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>revokeCertificate</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>setRevokeStatus</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>revokeAllCertByCA</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>addCertificateProfile</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>cloneCertificateProfile</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>removeCertificateProfile</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>renameCertificateProfile</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>changeCertificateProfile</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>     
     <method>
         <ejb-name>CertificateData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CRLData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <!--method>
         <ejb-name>UpgradeSession</ejb-name>
         <method-name>*</method-name>
     </method-->
   <trans-attribute>Required</trans-attribute>
   </container-transaction>

   <container-transaction>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>getCertificateChain</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getCAInfo</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getCAIdToNameMap</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getAllCACertificates</method-name>
     </method>
     <method>
         <ejb-name>CAAdminSession</ejb-name>
         <method-name>getAvailableCAs</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>getPublisherIdToNameMap</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>getPublisher</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>getPublisherUpdateCount</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>getPublisherId</method-name>
     </method>
     <method>
         <ejb-name>PublisherSession</ejb-name>
         <method-name>getPublisherName</method-name>
     </method>

   <trans-attribute>Supports</trans-attribute>
   </container-transaction>

 </assembly-descriptor>
</ejb-jar>

