<?xml version="1.0"?>

<!DOCTYPE ejb-jar PUBLIC
	"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
	"http://java.sun.com/dtd/ejb-jar_2_0.dtd">
	
<ejb-jar>
 <enterprise-beans>

   <session>
     <ejb-name>RSASignSession</ejb-name>
     <home>se.anatom.ejbca.ca.sign.ISignSessionHome</home>
     <remote>se.anatom.ejbca.ca.sign.ISignSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.sign.ISignSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.sign.ISignSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.sign.RSASignSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>Factory class for creating a SigningDevice</description>
        <env-entry-name>signingDeviceFactory</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>se.anatom.ejbca.ca.sign.PKCS12SigningDeviceFactory</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Location of CA keystore</description>
        <env-entry-name>keyStore</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>../server/default/conf/server.p12</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Password for server keystore, comment out to prompt for pwd.</description>
        <env-entry-name>keyStorePass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>foo123</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Alias in keystore for CA private key</description>
        <env-entry-name>privateKeyAlias</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>privateKey</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Password for CA private key, only used for JKS-keystore. Leave as null for PKCS12-keystore, comment out to prompt</description>
        <env-entry-name>privateKeyPass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>null</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Use AuthorityKeyIdentifier?</description>
        <env-entry-name>AuthorityKeyIdentifier</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
     </env-entry>
     <env-entry>
        <description>AuthorityKeyIdentifier critical? (RFC2459 says NO)</description>
        <env-entry-name>AuthorityKeyIdentifierCritical</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>false</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Use old style altName with email in DN? (RFC2459 says NO)</description>
        <env-entry-name>EmailInDN</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>false</env-entry-value>
     </env-entry>     
     <env-entry>
        <description>Use CRLNumber?</description>
        <env-entry-name>CRLNumber</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
     </env-entry>
     <env-entry>
        <description>CRLNumber critical? (RFC2459 says NO)</description>
        <env-entry-name>CRLNumberCritical</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>false</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Period in hours between CRLs beeing issued</description>
        <env-entry-name>CRLPeriod</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>24</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Call finishUser in AuthenticationSession after generation?</description>
        <env-entry-name>FinishUser</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
     </env-entry>

     <ejb-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>se.anatom.ejbca.log.ILogSessionHome</home>
        <remote>se.anatom.ejbca.log.ILogSessionRemote</remote>
        <ejb-link>LogSession</ejb-link>
     </ejb-ref>          
     <ejb-local-ref>
        <description>The Certificate store used to store and fetch certificates</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
             The Authentication session used to authenticate users when issuing certificates 
             alter this to enable a custom made authentication session implementing the 
             IAuthenticationSessionLocal interface.
        </description>
        <ejb-ref-name>ejb/AuthenticationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.IAuthenticationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.IAuthenticationSessionLocal</local>
        <ejb-link>AuthenticationSession</ejb-link>
     </ejb-local-ref>
<!-- Uncomment to use LDAP publisher
     <ejb-local-ref>
        <description>
                Publishers are configured to store certificates and CRLs in addiotional places
                from the main database. Publishers runs as local beans.
        </description>
        <ejb-ref-name>ejb/PublisherSession1</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.IPublisherSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.IPublisherSessionLocal</local>
        <ejb-link>PublisherSession1</ejb-link>
     </ejb-local-ref>
END LDAP Publisher -->
    <security-identity>
        <run-as>
            <role-name>InternalUser</role-name>
    </run-as>
    </security-identity>
   </session>

   <session>
     <description>Authenticates against the local database</description>
     <ejb-name>AuthenticationSession</ejb-name>
     <home>se.anatom.ejbca.ca.auth.IAuthenticationSessionHome</home>
     <remote>se.anatom.ejbca.ca.auth.IAuthenticationSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.auth.LocalAuthenticationSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <ejb-ref>
        <description>The User entity bean</description>
        <ejb-ref-name>ejb/UserData</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>se.anatom.ejbca.ca.store.UserDataHome</home>
        <remote>se.anatom.ejbca.ca.store.UserDataRemote</remote>
     </ejb-ref>
     
     <ejb-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>se.anatom.ejbca.log.ILogSessionHome</home>
        <remote>se.anatom.ejbca.log.ILogSessionRemote</remote>
        <ejb-link>LogSession</ejb-link>
     </ejb-ref>          

     <security-identity>
        <run-as>
            <role-name>InternalUser</role-name>
        </run-as>
     </security-identity>
   </session>

<!-- Commented out, use LocalAuthenticationSession, enable this and change reference 
      from RSASignSession (ejb/AuthenticationSessionLocal) 
   <session>
     <description>RemoteAuthentication session authenticates against a remote server</description>
     <ejb-name>RemoteAuthenticationSession</ejb-name>
     <home>se.anatom.ejbca.ca.auth.IAuthenticationSessionHome</home>
     <remote>se.anatom.ejbca.ca.auth.IAuthenticationSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.auth.IAuthenticationSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.auth.RemoteAuthenticationSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     
     <env-entry>
        <description>URL to remote authentication server</description>
        <env-entry-name>AuthURL</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>http://127.0.0.1:8080/sampleauth/verify</env-entry-value>
     </env-entry>

    <security-identity>
        <run-as>
            <role-name>InternalUser</role-name>
        </run-as>
    </security-identity>
   </session>
-->

   <session>
     <ejb-name>CertificateStoreSession</ejb-name>
     <home>se.anatom.ejbca.ca.store.ICertificateStoreSessionHome</home>
     <remote>se.anatom.ejbca.ca.store.ICertificateStoreSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.store.LocalCertificateStoreSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>     

     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     <ejb-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>se.anatom.ejbca.log.ILogSessionHome</home>
        <remote>se.anatom.ejbca.log.ILogSessionRemote</remote>
        <ejb-link>LogSession</ejb-link>
     </ejb-ref>     
     <ejb-local-ref>
        <description>The Certificate entity bean used to store and fetch certificates</description>
        <ejb-ref-name>ejb/CertificateDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CertificateDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CertificateDataLocal</local>
        <ejb-link>CertificateData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The CRL entity bean used to store and fetch CRLs</description>
        <ejb-ref-name>ejb/CRLDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CRLDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CRLDataLocal</local>
        <ejb-link>CRLData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The CertificateProfileData Entity bean 
        </description>
        <ejb-ref-name>ejb/CertificateProfileDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CertificateProfileDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CertificateProfileDataLocal</local>
        <ejb-link>CertificateProfileData</ejb-link>
     </ejb-local-ref>         
     
     
    <security-identity>
        <run-as>
            <role-name>InternalUser</role-name>
        </run-as>
    </security-identity>

   </session>

   <session>
     <ejb-name>CreateCRLSession</ejb-name>
     <home>se.anatom.ejbca.IJobRunnerSessionHome</home>
     <remote>se.anatom.ejbca.IJobRunnerSessionRemote</remote>
     <ejb-class>se.anatom.ejbca.ca.crl.CreateCRLSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>     

     <env-entry>
        <description>Period in hours between CRLs beeing issued</description>
        <env-entry-name>CRLPeriod</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>24</env-entry-value>
     </env-entry>
     <ejb-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>se.anatom.ejbca.log.ILogSessionHome</home>
        <remote>se.anatom.ejbca.log.ILogSessionRemote</remote>
        <ejb-link>LogSession</ejb-link>
     </ejb-ref>     
     <ejb-local-ref>
        <description>The Certificate entity bean used manipulate certificates</description>
        <ejb-ref-name>ejb/CertificateDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.CertificateDataLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.CertificateDataLocal</local>
        <ejb-link>CertificateData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Certificate store used to store and fetch certificates</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The signing session used to create CRL</description>
        <ejb-ref-name>ejb/SignSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ISignSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ISignSessionLocal</local>
        <ejb-link>RSASignSession</ejb-link>
     </ejb-local-ref>

   </session>

<!-- Uncomment to use LDAP publisher
   <session>
     <ejb-name>PublisherSession1</ejb-name>
     <home>se.anatom.ejbca.ca.store.IPublisherSessionHome</home>
     <remote>se.anatom.ejbca.ca.store.IPublisherSessionRemote</remote>
     <local-home>se.anatom.ejbca.ca.store.IPublisherSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ca.store.IPublisherSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ca.store.LDAPPublisherSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>     
      
     <env-entry>
        <description>LDAP host</description>
        <env-entry-name>ldapHost</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>localhost</env-entry-value>
     </env-entry>
     <env-entry>
        <description>LDAP port</description>
        <env-entry-name>ldapPort</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>389</env-entry-value>
     </env-entry>
     <env-entry>
        <description>DN used to login to LDAP server</description>
        <env-entry-name>loginDN</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>cn=Admin,o=AnaTom,c=SE</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Password used to login to LDAP server.</description>
        <env-entry-name>loginPassword</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>foo123</env-entry-value>
     </env-entry>
     <env-entry>
        <description>The base DN handled by the LDAP server.</description>
        <env-entry-name>containerName</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>o=AnaTom,c=SE</env-entry-value>
     </env-entry>
     <env-entry>
        <description>objectclass for storing user entries.</description>
        <env-entry-name>userObjectclass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>inetOrgPerson</env-entry-value>
     </env-entry>
     <env-entry>
        <description>objectclass for storing CA entries.</description>
        <env-entry-name>cAObjectclass</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>certificationAuthority</env-entry-value>
     </env-entry>
     <env-entry>
        <description>attribute for storing user certificates.</description>
        <env-entry-name>userCertAttribute</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>userCertificate;binary</env-entry-value>
     </env-entry>
     <env-entry>
        <description>attribute for storing CA certificates.</description>
        <env-entry-name>cACertAttribute</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>cACertificate;binary</env-entry-value>
     </env-entry>
     <env-entry>
        <description>attribute for storing CRLs.</description>
        <env-entry-name>cRLAttribute</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>certificateRevocationList;binary</env-entry-value>
     </env-entry>
     <ejb-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>se.anatom.ejbca.log.ILogSessionHome</home>
        <remote>se.anatom.ejbca.log.ILogSessionRemote</remote>
        <ejb-link>LogSession</ejb-link>
     </ejb-ref>      
   </session>
END LDAP Publisher -->

   <entity>
      <description>
            This enterprise bean entity represents a certificate with accompanying data.
      </description>
      <ejb-name>CertificateData</ejb-name>
      <home>se.anatom.ejbca.ca.store.CertificateDataHome</home>
      <remote>se.anatom.ejbca.ca.store.CertificateData</remote>
      <local-home>se.anatom.ejbca.ca.store.CertificateDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.store.CertificateDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.store.CertificateDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ca.store.CertificateDataPK</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CertificateDataBean</abstract-schema-name>

      <cmp-field><field-name>base64Cert</field-name></cmp-field>
      <cmp-field><field-name>fingerprint</field-name></cmp-field>
      <cmp-field><field-name>subjectDN</field-name></cmp-field>
      <cmp-field><field-name>issuerDN</field-name></cmp-field>
      <cmp-field><field-name>cAFingerprint</field-name></cmp-field>
      <cmp-field><field-name>serialNumber</field-name></cmp-field>
      <cmp-field><field-name>status</field-name></cmp-field>
      <cmp-field><field-name>type</field-name></cmp-field>
      <cmp-field><field-name>username</field-name></cmp-field>      
      <cmp-field><field-name>expireDate</field-name></cmp-field>
      <cmp-field><field-name>revocationDate</field-name></cmp-field>
      <cmp-field><field-name>revocationReason</field-name></cmp-field>
      
      <query>
      	<query-method>
      	  <method-name>findByExpireDate</method-name>
      	  <method-params>
      	    <method-param>long</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.expireDate<?1]]>
	</ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findBySubjectDN</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.subjectDN=?1]]>
        </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findBySerialNumber</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.serialNumber=?1]]>
	</ejb-ql>
      </query>      
      <query>
      	<query-method>
      	  <method-name>findByIssuerDNSerialNumber</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE a.issuerDN=?1 AND a.serialNumber=?2]]>
        </ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findByUsername</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateDataBean a WHERE  a.username=?1]]>
        </ejb-ql>
      </query>      
   </entity>

   <entity>
      <description>
            This enterprise bean entity represents a CRL with accompanying data.
      </description>
      <ejb-name>CRLData</ejb-name>
      <home>se.anatom.ejbca.ca.store.CRLDataHome</home>
      <remote>se.anatom.ejbca.ca.store.CRLData</remote>
      <local-home>se.anatom.ejbca.ca.store.CRLDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.store.CRLDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.store.CRLDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ca.store.CRLDataPK</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CRLDataBean</abstract-schema-name>

      <cmp-field><field-name>cRLNumber</field-name></cmp-field>
      <cmp-field><field-name>issuerDN</field-name></cmp-field>
      <cmp-field><field-name>fingerprint</field-name></cmp-field>
      <cmp-field><field-name>cAFingerprint</field-name></cmp-field>
      <cmp-field><field-name>thisUpdate</field-name></cmp-field>
      <cmp-field><field-name>nextUpdate</field-name></cmp-field>
      <cmp-field><field-name>base64Crl</field-name></cmp-field>

      <query>
      	<query-method>
      	  <method-name>findByCRLNumber</method-name>
      	  <method-params>
      	    <method-param>int</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CRLDataBean a WHERE a.cRLNumber=?1]]>
	</ejb-ql>
      </query>
   </entity>
   
   <entity>
      <description>
            This enterprise bean entity represents a certificate type.
      </description>
      <ejb-name>CertificateProfileData</ejb-name>
      <local-home>se.anatom.ejbca.ca.store.CertificateProfileDataLocalHome</local-home>
      <local>se.anatom.ejbca.ca.store.CertificateProfileDataLocal</local>
      <ejb-class>se.anatom.ejbca.ca.store.CertificateProfileDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>    
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CertificateProfileDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>      
      <cmp-field><field-name>certificateProfileName</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>id</primkey-field>  
      
      
      <query>
      	<query-method>
      	  <method-name>findByCertificateProfileName</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from CertificateProfileDataBean a WHERE a.certificateProfileName=?1]]>
	</ejb-ql>
      </query>       
   </entity>   
  </enterprise-beans>

 <assembly-descriptor>

   <security-role>
      <description>
         This role represents everyone
      </description>
     <role-name>everyone</role-name>
   </security-role>
   <security-role>
      <description>
         This role represents an internal process
      </description>
      <role-name>InternalUser</role-name>
   </security-role>

   <!-- 
       Method permissions define who can access a given method on a bean.
       Role name internalUser means that the bean methods shouln NOT be 
       accessible from the outside.
       Role name everyone means that the bean methods can be accessible from
       the outside.
       NOTE! Security must be enabled in the container for these settings 
       to have any real meaning.
   -->

   <method-permission>
     <role-name>InternalUser</role-name>
     <method>
         <ejb-name>AuthenticationSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>createCRL</method-name>
     </method>
     <method>
         <ejb-name>CreateCRLSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CertificateData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CRLData</ejb-name>
         <method-name>*</method-name>
     </method>

<!-- Uncomment to use LDAP publisher
     <method>
         <ejb-name>PublisherSession1</ejb-name>
         <method-name>*</method-name>
     </method>
END LDAP Publisher -->

     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>storeCRL</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>storeCertificate</method-name>
     </method>
   </method-permission>
   
   <method-permission>
     <role-name>everyone</role-name>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>getCertificateChain</method-name>
     </method>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>createCertificate</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>listAllCertificates</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>findCertificatesBySubject</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>findCertificateByIssuerAndSerno</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>isRevoked</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>listRevokedCertificates</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>getLastCRL</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>getLastCRLNumber</method-name>
     </method>
   </method-permission>

   <!-- 
       Transaction settings. Default setting i for *, which is overridden 
       for methods with special transactionsal needs.
       Required is used for mission critical methods, which cannot collide.
       Supports is used for methods which only read data.
   -->
   <container-transaction>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>AuthenticationSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CreateCRLSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>storeCertificate</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>storeCRL</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>addCertificateType</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>cloneCertificateType</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>removeCertificateType</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>renameCertificateType</method-name>
     </method> 
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>changeCertificateType</method-name>
     </method>  
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>setRevokeStatus</method-name>
     </method>                              
     <method>
         <ejb-name>CertificateData</ejb-name>
         <method-intf>Remote</method-intf>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>CRLData</ejb-name>
         <method-intf>Remote</method-intf>
         <method-name>*</method-name>
     </method>
<!-- Uncomment to use LDAP publisher
     <method>
         <ejb-name>PublisherSession1</ejb-name>
         <method-name>*</method-name>
     </method>
END LDAP Publisher -->

   <trans-attribute>Required</trans-attribute>
   </container-transaction>       

   <container-transaction>
     <method>
         <ejb-name>RSASignSession</ejb-name>
         <method-name>getCertificateChain</method-name>
     </method>
     <method>
         <ejb-name>CertificateStoreSession</ejb-name>
         <method-name>*</method-name>
     </method>
   <trans-attribute>Supports</trans-attribute>
   </container-transaction>       

 </assembly-descriptor>
</ejb-jar>

