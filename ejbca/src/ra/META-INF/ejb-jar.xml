<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE ejb-jar PUBLIC
	"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
	"http://java.sun.com/dtd/ejb-jar_2_0.dtd">
<ejb-jar>

 <description></description>
 <display-name>RA Module</display-name>

 <enterprise-beans>

   <session>
     <description>
         Session bean handling user administration, uses UserData entity bean
     </description>
     <ejb-name>UserAdminSession</ejb-name>
     <home>se.anatom.ejbca.ra.IUserAdminSessionHome</home>
     <remote>se.anatom.ejbca.ra.IUserAdminSessionRemote</remote>
     <local-home>se.anatom.ejbca.ra.IUserAdminSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ra.IUserAdminSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ra.LocalUserAdminSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>

     <!-- Env-entries for starting an external RMI service using SSL -->
     <env-entry>
        <description>Factory class can dynamically link to external implementation class.</description>
        <env-entry-name>RMIFactory</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>se.walter.cardPersonalization.ra.ejbca.RMIFactoryImpl</env-entry-value>
     </env-entry>
     <!-- END Env-entries for starting an external RMI service using SSL -->
     <!-- Env-entries used for notification configuration -->
     <env-entry>
        <description>Defines de sender of the notification message</description>
        <env-entry-name>sender</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>philip@primekey.se</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Defines the subject used in the notification message</description>
        <env-entry-name>subject</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Retrieve your certificate</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Defines the actual message of the notification. Use the values $Username, $Password, $CN, $O, $OU, $C, $DATE to indicate which texts that should be replaced (Case insensitive), $NL stands for newline.</description>
        <env-entry-name>message</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Hello $CN$NL$NL This is a notification. $NL$NL Your username: $Username$NL password: $Password$NL$NL Your are NOT supposed to go and fetch your certificate, this is only a test.</env-entry-value>
     </env-entry>          
     <!-- END Env-entries used for notification configuration -->     
     <ejb-local-ref>
        <description>The Certificate Store session bean</description>
        <ejb-ref-name>ejb/CertificateStoreSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ca.store.ICertificateStoreSessionLocal</local>
        <ejb-link>CertificateStoreSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
<!-- Uncomment to use LDAP publisher -->
<!--     <ejb-ref>
        <description>
                Publishers are configured to store certificates and CRLs in addiotional places
                from the main database. Publishers runs as local beans.
        </description>
        <ejb-ref-name>ejb/PublisherSession1</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>se.anatom.ejbca.ca.store.IPublisherSessionHome</home>
        <remote>se.anatom.ejbca.ca.store.IPublisherSessionRemote</remote>
        <ejb-link>PublisherSession1</ejb-link>
     </ejb-ref> -->
<!-- END LDAP Publisher -->
     <ejb-local-ref>
        <description>The Authorization session bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Ra Admin session bean</description>
        <ejb-ref-name>ejb/RaAdminSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.IRaAdminSessionLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.IRaAdminSessionLocal</local>
        <ejb-link>RaAdminSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The User entity bean</description>
        <ejb-ref-name>ejb/UserDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.UserDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.UserDataLocal</local>
        <ejb-link>UserData</ejb-link>
     </ejb-local-ref>
     <resource-ref>
       <res-ref-name>mail/DefaultMail</res-ref-name>
       <res-type>javax.mail.Session</res-type>
       <res-auth>Container</res-auth>
    </resource-ref>
   </session>

   <session>
     <description>
         Session bean handling interface with ra administration web services, uses entity beans
         EndEntityProfileData and AdminPreferencesData
     </description>
     <ejb-name>RaAdminSession</ejb-name>
     <home>se.anatom.ejbca.ra.raadmin.IRaAdminSessionHome</home>
     <remote>se.anatom.ejbca.ra.raadmin.IRaAdminSessionRemote</remote>
     <local-home>se.anatom.ejbca.ra.raadmin.IRaAdminSessionLocalHome</local-home>
     <local>se.anatom.ejbca.ra.raadmin.IRaAdminSessionLocal</local>
     <ejb-class>se.anatom.ejbca.ra.raadmin.LocalRaAdminSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     <ejb-local-ref>
        <description>The Log session bean</description>
        <ejb-ref-name>ejb/LogSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.log.ILogSessionLocalHome</local-home>
        <local>se.anatom.ejbca.log.ILogSessionLocal</local>
        <ejb-link>LogSession</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>The Authorization session bean</description>
        <ejb-ref-name>ejb/AuthorizationSessionLocal</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local-home>se.anatom.ejbca.authorization.IAuthorizationSessionLocalHome</local-home>
        <local>se.anatom.ejbca.authorization.IAuthorizationSessionLocal</local>
        <ejb-link>AuthorizationSession</ejb-link>
     </ejb-local-ref>     
     <ejb-local-ref>
        <description>
          The AdminPreferencesData Entity bean
        </description>
        <ejb-ref-name>ejb/AdminPreferencesDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.AdminPreferencesDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.AdminPreferencesDataLocal</local>
        <ejb-link>AdminPreferencesData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The EndEntityProfileData Entity bean
        </description>
        <ejb-ref-name>ejb/EndEntityProfileDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.EndEntityProfileDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.EndEntityProfileDataLocal</local>
        <ejb-link>EndEntityProfileData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The GlobalConfigurationData Entity bean
        </description>
        <ejb-ref-name>ejb/GlobalConfigurationDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.GlobalConfigurationDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.GlobalConfigurationDataLocal</local>
        <ejb-link>GlobalConfigurationData</ejb-link>
     </ejb-local-ref>
     <security-identity>
        <description></description>
        <run-as>
            <description></description>
            <role-name>InternalUser</role-name>
        </run-as>
      </security-identity>
   </session>


   <entity>
      <description>
            This enterprise bean entity represents a User with accompanying data.
      </description>
      <ejb-name>UserData</ejb-name>
      <home>se.anatom.ejbca.ra.UserDataHome</home>
      <remote>se.anatom.ejbca.ra.UserDataRemote</remote>
      <local-home>se.anatom.ejbca.ra.UserDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.UserDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.UserDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ra.UserDataPK</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>UserDataBean</abstract-schema-name>

      <cmp-field><field-name>username</field-name></cmp-field>
      <cmp-field><field-name>subjectDN</field-name></cmp-field>
      <cmp-field><field-name>cAId</field-name></cmp-field>      
      <cmp-field><field-name>subjectAltName</field-name></cmp-field>
      <cmp-field><field-name>subjectEmail</field-name></cmp-field>
      <cmp-field><field-name>status</field-name></cmp-field>
      <cmp-field><field-name>type</field-name></cmp-field>
      <cmp-field><field-name>clearPassword</field-name></cmp-field>
      <cmp-field><field-name>passwordHash</field-name></cmp-field>
      <cmp-field><field-name>timeCreated</field-name></cmp-field>
      <cmp-field><field-name>timeModified</field-name></cmp-field>
      <cmp-field><field-name>endEntityProfileId</field-name></cmp-field>
      <cmp-field><field-name>certificateProfileId</field-name></cmp-field>
      <cmp-field><field-name>tokenType</field-name></cmp-field>
      <cmp-field><field-name>hardTokenIssuerId</field-name></cmp-field>
      <cmp-field><field-name>keyStorePassword</field-name></cmp-field>
      <cmp-field><field-name>extendedInformationData</field-name></cmp-field>
      <query>
      	<query-method>
      	  <method-name>findBySubjectDN</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
            <method-param>int</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from UserDataBean a WHERE a.subjectDN=?1 AND a.cAId=?2]]>
	</ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findBySubjectEmail</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from UserDataBean a WHERE a.subjectEmail=?1]]>
	</ejb-ql>
      </query>
      <query>
      	<query-method>
      	  <method-name>findByStatus</method-name>
      	  <method-params>
      	    <method-param>int</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from UserDataBean a WHERE a.status=?1]]>
	</ejb-ql>
      </query>
      <query>
        <query-method>
         <method-name>findAll</method-name>
         <method-params></method-params>
        </query-method>
        <ejb-ql>
          <![CDATA[SELECT DISTINCT OBJECT(a) from UserDataBean a]]>
        </ejb-ql>
      </query>

   </entity>

   <entity>
      <description>
            This enterprise bean entity represents global configuration of ra administration.
      </description>
      <ejb-name>GlobalConfigurationData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.GlobalConfigurationDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.GlobalConfigurationDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.GlobalConfigurationDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>GlobalConfigurationDataBean</abstract-schema-name>
      <cmp-field><field-name>configurationId</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>configurationId</primkey-field>

      <query>
      	<query-method>
      	  <method-name>findByConfigurationId</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from GlobalConfigurationDataBean a WHERE a.configurationId=?1]]>
	</ejb-ql>
      </query>
   </entity>

   <entity>
      <description>
            This enterprise bean entity represents a ra admins user preference.
      </description>
      <ejb-name>AdminPreferencesData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.AdminPreferencesDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.AdminPreferencesDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.AdminPreferencesDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AdminPreferencesDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>id</primkey-field>
   </entity>

   <entity>
      <description>
            This enterprise bean entity represents a profile.
      </description>
      <ejb-name>EndEntityProfileData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.EndEntityProfileDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.EndEntityProfileDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.EndEntityProfileDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>EndEntityProfileDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>
      <cmp-field><field-name>profileName</field-name></cmp-field>
      <cmp-field><field-name>data</field-name></cmp-field>
      <primkey-field>id</primkey-field>

      <query>
      	<query-method>
      	  <method-name>findByProfileName</method-name>
      	  <method-params>
      	    <method-param>java.lang.String</method-param>
      	  </method-params>
      	</query-method>
	<ejb-ql>
	  <![CDATA[SELECT DISTINCT OBJECT(a) from EndEntityProfileDataBean a WHERE a.profileName=?1]]>
	</ejb-ql>
      </query>
       <query>
           <query-method>
             <method-name>findAll</method-name>
             <method-params>
             </method-params>
           </query-method>
         <ejb-ql>
           <![CDATA[SELECT DISTINCT OBJECT(a) from EndEntityProfileDataBean a]]>
         </ejb-ql>
       </query>
       
   </entity>
   
  </enterprise-beans>


  <assembly-descriptor>
   <security-role>
      <description>
         This role represents everyone
      </description>
     <role-name>everyone</role-name>
   </security-role>
   <security-role>
      <description>
         This role represents an internal process
      </description>
      <role-name>InternalUser</role-name>
    </security-role>

   <!--
       Method permissions define who can access a given method on a bean.
       Role name internalUser means that the bean methods should NOT be
       accessible from the outside.
       Role name everyone means that the bean methods can be accessible from
       the outside.
       NOTE! Security must be enabled in the container for these settings
       to have any real meaning.
   -->
   <method-permission>
     <role-name>InternalUser</role-name>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>UserData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>GlobalConfigurationData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>AdminPreferencesData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>EndEntityProfileData</ejb-name>
         <method-name>*</method-name>
     </method>
     
   </method-permission>

   <!--
       Transaction settings. Default setting i for *, which is overridden
       for methods with special transactional needs.
       Required is used for mission critical methods, which cannot collide.
       Supports is used for methods which only read data.
   -->
   <container-transaction>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <trans-attribute>Required</trans-attribute>
   </container-transaction>

    <container-transaction>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findUser</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findUserBySubjectDN</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findUserByEmail</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>checkIfCertificateBelongToAdmin</method-name>
     </method>
    <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findAllUsersByStatus</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findAllUsersWithLimit</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findAllUsersByStatusWithLimit</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>checkForCAId</method-name>
     </method>     
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>checkForEndEntityProfileId</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>checkForCertificateProfileId</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>checkForHardTokenProfileId</method-name>
     </method>
    <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>query</method-name>
     </method>
    <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>existsUser</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>existsAdminPreference</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>getDefaultAdminPreference</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>getAuthorizedEndEntityProfileIds</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>getEndEntityProfileIdToNameMap</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>getEndEntityProfile</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>getEndEntityProfileId</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>getEndEntityProfileName</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>existsCertificateProfileInEndEntityProfiles</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>existsCAInEndEntityProfiles</method-name>
     </method>     
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>loadGlobalConfiguration</method-name>
     </method>
     <trans-attribute>Supports</trans-attribute>
   </container-transaction>

 </assembly-descriptor>
</ejb-jar>
