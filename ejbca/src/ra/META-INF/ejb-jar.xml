<?xml version="1.0"?>
<!DOCTYPE ejb-jar PUBLIC
	"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN"
	"http://java.sun.com/dtd/ejb-jar_2_0.dtd">
<ejb-jar>
 <enterprise-beans>

   <session>
     <description>
         Session bean handling user administration, uses UserData entity bean
     </description>
     <ejb-name>UserAdminSession</ejb-name>
     <home>se.anatom.ejbca.ra.IUserAdminSessionHome</home>
     <remote>se.anatom.ejbca.ra.IUserAdminSessionRemote</remote>
     <ejb-class>se.anatom.ejbca.ra.LocalUserAdminSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>

     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>
     
     <!-- Env-entries for starting an external RMI service using SSL --> 
     <env-entry>
        <description>Factory class can dynamically link to external implementation class.</description>
        <env-entry-name>RMIFactory</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>se.walter.cardPersonalization.ra.ejbca.RMIFactoryImpl</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Port used for external RMI registry</description>
        <env-entry-name>registryPortRMI</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1030</env-entry-value>
     </env-entry>
     <env-entry>
        <description>First port used for external RMI objects</description>
        <env-entry-name>startPortRMI</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1031</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Key store file name for server SSL certificate</description>
        <env-entry-name>keyStoreFileName</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>../server/default/conf/SSL.jks</env-entry-value>
     </env-entry>
     <env-entry>
        <description>Key store password</description>
        <env-entry-name>keyStorePassword</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>server</env-entry-value>
     </env-entry>
     <!-- END Env-entries for starting an external RMI service using SSL --> 

     <ejb-local-ref>
        <description>The User entity bean</description>
        <ejb-ref-name>ejb/UserDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.UserDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.UserDataLocal</local>
        <ejb-link>UserData</ejb-link>
     </ejb-local-ref>
 
   </session>
   
   <session>
     <description>
         Session bean handling interface with ra administration web services, uses entity beans GlobalWebConfigurationData,
         AuthorizationData, ProfileData, UserPreferencesData
     </description>
     <ejb-name>RaAdminSession</ejb-name>
     <home>se.anatom.ejbca.ra.raadmin.IRaAdminSessionHome</home>
     <remote>se.anatom.ejbca.ra.raadmin.IRaAdminSessionRemote</remote>
     <ejb-class>se.anatom.ejbca.ra.raadmin.LocalRaAdminSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>

     <ejb-local-ref>
        <description>
          The GlobalWebConfigurationData Entity bean 
        </description>
        <ejb-ref-name>ejb/GlobalWebConfigurationDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.GlobalWebConfigurationDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.GlobalWebConfigurationDataLocal</local>
        <ejb-link>GlobalWebConfigurationData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The UserPreferencesData Entity bean 
        </description>
        <ejb-ref-name>ejb/UserPreferencesDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra..raadmin.UserPreferencesDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.UserPreferencesDataLocal</local>
        <ejb-link>UserPreferencesData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The ProfileGroupData Entity bean 
        </description>
        <ejb-ref-name>ejb/ProfileGroupDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra..raadmin.ProfileGroupDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.ProfileGroupDataLocal</local>
        <ejb-link>ProfileGroupData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          The ProfileData Entity bean 
        </description>
        <ejb-ref-name>ejb/ProfileDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.ProfileDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.ProfileDataLocal</local>
        <ejb-link>ProfileData</ejb-link>
     </ejb-local-ref>     
               
     <security-identity>
        <run-as>
            <role-name>InternalUser</role-name>
        </run-as>
      </security-identity>
   </session>

   <session>
     <description>
         Session bean handling interface with ra authorization, uses entity beans AvailableAccessRules,
         UserGroupData
     </description>
     <ejb-name>AuthorizationSession</ejb-name>
     <home>se.anatom.ejbca.ra.authorization.IAuthorizationSessionHome</home>
     <remote>se.anatom.ejbca.ra.authorization.IAuthorizationSessionRemote</remote>
     <ejb-class>se.anatom.ejbca.ra.authorization.LocalAuthorizationSessionBean</ejb-class>
     <session-type>Stateless</session-type>
     <transaction-type>Container</transaction-type>
     <env-entry>
        <description>JDBC datasource to be used</description>
        <env-entry-name>DataSource</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>java:/DefaultDS</env-entry-value>
     </env-entry>

     <ejb-local-ref>
        <description>
          Available Access Rules
        </description>
        <ejb-ref-name>ejb/AvailableAccessRulesDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.authorization.AvailableAccessRulesDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.authorization.AvailableAccessRulesDataLocal</local>
        <ejb-link>AvailableAccessRulesData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          User Groups
        </description>
        <ejb-ref-name>ejb/UserGroupDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.authorization.UserGroupDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.authorization.UserGroupDataLocal</local>
        <ejb-link>UserGroupData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          Access Rules
        </description>
        <ejb-ref-name>ejb/AccessRulesDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.authorization.AccessRulesDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.authorization.AccessRulesDataLocal</local>
        <ejb-link>AccessRulesData</ejb-link>
     </ejb-local-ref>
     <ejb-local-ref>
        <description>
          User Entities
        </description>
        <ejb-ref-name>ejb/UserEntityDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.authorization.UserEntityDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.authorization.UserEntityDataLocal</local>
        <ejb-link>UserEntityData</ejb-link>
     </ejb-local-ref>                         
     <security-identity>
        <run-as>
            <role-name>InternalUser</role-name>
        </run-as>
      </security-identity>
   </session>   
   
   <entity>
      <description>
            This enterprise bean entity represents a User with accompanying data.
      </description>
      <ejb-name>UserData</ejb-name>
      <local-home>se.anatom.ejbca.ra.UserDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.UserDataLocal</local>
      <home>se.anatom.ejbca.ra.UserDataHome</home>
      <remote>se.anatom.ejbca.ra.UserDataRemote</remote>
      <ejb-class>se.anatom.ejbca.ra.UserDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ra.UserDataPK</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>UserDataBean</abstract-schema-name>
      
      <cmp-field><field-name>username</field-name></cmp-field>
      <cmp-field><field-name>subjectDN</field-name></cmp-field>
      <cmp-field><field-name>subjectEmail</field-name></cmp-field>
      <cmp-field><field-name>status</field-name></cmp-field>
      <cmp-field><field-name>type</field-name></cmp-field>
      <cmp-field><field-name>clearPassword</field-name></cmp-field>
      <cmp-field><field-name>passwordHash</field-name></cmp-field>
   </entity>
   
   <entity>
      <description>
            This enterprise bean entity represents global configuration of ra administration web interface.
      </description>
      <ejb-name>GlobalWebConfigurationData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.GlobalWebConfigurationDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.GlobalWebConfigurationDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.GlobalWebConfigurationDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>            
      <reentrant>False</reentrant>      
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>GlobalWebConfigurationDataBean</abstract-schema-name>
      <cmp-field><field-name>configurationId</field-name></cmp-field>
      <cmp-field><field-name>globalConfiguration</field-name></cmp-field>    
      <primkey-field>configurationId</primkey-field>  
   </entity>
   
   <entity>
      <description>
            This enterprise bean entity represents a ra admins user preference.
      </description>
      <ejb-name>UserPreferencesData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.UserPreferencesDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.UserPreferencesDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.UserPreferencesDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.math.BigInteger</prim-key-class>    
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>UserPreferencesDataBean</abstract-schema-name>
      <cmp-field><field-name>id</field-name></cmp-field>
      <cmp-field><field-name>userPreference</field-name></cmp-field>
       <primkey-field>id</primkey-field>  
   </entity>

   <entity>
      <description>
            This enterprise bean entity represents a profile group.
      </description>
      <ejb-name>ProfileGroupData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.ProfileGroupDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.ProfileGroupDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.ProfileGroupDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>  
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ProfileGroupDataBean</abstract-schema-name>
      <cmp-field><field-name>profileGroupName</field-name></cmp-field>
      <primkey-field>profileGroupName</primkey-field>       
      <ejb-local-ref>
        <ejb-ref-name>ejb/ProfileDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.raadmin.ProfileDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.raadmin.ProfileDataLocal</local>
        <ejb-link>ProfileData</ejb-link>
      </ejb-local-ref>
      <query>
       <query-method>
          <method-name>ejbSelectProfiles</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>  
        </query-method>
        <result-type-mapping>Local</result-type-mapping>
        <ejb-ql>
          SELECT OBJECT(pd) FROM ProfileGroupDataBean pgd, IN(pgd.profilesData) pd WHERE pgd.profileGroupName=?1
        </ejb-ql>        
      </query>    
      <query>
        <query-method>
          <method-name>ejbSelectProfile</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
            <method-param>java.lang.String</method-param>
          </method-params>  
        </query-method>
        <result-type-mapping>Local</result-type-mapping>
        <ejb-ql>
          SELECT OBJECT(pd) FROM ProfileGroupDataBean pdg, IN(pdg.profilesData) pd  WHERE pdg.profileGroupName=?1 AND pd.profileName=?2 
        </ejb-ql>
      </query>          
   </entity>   

   <entity>
      <description>
            This enterprise bean entity represents a profile.
      </description>
      <ejb-name>ProfileData</ejb-name>
      <local-home>se.anatom.ejbca.ra.raadmin.ProfileDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.raadmin.ProfileDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.raadmin.ProfileDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>    
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ProfileDataBean</abstract-schema-name>
      <cmp-field><field-name>profileName</field-name></cmp-field>
      <cmp-field><field-name>profile</field-name></cmp-field>
      <primkey-field>profileName</primkey-field>  
   </entity>   

   <entity>
      <description>
            This enterprise bean entity represents an authorization usergroup.
      </description>
      <ejb-name>UserGroupData</ejb-name>
      <local-home>se.anatom.ejbca.ra.authorization.UserGroupDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.authorization.UserGroupDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.authorization.UserGroupDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>  
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>UserGroupDataBean</abstract-schema-name>
      <cmp-field><field-name>userGroupName</field-name></cmp-field>
      <primkey-field>userGroupName</primkey-field>       
      <ejb-local-ref>
        <ejb-ref-name>ejb/UserEntityDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.authorization.UserEntityDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.authorization.UserEntityDataLocal</local>
        <ejb-link>UserEntityData</ejb-link>
      </ejb-local-ref>    
      <ejb-local-ref>
        <ejb-ref-name>ejb/AccessRulesDataLocal</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>se.anatom.ejbca.ra.authorization.AccessRulesDataLocalHome</local-home>
        <local>se.anatom.ejbca.ra.authorization.AccessRulesDataLocal</local>
        <ejb-link>AccessRulesData</ejb-link>
      </ejb-local-ref>       
   </entity>   
         
   <entity>
      <description>
            This enterprise bean entity represents a user entity.
      </description>
      <ejb-name>UserEntityData</ejb-name>
      <local-home>se.anatom.ejbca.ra.authorization.UserEntityDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.authorization.UserEntityDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.authorization.UserEntityDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ra.authorization.UserEntityPK</prim-key-class>    
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>UserEntityDataBean</abstract-schema-name>
      <cmp-field><field-name>pK</field-name></cmp-field>        
      <cmp-field><field-name>matchWith</field-name></cmp-field>
      <cmp-field><field-name>matchType</field-name></cmp-field>
      <cmp-field><field-name>matchValue</field-name></cmp-field>         
      <primkey-field>pK</primkey-field>     
   </entity>   
   <entity>
      <description>
            This enterprise bean entity represents an access rule.
      </description>
      <ejb-name>AccessRulesData</ejb-name>
      <local-home>se.anatom.ejbca.ra.authorization.AccessRulesDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.authorization.AccessRulesDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.authorization.AccessRulesDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>se.anatom.ejbca.ra.authorization.AccessRulesPK</prim-key-class>    
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AccessRulesDataBean</abstract-schema-name>
      <cmp-field><field-name>pK</field-name></cmp-field> 
      <cmp-field><field-name>directory</field-name></cmp-field>
      <cmp-field><field-name>accessRule</field-name></cmp-field>
      <primkey-field>pK</primkey-field>  
   </entity>   
   
   <entity>
      <description>
            This enterprise bean entity represents available access rules in ra authorization.
      </description>
      <ejb-name>AvailableAccessRulesData</ejb-name>
      <local-home>se.anatom.ejbca.ra.authorization.AvailableAccessRulesDataLocalHome</local-home>
      <local>se.anatom.ejbca.ra.authorization.AvailableAccessRulesDataLocal</local>
      <ejb-class>se.anatom.ejbca.ra.authorization.AvailableAccessRulesDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>             
      <reentrant>False</reentrant>      
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AvailableAccessRulesDataBean</abstract-schema-name>
      <cmp-field><field-name>name</field-name></cmp-field>
      <primkey-field>name</primkey-field>  
   </entity>
  </enterprise-beans> 
    
  <relationships>
     <ejb-relation>
       <ejb-relation-name>ProfileGroupToProfiles</ejb-relation-name>
       <ejb-relationship-role>
         <ejb-relationship-role-name>ProfileGroupData</ejb-relationship-role-name>
         <multiplicity>One</multiplicity>
         <relationship-role-source>
           <ejb-name>ProfileGroupData</ejb-name>
         </relationship-role-source>
         <cmr-field>
           <cmr-field-name>profilesData</cmr-field-name>
           <cmr-field-type>java.util.Collection</cmr-field-type>
         </cmr-field>
       </ejb-relationship-role>
       <ejb-relationship-role>
         <ejb-relationship-role-name>ProfileData</ejb-relationship-role-name>
         <multiplicity>Many</multiplicity>
         <relationship-role-source>
           <ejb-name>ProfileData</ejb-name>
         </relationship-role-source>
       </ejb-relationship-role>
     </ejb-relation>
     
     <ejb-relation>
       <ejb-relation-name>UserGroupDataToUserEntities</ejb-relation-name>
       <ejb-relationship-role>
         <ejb-relationship-role-name>UserGroupData</ejb-relationship-role-name>
         <multiplicity>One</multiplicity>
         <relationship-role-source>
           <ejb-name>UserGroupData</ejb-name>
         </relationship-role-source>
         <cmr-field>
           <cmr-field-name>userEntities</cmr-field-name>
           <cmr-field-type>java.util.Collection</cmr-field-type>
         </cmr-field>
       </ejb-relationship-role>
       <ejb-relationship-role>
         <ejb-relationship-role-name>UserEntityData</ejb-relationship-role-name>
         <multiplicity>Many</multiplicity>
         <relationship-role-source>
           <ejb-name>UserEntityData</ejb-name>
         </relationship-role-source>
       </ejb-relationship-role>
     </ejb-relation>     
     
     <ejb-relation>
       <ejb-relation-name>UserGroupDataToAccessRules</ejb-relation-name>
       <ejb-relationship-role>
         <ejb-relationship-role-name>UserGroupData</ejb-relationship-role-name>
         <multiplicity>One</multiplicity>
         <relationship-role-source>
           <ejb-name>UserGroupData</ejb-name>
         </relationship-role-source>
         <cmr-field>
           <cmr-field-name>accessRules</cmr-field-name>
           <cmr-field-type>java.util.Collection</cmr-field-type>
         </cmr-field>
       </ejb-relationship-role>
       <ejb-relationship-role>
         <ejb-relationship-role-name>AccessRulesData</ejb-relationship-role-name>
         <multiplicity>Many</multiplicity>
         <relationship-role-source>
           <ejb-name>AccessRulesData</ejb-name>
         </relationship-role-source>
       </ejb-relationship-role>
     </ejb-relation>          
  </relationships>            
   
  <assembly-descriptor>
   <security-role>
      <description>
         This role represents everyone
      </description>
     <role-name>everyone</role-name>
   </security-role>
   <security-role>
      <description>
         This role represents an internal process
      </description>
      <role-name>InternalUser</role-name>
    </security-role>

   <!-- 
       Method permissions define who can access a given method on a bean.
       Role name internalUser means that the bean methods shouln NOT be 
       accessible from the outside.
       Role name everyone means that the bean methods can be accessible from
       the outside.
       NOTE! Security must be enabled in the container for these settings 
       to have any real meaning.
   -->
   <method-permission>
     <role-name>InternalUser</role-name>
     <method>
         <ejb-name>UserData</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
   </method-permission>

   <!-- 
       Transaction settings. Default setting i for *, which is overridden 
       for methods with special transactionsal needs.
       Required is used for mission critical methods, which cannot collide.
       Supports is used for methods which only read data.
   -->
    <container-transaction>

     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findUser</method-name>
     </method>
     <method>
         <ejb-name>UserAdminSession</ejb-name>
         <method-name>findAllUsersByStatus</method-name>
     </method>
     <method>
         <ejb-name>RaAdminSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <method>
         <ejb-name>AuthorizationSession</ejb-name>
         <method-name>*</method-name>
     </method>
     <trans-attribute>Supports</trans-attribute> 
   </container-transaction>
   <container-transaction>
     <method>
         <ejb-name>ProfileGroupData</ejb-name>
         <method-name>*</method-name>
     </method>
     <trans-attribute>Required</trans-attribute>   
   </container-transaction>   
   <container-transaction>
     <method>
         <ejb-name>ProfileData</ejb-name>
         <method-name>*</method-name>
     </method>
     <trans-attribute>Required</trans-attribute>   
   </container-transaction> 


 </assembly-descriptor>
</ejb-jar>

